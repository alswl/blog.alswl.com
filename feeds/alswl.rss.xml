<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Log4D - alswl</title><link>https://blog.alswl.com/</link><description></description><lastBuildDate>Fri, 11 Jun 2021 17:53:00 +0800</lastBuildDate><item><title>如何做好 PRR（Production Rediness Review）？</title><link>https://blog.alswl.com/2021/06/prr/</link><description>&lt;p&gt;&lt;img alt="prr" src="https://4ocf5n.dijingchao.com/upload_dropbox/202106/prr.png"/&gt; &lt;small&gt;image from pixabay.com&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;SRE 工程师往往会负责一个具体组件，有时也称为服务或系统（下文都称之为组件）。 需要关注的有这个组件生命周期各类事项：运行状态、日常迭代、变更计划，以及在大促等活动中的筹备、预案等等， 有些组件是团队已经在长期持续维护着的，而有些则是要去新接入。 那么，当 SRE 接手（on-borading）这样组件时， 需要做哪些事项呢， 如何将「接手」这个行为做得有掌控力、顺畅且体面？&lt;/p&gt;
&lt;h2 id="了解组件现状"&gt;了解组件现状&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;第一步永远是了解现状&lt;/strong&gt;，孙子兵法谋攻篇说，知己知彼，百战不殆。 现状包含组件的当前运行状态、环境， 还包含当前 SRE 团队的能力、平台是否可以顺利衔接。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;了解一个组件，可以先以&lt;strong&gt;用户角度进行切入&lt;/strong&gt;。 去理解这个组件提供什么功能，服务对象是谁，服务的规模如何？ 能否将组件进行归类？是属于普通业务系统，还是基础设施？ 如果时间充裕的话，还可以跟这个组件的用户进行几次沟通，咨询，他们关于这个组件使用上的痛点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;近期和长期的规划&lt;/strong&gt;也是需要重点关注的内容。 在组件设计和规划上面有没有什么计划和目标。根据规划我们可以推断出该组件处于何种生命周期。 生命早期的组件要多关注变更和基础能力建设； 成熟期组件往往承担了较为重要的角色，很可能承担了相当的生产流量，这时候变更、可观测性和应急方面就要花更多精力。 生命周期末期的组件则关注点是在维稳，优先考虑如何找到人，并且尽量低成本复用现有能力平台，甚至还要适当关注服务迁移和下线计划。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二步是以技术的视角来切入&lt;/strong&gt;， 分别从架构、依赖、部署、可伸缩能力、容量等角度切入，具体需要回答的问题如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;架构和组件依赖：系统架构设计，功能特性图，模块切分图，核心场景的数据链路图，核心模型图；存储视角的模型图； 历史上架构是否发生变化，驱动变化的原因是什么，有哪些决策变量，这些决策变量未来是否还会继续变化？&lt;/li&gt;
&lt;li&gt;部署结构：物理部署图，有没有考虑异地机房问题？上下游依赖，哪些是强依赖和弱依赖&lt;/li&gt;
&lt;li&gt;Scalable：组件是否是无状态的，是否具备水平扩容能力？如果是有状态的，状态管理基于什么存储系统？流量峰值如何应对？&lt;/li&gt;
&lt;li&gt;容量：当前吞吐水平如何；是否具备大流量下限流能力；流量峰值来时，是否有足够资源扩容；是否具备限流、降级能力？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合 SRE 团队服务的其他组件，还要思考一下有哪些其他组件和当前组件类型一样，有什么差异点？ 有没有特殊的部署要求？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对一个组件需要了解到什么程度才能接手？&lt;/strong&gt; 这里我用几种程度来描述掌控力：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L1 具备作为普通用户的使用能力，应急时能够定位出问题方向，找到合适的人。&lt;/li&gt;
&lt;li&gt;L2 具备资深用户能力，有一定调优能力（Tuning）能力。&lt;/li&gt;
&lt;li&gt;L3 具备处置问题（Trouble Shooting）能力。&lt;/li&gt;
&lt;li&gt;L4 具备架构设计能力和前瞻性，能够给 SWE 反哺输入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在经过一轮 PRR 完整流程之后，SRE 应当至少需要具备 L2 级别能力。 接管一段时间之后，随着对组件不断的了解，SRE 应当具备 L3 级别能力。&lt;/p&gt;
&lt;h2 id="明确日常和应急事项"&gt;明确日常和应急事项&lt;/h2&gt;
&lt;p&gt;了解现状这个动作基本上是以静态的视角来看待组件。 完成之后，还要换成动态视角来看：&lt;strong&gt;有哪些日常操作（Operational）和紧急状态（Emergency）的操作&lt;/strong&gt;？&lt;/p&gt;
&lt;p&gt;需要关注的领域有可观测性、变更、应急预案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可观测性：当前监控系统是否具备 Metrics、Tracing、Logging 三类观测机制接入？是否具备中心化监控能力？
&lt;ul&gt;
&lt;li&gt;告警：接入哪些告警系统？是否拎出了核心 SLI（跌零因子、核心指标），是否具备基于 SLO 进行错误预算控制的能力？ 告警的具体流程如何？是否具备告警抑制降噪能力？告警是否具备定位能力？历史数据是否可追溯？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;变更：目前基于什么工具进行变更？CI CD 流程分别是什么？发布周期是什么样子？配置变更二进制变更是否分离？是否有特性开关？ 存储层面变更是否有考虑？各类变更流程是否有完成自动化？变更过程是否可以灰度？是否具备变更回滚能力。&lt;/li&gt;
&lt;li&gt;应急预案：是否有突发流量处理预案；是否有限流、降级策略？整体不可用之后业务影响如何？流量处理上是否考虑过雪崩场景？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在应急方面，还需要去了解过去历史上出现过哪些的问题&lt;/strong&gt;。 翻看组件的故障复盘文档，了解历史上故障过程，故障原因，对应的 Action 是否落地？ 尤其注意的是要关注 Action 工作机制是阻断式、检查式还是发现式？ 老故障放到当下如果要避免是依赖系统、流程机制还是人工？&lt;/p&gt;
&lt;p&gt;由于 SRE 日常工作主要构成是两类：能力建设和 On-Call。 在了解日常、应急场景事项时，还需要持续思考这些日常事项和应急动作能否基于 SRE 的工具平台、能力平台完成。 按照能力模型等级：手工 -&amp;gt; 工具 -&amp;gt; 自动化 -&amp;gt; 智能化来划分，当前日常、应急动作进入哪个环节了？ SRE 也可以借事修物，借接收这个环节，重新审视自己的各类工具平台，是否满足这些日常、应急动作，能否更快更强更安全更准更好用？&lt;/p&gt;
&lt;h2 id="明确服务范围"&gt;明确服务范围&lt;/h2&gt;
&lt;p&gt;为了保证接手过程的顺畅，以及日后合作的体面，服务范围必须要在接手环节明确清楚。&lt;/p&gt;
&lt;p&gt;什么是服务范围？就是接手之后工作内容的边界和日常合作模式。&lt;/p&gt;
&lt;p&gt;一个最常见的边界划分是。变更：SRE 团队负责 CI / CD 环境建设，而 SWE 团队使用 CI 环境完成日常的部署。 SRE 团队则使用自行建设的 CD 系统进行变更管理。 日常和应急：在日常 Operational 事项和应急中，SRE 会按预案进行处置并保障组件回到最理想状态。 SRE 还需要建设可观测性、应急相关的技术基础设施，对组件全生命周期监控和应急处理。 SRE 最终承诺的组件对外 SLA，并将 SLA 拆解为 SLO 跟 SWE 共背。 在接受过程中很重要的一个工作就是，理清楚组件的 SLI / SLO，并且根据现状跟 SWE 团队商榷出对外承诺的 SLA。&lt;/p&gt;
&lt;p&gt;除了服务范围，SRE 和 SWE 还要建设任务协作机制和沟通机制。 有没有统一的任务记录和流转平台？遇到稳定性相关的反馈如何，如何将需求转化为任务并追踪完成？ 故障相关的 Action 如何追踪落地？一些基础环境变化以及业务上活动变化，是否有统一场合进行同步？ 比较理想的情况是，基于任务管理系统，一个需求/缺陷从提出，到设计，到实现，到变更，SRE 都参与其中。 考虑到成本，现实执行时候可以根据精力、理解成本、重要程度、组件生命阶段进行微调。 有一个简单低成本执行方式，将服务领域组件进行划分后，每个领域派遣一个 SRE 进入对口的 SWE 团队进行追踪： 参加 SWE 团队的周会和日会，并将信息带回 SRE 团队同步。&lt;/p&gt;
&lt;p&gt;谨记，&lt;strong&gt;划分没有统一的标准，不同团队，不同技术成熟度，不同生命周期组件都会导致不一样的边界和合作模式&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id="总结"&gt;总结&lt;/h2&gt;
&lt;p&gt;「接手」是管理的第一步。 在了解现状、明确日常和应急事项、明确服务范围等一系列动作之后， 相信 SRE 已经具备初步掌控力了。有了方法论，还要持续精益求精，将掌控力从 L2 进步到 L4。 想把事情给真正做好，核心是持续学习思考在对应领域的基础技能，并且持续了解客户的需求变化。 保持一专多能，成为随时可以顶上去独当一面的 SRE，这才能避免成为一个工单人。🐶&lt;/p&gt;
&lt;p&gt;&lt;img alt="sre-push-up" src="https://4ocf5n.dijingchao.com/upload_dropbox/202106/sre-push-up.jpg"/&gt; &lt;small&gt;image from Twitter&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;扩展阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sre.google/sre-book/evolving-sre-engagement-model/"&gt;The Evolving SRE Engagement Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sre.google/workbook/non-abstract-design/"&gt;Introducing Non-Abstract Large System Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/products/gcp/how-sres-find-the-landmines-in-a-service-cre-life-lessons"&gt;How SREs at Google find the landmines in a service | Google Cloud Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2021/06/prr/"&gt;https://blog.alswl.com/2021/06/prr/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Fri, 11 Jun 2021 17:53:00 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2021-06-11:2021/06/prr/</guid></item><item><title>Python 的类型系统</title><link>https://blog.alswl.com/2020/06/type-safe-python/</link><description>&lt;p&gt;&lt;img alt="wall" src="https://4ocf5n.dijingchao.com/upload_dropbox/202006/wall.png"/&gt; &lt;small&gt;image from pixabay.com&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;静态类型正在逐渐成为潮流， 2010 年之后诞生的几门语言 Go、Rust、TypeScript 等都走了静态类型路线。 过往流行的一些动态语言（Python、PHP、JavaScript）也在积极引入语言新特性（Type Hint、TypeScript）对静态类型增强。&lt;/p&gt;
&lt;p&gt;我曾使用 Python 开发规模较大的项目，感受过动态语言在工程规模变大时候带来的困难： 在重构阶段代码回归成本异常之高，很多历史代码不敢动。 后来技术栈转到 Java，被类型系统怀抱让人产生安全感。&lt;/p&gt;
&lt;p&gt;最近一年在一个面向稳定性的运维系统耕耘。系统选型之初使用了 Python。 我在项目中力推了 Python 3.7，并大规模使用了 Python 的类型系统来降低潜在风险。&lt;/p&gt;
&lt;p&gt;追根溯源，我花了一些时间了解 Python 在类型系统的设计和实现， 本文以 PEP 提案介绍一下 Python 在类型系统上面走过的路。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="类型系统"&gt;类型系统&lt;/h2&gt;
&lt;p&gt;谈类型系统之前，要厘定两个概念，动态语言和动态类型。&lt;/p&gt;
&lt;p&gt;动态语言（Dynamic Programming Language）则是指程序在运行时可以改变结构。 这个结构可以包含函数、对象、变量类型、程序结构。 动态类型是类型系统（Type System）其中一类，即程序在运行期间可以修改变量类型。 另外一种是静态类型：在编译期就决定了变量类型，运行期不允许发生变化。 类型系统还有一种分法是强类型和弱类型，强类型是指禁止类型不匹配的指令，弱类型反之。&lt;/p&gt;
&lt;p&gt;动态语言和动态类型这两个概念切入点不一样， Python 是一门动态语言，也是动态类型语言，还是强类型的动态类型。 这篇文章主要讨论 Python 语言的类型系统，不会涉及动态语言特性。&lt;/p&gt;
&lt;h2 id="类型安全之路"&gt;类型安全之路&lt;/h2&gt;
&lt;p&gt;行业里面一直有一个争论：动态类型和静态类型哪一种更强大。 静态类型的支持者认为三个方面具备优势：性能、错误发现、高效重构。 静态类型通过编译期决定具体类型可以显著的提高运行期效率； 编译期就能够发现错误，在工程规模逐步变大时候尤其明显； 类型系统可以帮助 IDE 提示，高效重构。 动态类型的支持者则认为分析代码会更简单，减少出错机会，写起来也更为快速。&lt;/p&gt;
&lt;p&gt;Python 开发者们并非没有看到这个痛点， 一系列 PEP 提案应运而生。 在保留 Python 动态类型系统优势前提，通过语法、特性增强，将类型系统引入 Python。&lt;/p&gt;
&lt;p&gt;Python 在 2014 年即提出了 PEP 484，随后提出一个精粹版 PEP 483（The Theory of Type Hints）， 其工程实现 &lt;a href="https://docs.python.org/3/library/typing.html"&gt;typing&lt;/a&gt; 模块在 3.5 发布。 经过 PEP 484，PEP 526，PEP 544，PEP 586，PEP 589，PEP 591 的多次版本迭代，Python 的类型系统已经很丰富。 甚至包含了比如 Structural Subtyping 以及 Literal Typing 这边相对罕见的特性。&lt;/p&gt;
&lt;h3 id="pep-483---核心概念"&gt;PEP 483 - 核心概念&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0483/"&gt;PEP 483&lt;/a&gt; 在 2014 年 12 月发布， 是 Guido 起笔的核心概念版，简明扼要的写清楚 Python 的类型系统建设方向、边界、要和不要。&lt;/p&gt;
&lt;p&gt;PEP 483 没有谈具体工程实现，提纲挈领地讲了一下 Python 类型系统如何对外呈现。 厘定 Type / Class 差别，前者是语法分析概念，后者是运行时概念。 在这个定义下面 Class 都是一个 Type，但 Type 未必是 Class。 举例 &lt;code&gt;Union[str, int]&lt;/code&gt; 是 Type 但并不是 Class。&lt;/p&gt;
&lt;p&gt;PEP 483 还介绍内建基础类型：&lt;code&gt;Any&lt;/code&gt; / &lt;code&gt;Unison&lt;/code&gt; / &lt;code&gt;Optional&lt;/code&gt; / &lt;code&gt;Tuple&lt;/code&gt; / &lt;code&gt;Callable&lt;/code&gt;，这些基础类型支撑上游丰富变化。&lt;/p&gt;
&lt;p&gt;静态类型系统最大的诟病是不够灵活，Go 语言现在还没有实现泛型。 PEP 483 介绍了 Python Generic types 泛型使用方法， 形式如下：&lt;/p&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;a class="sourceLine" id="cb1-1" title="1"&gt;S &lt;span class="op"&gt;=&lt;/span&gt; TypeVar(&lt;span class="st"&gt;'S'&lt;/span&gt;, &lt;span class="bu"&gt;str&lt;/span&gt;, &lt;span class="bu"&gt;bytes&lt;/span&gt;)&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-2" title="2"&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-3" title="3"&gt;&lt;span class="kw"&gt;def&lt;/span&gt; longest(first: S, second: S) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; S:&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-4" title="4"&gt;    &lt;span class="cf"&gt;return&lt;/span&gt; first &lt;span class="cf"&gt;if&lt;/span&gt; &lt;span class="bu"&gt;len&lt;/span&gt;(first) &lt;span class="op"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="bu"&gt;len&lt;/span&gt;(second) &lt;span class="cf"&gt;else&lt;/span&gt; second&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后，PEP 483 还提了一些重要的小特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;别称 Alias&lt;/li&gt;
&lt;li&gt;前置引用 Farward Reference（在定义类方法注解中使用定义类），eg.：解决二叉树 Node 节点中需要引用 Node 问题&lt;/li&gt;
&lt;li&gt;covariance contravariant 协变逆变&lt;/li&gt;
&lt;li&gt;使用注释标记类型&lt;/li&gt;
&lt;li&gt;转型 Cast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PEP 483 的实现，主要依赖了 &lt;a href="https://www.python.org/dev/peps/pep-3107/"&gt;PEP 3107 &amp;ndash; Function Annotations&lt;/a&gt; 这个提案。PEP 3107 介绍 function 注解使用。比如， &lt;code&gt;func(a: a1, b: b1) -&amp;gt; r1&lt;/code&gt; 这段代码， 其中冒号后面的描述符记录会到 func 的 &lt;code&gt;__annotations__&lt;/code&gt; 变量中。&lt;/p&gt;
&lt;p&gt;PEP 3107 效果展示如下，可以清晰看到函数变量存放：&lt;/p&gt;
&lt;div class="sourceCode" id="cb2"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;a class="sourceLine" id="cb2-1" title="1"&gt;&lt;span class="kw"&gt;def&lt;/span&gt; add(x: &lt;span class="bu"&gt;int&lt;/span&gt;, y: &lt;span class="bu"&gt;int&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bu"&gt;int&lt;/span&gt;:&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-2" title="2"&gt;    &lt;span class="cf"&gt;return&lt;/span&gt; x &lt;span class="op"&gt;+&lt;/span&gt; y&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-3" title="3"&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-4" title="4"&gt;add.__annotations__&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-5" title="5"&gt;&lt;span class="co"&gt;# {'x': int, 'y': int, 'return': int}&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS：现在 Python 有了 Decorator 装饰器 / Annotation 注解，其中 Annotation 的设计还和 Java 的 Annotation 同名，一锅粥。&lt;/p&gt;
&lt;h3 id="pep-484---type-hints-核心"&gt;PEP 484 - Type Hints 核心&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0484/"&gt;PEP 484 &amp;ndash; Type Hints&lt;/a&gt; 在 PEP 483 基础上完整讲述 Python 类型系统如何设计，如何使用，细节如何（typing 模块）&lt;/p&gt;
&lt;p&gt;这篇提案开宗明义地点出：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python will remain a dynamically typed language, and the authors have no desire to ever make type hints mandatory, even by convention.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一句话断绝了 Python 在语言级别进化到静态系统的可能。&lt;/p&gt;
&lt;p&gt;提案除了 PEP 483 已经讲解的特性，还有以下吸引我的点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允许通过 Stub Files 为已经存在的库添加类型描述。具体是使用 Python 文件对应的 &lt;code&gt;.pyi&lt;/code&gt; 文件描述 Python 代码的带类型签名。 这个方案和 TS 的 &lt;code&gt;@types&lt;/code&gt; 文件有异曲同工之妙。&lt;/li&gt;
&lt;li&gt;允许使用 &lt;code&gt;@overload&lt;/code&gt; 进行类型重载，这也是活久见，Python 居然可以（在某种意义上）支持重载了。&lt;/li&gt;
&lt;li&gt;介绍了 typing 实现细节，比如使用 abs（Abstract Base Class）构建常见类型的 interface，包括 &lt;code&gt;Sized&lt;/code&gt; / &lt;code&gt;Iterable&lt;/code&gt; 这些基础接口。 我个人认为这个工作量是其实挺大，是给已有的类进行一次依赖梳理。&lt;/li&gt;
&lt;li&gt;介绍了 Python 向后（Python 2）兼容方法，有这么几种策略： 使用 decorator（&lt;code&gt;@typehints(foo=str, returns=str)&lt;/code&gt;）、comments、Stub files、Docstring&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pep-526---变量也安排上了"&gt;PEP 526 - 变量也安排上了&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0526/"&gt;PEP 526 &amp;ndash; Syntax for Variable Annotations&lt;/a&gt; 核心提案是给变量加上 Type Hints 支持。&lt;/p&gt;
&lt;p&gt;和 &lt;code&gt;function annotation&lt;/code&gt; 类似，也是通过注解方式存放。 差异是并不是给实例添加一个 &lt;code&gt;__annotations__&lt;/code&gt; 成员，而是将变量的 annotations 信息存放在上下文变量 &lt;code&gt;__annotations__&lt;/code&gt; 之中。 这个其实也比较好理解：定义一个变量类型时候，这个变量还没有初始化。&lt;/p&gt;
&lt;p&gt;我写一段 Demo 展示一下：&lt;/p&gt;
&lt;div class="sourceCode" id="cb3"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;a class="sourceLine" id="cb3-1" title="1"&gt;&lt;span class="im"&gt;from&lt;/span&gt; typing &lt;span class="im"&gt;import&lt;/span&gt; List&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-2" title="2"&gt;users: List[&lt;span class="bu"&gt;int&lt;/span&gt;]&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-3" title="3"&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-4" title="4"&gt;&lt;span class="co"&gt;# print(__annotations__)&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-5" title="5"&gt;&lt;span class="co"&gt;# {'users': typing.List[int]}&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到，上述 Demo 效果是在上下文变量创建了一个 &lt;code&gt;users&lt;/code&gt;，但这个 &lt;code&gt;users&lt;/code&gt; 其实并不存在，只是定义了类型， 如果运行 &lt;code&gt;print(users)&lt;/code&gt; 会抛出 &lt;code&gt;NameError: name 'users' is not defined&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;观察字节码会更清晰：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; L.   1         0  SETUP_ANNOTATIONS

 L.   1         2  LOAD_CONST               0
                4  LOAD_CONST               ('List',)
                6  IMPORT_NAME              typing
                8  IMPORT_FROM              List
               10  STORE_NAME               List
               12  POP_TOP

 L.   3        14  LOAD_NAME                List
               16  LOAD_NAME                int
               18  BINARY_SUBSCR
               20  LOAD_NAME                __annotations__
               22  LOAD_STR                 'users'
               24  STORE_SUBSCR
               26  LOAD_CONST               None
               28  RETURN_VALUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以清晰看到，并没有创建一个名为 users 的变量，而是使用了 &lt;code&gt;__annotations__&lt;/code&gt; 变量。 注：Python 存储变量使用 opcode 是 &lt;code&gt;STORE_NAME&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;PS：本提案中有不少被否决的提案，挺有趣的，社区提出了很多奇淫巧计。 可以看出社区决策的慎重，存量系统升级的难度。&lt;/p&gt;
&lt;h3 id="pep-544---nominal-subtyping-vs-structural-subtyping"&gt;PEP 544 - Nominal Subtyping vs Structural Subtyping&lt;/h3&gt;
&lt;p&gt;PEP 484 里面类型系统讨论的是 Nominal Subtyping， 这个 &lt;a href="https://www.python.org/dev/peps/pep-0544/"&gt;PEP 544 &amp;ndash; Protocols: Structural subtyping (static duck typing)&lt;/a&gt; 则是提出了Structural Subtyping。 如果非要翻译，我觉得可以称为具名子类型 / 同构子类型。 注意，也有人将 Structural Subtyping 称之为 Duck Typing，其实这两者不相同，具体可以见 &lt;a href="https://en.wikipedia.org/wiki/Duck_typing#Structural_type_systems"&gt;Duck typing / Comparison with other type systems&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Nominal Subtyping 是指按字面量匹配类型，而 Structural Subtyping 则是按照结构（行为）进行匹配， 比如 Go 的 Type 就是 Structural Subtyping 实现。&lt;/p&gt;
&lt;p&gt;这里写个简单 Demo 展示一下后者：&lt;/p&gt;
&lt;div class="sourceCode" id="cb5"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;a class="sourceLine" id="cb5-1" title="1"&gt;&lt;span class="im"&gt;from&lt;/span&gt; typing &lt;span class="im"&gt;import&lt;/span&gt; Iterator, Iterable&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-2" title="2"&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-3" title="3"&gt;&lt;span class="kw"&gt;class&lt;/span&gt; Bucket:&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-4" title="4"&gt;    ...&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-5" title="5"&gt;    &lt;span class="kw"&gt;def&lt;/span&gt; &lt;span class="fu"&gt;__len__&lt;/span&gt;(&lt;span class="va"&gt;self&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bu"&gt;int&lt;/span&gt;: ...&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-6" title="6"&gt;    &lt;span class="kw"&gt;def&lt;/span&gt; &lt;span class="fu"&gt;__iter__&lt;/span&gt;(&lt;span class="va"&gt;self&lt;/span&gt;) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; Iterator[&lt;span class="bu"&gt;int&lt;/span&gt;]: ...&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-7" title="7"&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-8" title="8"&gt;&lt;span class="kw"&gt;def&lt;/span&gt; collect(items: Iterable[&lt;span class="bu"&gt;int&lt;/span&gt;]) &lt;span class="op"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bu"&gt;int&lt;/span&gt;: ...&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-9" title="9"&gt;result: &lt;span class="bu"&gt;int&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; collect(Bucket())  &lt;span class="co"&gt;# Passes type check&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码中定义了 Bucket 这种类型，并且提供了两个类成员。这两个类成员刚好是 Interator 的定义。 那么在实际使用中，就可以使用 Bucket 替换 Iterable。&lt;/p&gt;
&lt;h3 id="pep-586-pep-589-pep-591-持续增强"&gt;PEP 586 / PEP 589 / PEP 591 持续增强&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0586/"&gt;PEP 586 &amp;ndash; Literal Types&lt;/a&gt; 在 Python 3.8 实现，支持了字面量作为类型使用。 比如 &lt;code&gt;Literal[4]&lt;/code&gt;，举一个更有语义的例子 &lt;code&gt;Literal['GREEN']&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我第一反应这和 Scala 里面的 Symbol 非常像，Scala 中写法是 &lt;code&gt;Symbol("GREEN")&lt;/code&gt;。 这个特性使用挺学院派，很容易在 DSL 里面写的天花乱坠。 Scala 官方有说过可能在未来移除 Symbol 特性，建议直接使用常量替代。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0589/"&gt;PEP 589 &amp;ndash; TypedDict: Type Hints for Dictionaries with a Fixed Set of Keys&lt;/a&gt; 给 Dict 增加 key 的 Type，继承 &lt;code&gt;TypedDict&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0591/"&gt;PEP 591 &amp;ndash; Adding a final qualifier to typing&lt;/a&gt; 增加 &lt;code&gt;final&lt;/code&gt; / &lt;code&gt;Final&lt;/code&gt; 两个概念，前者是装饰器，后者是注解，标注该类 / 函数 / 变量无法修改&lt;/p&gt;
&lt;p&gt;至此，Python 3.8 已经具备我们日常需要的类型系统特性（非运行时 😂）。&lt;/p&gt;
&lt;h2 id="总结_1"&gt;总结&lt;/h2&gt;
&lt;p&gt;遗憾的是，&lt;code&gt;typing&lt;/code&gt; 模块在文档鲜明的标注：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Python runtime does not enforce function and variable type annotations. They can be used by third party tools such as type checkers, IDEs, linters, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即：Python 运行时（Intercepter / Code Evaluator）并不支持函数和变量的类型装饰符。 这些装饰符只能由第三方工具检查，比如类型检查器、IDE、静态、Linter。&lt;/p&gt;
&lt;p&gt;这个信息说明了 Python 在类型安全上尝试的局限性。所有的限制、约束都不会发生在运行时， 想要从类型系统中收获工程上面的价值，只能借助第三方工具。&lt;/p&gt;
&lt;p&gt;诚然，Python 社区在竭力向类型系统靠拢，但是这种非语言级别 Runtime 的支持，到底能走多远呢？ Python 缺少金主爸爸，干爹 Red Hat 投入资源也有限。连社区从 Python 2 切换到 Python 3 都还没走完，为何？ 投入产出比太低，新特性缺乏足够的吸引力，替代品太多。&lt;/p&gt;
&lt;p&gt;另一方面，看看竞对们： 动态语言在往静态语言靠拢，而静态语言也在不断吸收动态语言的特性。比如 Java 14 里面的 REPL（Read-Eval-Print-Loop）， Kotlin / Scala 等语言的类型推断（Type Inference）。 也许这种演进方式更能够让用户接受吧。&lt;/p&gt;
&lt;h2 id="参考"&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/typing.html"&gt;typing &amp;mdash; Support for type hints &amp;mdash; Python 3.8.3 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0483/#type-variables"&gt;PEP 483 &amp;ndash; The Theory of Type Hints | Python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0484/#abstract"&gt;PEP 484 &amp;ndash; Type Hints | Python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bernat.tech/the-state-of-type-hints-in-python/"&gt;the state of type hints in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2020/06/type-safe-python/"&gt;https://blog.alswl.com/2020/06/type-safe-python/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 23 Jun 2020 17:54:00 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2020-06-23:2020/06/type-safe-python/</guid><category>Python</category></item><item><title>浅谈 Code Review 之事前准备</title><link>https://blog.alswl.com/2020/03/before-code-review/</link><description>&lt;figure&gt;
&lt;img alt="image from pixabay" src="https://4ocf5n.dijingchao.com/upload_dropbox/202003/computer.jpg"/&gt;&lt;figcaption&gt;image from pixabay&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;随着业务规模扩大、团队组成变复杂，如何降低项目实施风险，降低软件复杂度变得尤为关键。 我从 Martin Flower、Joel Spolsky（&lt;a href="https://book.douban.com/subject/4163938/"&gt;软件随想录&lt;/a&gt; 作者） 等巨匠智慧中寻找解决复杂工程之道，其中 Code Review 是行之有效手段。 我认同 Code Review 价值也是忠实执行者。&lt;/p&gt;
&lt;p&gt;加入蚂蚁以后，我在所接触项目中都大力推广 Code Review。 感谢团队信任和支持，目前 CR 协作进展顺利， 项目 CR 从最早不主动，到现在形成基于模块 Owner 制度 CR 和 Peer Review。 我也曾经在 3 个月内处理完成 700 多个 Pull Request，并在 PR 讨论中中都留下一些有价值讨论。 这里我将自己对 Code Review 一些理解记录下来。&lt;/p&gt;
&lt;p&gt;这一篇先讲讲进入 Code Review 之前需要做准备工作。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="评估团队成熟度"&gt;评估团队成熟度&lt;/h2&gt;
&lt;figure&gt;
&lt;img alt="image from pixabay" src="https://4ocf5n.dijingchao.com/upload_dropbox/202003/team.jpg"/&gt;&lt;figcaption&gt;image from pixabay&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;不管是在一个遗留系统上推广 Code Review，还是在一个新团队推广 Code Review， 起手式不是立马挽起袖子猛干，而是应当观察一下当前所处情况是否允许自己推动这个「艰巨」任务。 最需要观察的是团队成熟度。&lt;/p&gt;
&lt;p&gt;我将团队成熟度粗略分为草台班子、成长型团队、成熟团队。 具体衡量指标可以有成员技术储备、团队成员信任度、团队负责人对工程管控力度。 相信集团内大部分团队处于成长型、成熟型团队。 但如果考虑到生态同学一起协作，或者临时因为紧急项目凑在一起，就比较容易成为「草台班子」。&lt;/p&gt;
&lt;p&gt;如果还停留在草台班子，那就得先在团队内形成一定共识： 包括技术共识和合作模式的共识。 技术共识需要包括：技术栈共识、好代码定义、研发流程共识等。 合作模式共识需要包括：冲突解决机制、职责范围边界、决策机制等。 如果基本共识还没有形成就仓促进入 Code Review，那就容易将一件好事变成工程师战争。&lt;/p&gt;
&lt;p&gt;并不是所有团队、项目都适合无差别引入 Code Review。这么几种情况建议暂缓 Code Review 推广：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老板和同事都不支持甚至反对&lt;/li&gt;
&lt;li&gt;业务重要性低，或者团队都是特立独行高手&lt;/li&gt;
&lt;li&gt;创新业务需要快速上线，这时候适合将这类任务分发给配合度高老团队，或者给高手单兵作战&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当条件不满足时也不用气馁。先成为一个布道师吧，探索一下团队中有没有相似想法的人，了解一下他们担心点和诉求点。 相信只要条件允许，没有人会拒绝提高工程质量。&lt;/p&gt;
&lt;h2 id="构建好代码共识"&gt;构建「好代码」共识&lt;/h2&gt;
&lt;figure&gt;
&lt;img alt="image from pixabay" src="https://4ocf5n.dijingchao.com/upload_dropbox/202003/book.jpg"/&gt;&lt;figcaption&gt;image from pixabay&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Code Review 核心产出物是代码，如何界定代码是好是坏就至关重要。 根据 Bjarne（「C++ Programming Language」作者）、Grady Booch（「面向对象分析与设计」作者）等人定义， 总结下来好代码有这么基本特征（via「Clean Code」）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正确&lt;/li&gt;
&lt;li&gt;可测试&lt;/li&gt;
&lt;li&gt;不重复&lt;/li&gt;
&lt;li&gt;少且简单&lt;/li&gt;
&lt;li&gt;可读&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;深思一下这些基本特征背后道理：代码是人类和机器沟通工具，好代码也要利于人类阅读和再次书写。 人比机器更犯错，机器算力在成倍增长，因此简单易维护重要度逐步增高。 这些朴素道理也正是语言从低级语言进化到高级语言驱动力， 也是近几年高级语言语言特性主打点（类型系统、格式系统、面向人类同步思想异步设计）。&lt;/p&gt;
&lt;p&gt;但上面这几条原则太底层了，无法成为实践标准。 因此行业基于这些公理衍生了不少实践定理，我将其分为工程规约和设计范式两类。&lt;/p&gt;
&lt;p&gt;工程规约包含语言风格规约和应用工程规约。 语言风格规约比较容易理解，开源世界提供了很多选择。硅谷大厂 Google / Facebook / Uber 等都有不少规约提供。 国内还有极具价值的「阿里巴巴 Java 开发手册」，我称之为 50331 ;) （PS：「阿里巴巴 Java 开发手册」不仅有语言风格规约、也有应用工程规约和一部分设计规约）。 这里罗列了一些常见面向语言的 Style Guide。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://google.github.io/styleguide/"&gt;Google Style Guides | styleguide&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;包含 C++ / Object-C / Java / Python / R / Shell / HTML CSS / JavaScript / AngularJS / Common Lisp / Vimscript&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/p3c"&gt;alibaba/p3c: Alibaba Java Coding Guidelines pmd implements and IDE plugin&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript"&gt;airbnb/javascript: JavaScript Style Guide&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uber-go/guide"&gt;uber-go/guide: The Uber Go Style Guide.&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应用工程规约关注点则更为落地：包括依赖管理、配置管理、应用层次结构、对外服务暴露约束，数据建模，文档注释，测试管理， 甚至包含中间件使用规约。 这些规约逐步从「如何表达代码」延展到到「如何管理工程」。 这块发挥空间比较大，中大规模团队会有应用框架组这样团队。 基于应用框架对使用方式方法约束。针对具体业务使用也会给出针对性建议。 这些定理总结出来往往以轻量 Best Practice 和重量级应用框架对外输出。&lt;/p&gt;
&lt;p&gt;这里举两个例子说明一下应用工程规约应该讲清楚哪些问题。 第一个例子 &lt;a href="https://github.com/alibaba/COLA"&gt;alibaba/COLA&lt;/a&gt; 这个项目来说，它约束了整体工程结构，并且明确的通过 Archetype 帮助（约束）用户行为。 第二个例子是 RoR / Django 这类 RoR 框架，他们使用约定大于配置方式，基于 ActiveRecord 这种模式约束了用户如何使用框架， 从 Model、Controller 到 Router，对立面则是 Spring MVC / Flask 这类框架，几乎只提供纯技术特性，不约束开发者行为。&lt;/p&gt;
&lt;p&gt;除了阿里 Java 开发手册，这里提供三个应用工程规范供参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/COLA"&gt;alibaba/COLA: Clean Object-oriented &amp;amp; Layered Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.antfin.com/docs/2/48599"&gt;SOFA 项目工程结构 - 蚂蚁金服金融科技&lt;/a&gt; 和 &lt;a href="https://tech.antfin.com/docs/2/56003"&gt;SOFA 微服务平台概述 - 蚂蚁金服金融科技&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realpython/python-guide"&gt;realpython/python-guide: Python best practices guidebook, written for humans.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比工程规约更难定义的是设计范式，核心点是解决「如何做架构决策」。 设计范式决策过程在系统架构设计和系分设计阶段就应当完成了。 如果设计范式差异性导致代码在 Code Review 阶段出现意见不一。 要么是这个团队过于草台班子，要么是这个项目架构师/负责人在前期设计做的工作太少了。&lt;/p&gt;
&lt;p&gt;当一个团队遵循相近设计范式，意味着他们达到了同一级别技术储 备，并形成了统一自顶向下设计打法。 在 Code Review 过程中，一些范式使用完全可以将 GoF23 / S.O.L.I.D. / DDD 这些术语概念拎出来。 相信 Commiter 和 Reviewer 可以基于业务场景快速达成一致。&lt;/p&gt;
&lt;p&gt;方法论贴在墙上是无法解决开发中中遇到设计问题，在代码中真刀真枪干，Show me the fuck code。&lt;/p&gt;
&lt;h2 id="code-review-沟通协作机制"&gt;Code Review 沟通协作机制&lt;/h2&gt;
&lt;figure&gt;
&lt;img alt="image from pixabay" src="https://4ocf5n.dijingchao.com/upload_dropbox/202003/teamwork.jpg"/&gt;&lt;figcaption&gt;image from pixabay&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;除了工程规约，还有一件事情往往会被忽略，如何解决冲突？ 这个冲突不是指代码 Conflict，而是面对技术方案决策时候交流讨论。&lt;/p&gt;
&lt;p&gt;文无第一武无第二，两个秀才在一起能吵到天翻地覆面红耳赤。 技术层面 Augue 容易陷入我说我有理你说你有理局面。这种情况如何解决？ 没有一个好协作机制，会倒逼 Commiter 和 Reviewer 退缩，不能充分展开讨论。 这是我们不想看见。&lt;/p&gt;
&lt;p&gt;很多时候技术决策就是在 40% 正确性 和 60% 正确性中间选择，看中长期收益和短期收益就可能导致结论不一样。 非黑既白反而不容易有争论。想要促进快速决策，一套冲突解决机制就不可缺少。 因此一定要在事前制定一套冲突解决机制。大部分冲突解决都可以使用这么一套逻辑：数据、逻辑、民主、独裁。 当需要进行某个技术或者产品决策时候，最优先方式是用数据来量化，证明自己观点。 当数据不充分时候，可以进行逻辑归纳推衍形成结论。 当形成逻辑不能服众众说纷纭时候，可以使用民主方式进行裁决。 当民主也无法生效，就需要 Owner / 一号位力排众议，进行独裁决策了。&lt;/p&gt;
&lt;p&gt;CodeReview 有这么几种形式，同步离线、异步离线、同步在线。 处于同步形式 CodeReview 需要尽快处理掉 PR，这时候协作机制一定要干净利索，避免大家在 PR 反反复复来来回回讨论。 如果每个 PR 都要消耗数次来回沟通，我建议将 CR 形式升级到同步在线，拉个会议立刻将事情解决。&lt;/p&gt;
&lt;p&gt;如果在一个实现方案上真无法决策，如果不涉及原则，那我建议使用搁置争议，使用 &lt;code&gt;TODO @commiter what, how, when&lt;/code&gt; 方式先标记意见和处理时间，先行将工程开发往下推进。&lt;/p&gt;
&lt;p&gt;一切准备好了，谢天谢地，终于可以进入 Code Review 阶段了。 我们下篇文章再来讲进入 Code Review 阶段的事情。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2020/03/before-code-review/"&gt;https://blog.alswl.com/2020/03/before-code-review/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 31 Mar 2020 12:13:00 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2020-03-31:2020/03/before-code-review/</guid><category>Code-Review</category></item><item><title>再见 2019</title><link>https://blog.alswl.com/2020/03/2019/</link><description>&lt;p&gt;&lt;img alt="bali" src="https://4ocf5n.dijingchao.com/upload_dropbox/202001/bali.jpeg"/&gt; &lt;smaill&gt;2019 年 9 月摄于巴厘岛&lt;/smaill&gt;&lt;/p&gt;
&lt;p&gt;和老友聚餐时候完了一个游戏，大家各自找了一个词形容自己的 2019。我用的词是「累」和「平凡」。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="关键词累和平凡"&gt;2019 关键词：累和平凡&lt;/h2&gt;
&lt;p&gt;2019 没有进入生门。&lt;/p&gt;
&lt;p&gt;加入阿里之后，组织像榨汁机一样将个体精力榨干。 工作日几乎没有自己的时间。这样画面经常出现：回到酒店先倒头趴一会，然后洗完澡看眼儿子视频就睡觉，醒来又是新的循环。 周末的时间则是交给了家人，今年母亲身体抱恙，我尽量每月都能回一趟老家，以至于陪伴儿子的时间所剩无几。&lt;/p&gt;
&lt;p&gt;工作日典型的一天是：早上 8:00 起床，酒店就餐，9:30 到公司，项目进度同步，杂项计划， 客户落地沟通，协同外部同事（外包 + 外部合作公司）困难事项解决。 下午 14:00 开始细项工作，写设计方案、写一点代码，做一些技术攻坚。 傍晚到 22:00 很可能开会（需求会、设计会），如果不开会就需要写一些设计文档。 另外一周有两个晚上在出差路上。 这还不算有些团队其他突发的小型项目需求过来。为了追求更多价值输出地方，我来者不拒。&lt;/p&gt;
&lt;p&gt;这样算来，每周真正能自由支配时间只有 4-6 小时，这么一点时间刚好够做下工作日志整理，谈不上去学习新知识。 每天最适合学习的时间可能是在出差高铁路和日常打车时坐在后座。&lt;/p&gt;
&lt;p&gt;个人 OKR 则是惨不忍睹，Q4 整个季度累的没有翻开 OKR 帐簿。 回过头来看，Q4 有些量化的产出完全靠日常习惯养成大类目。 最佳 OKR 贡献者居然是 RescueTime 效率大于 80 和工作日工作在案时间 8h 这两条。&lt;/p&gt;
&lt;p&gt;我的 2019 是累的，由内而外。工作、家庭压力扑面而来，而立之年感受到生命的脆弱，以及个体在大组织的身不由己。 彻头彻尾感受到自己的渺小和普通。 王国维说人生有三种境界，我倒是听过人生三种落空：「对父母的期望落空」、「对自己的期望落空」和 「对子女的期望落空」。落空让我重新思考自己定位，欲望和所得是否匹配。&lt;/p&gt;
&lt;h2 id="量化-okr"&gt;量化 OKR&lt;/h2&gt;
&lt;p&gt;照例回顾 OKR，四个季度的 OKR 完成度分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;13.06%&lt;/li&gt;
&lt;li&gt;13.98%&lt;/li&gt;
&lt;li&gt;11.21%&lt;/li&gt;
&lt;li&gt;7.85%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今年开局的两个 Q 的 OKR 完成度还不错，第三个季度则是由于家中有变，一下子打破了平衡。 第四个季度更是在照顾家中和 KPI 冲刺双重打压之下更为惨不忍睹。&lt;/p&gt;
&lt;p&gt;新年的 OKR 怎么计划，我想了几天。 现阶段遇到的工作家庭负载太高了，强行设定高 OKR 不切现实。 与其总是在疲惫追逐，不如调整一下心态，将注意力收拢在少量的目标上。 因此我砍掉了大部分目标明确型 OKR，除了 Daiily 习惯养成，将 OKR 压缩到 2 个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入：读书&lt;/li&gt;
&lt;li&gt;输出：写作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;期待 2020 有收获，拿回生活和工作的主控权。&lt;/p&gt;
&lt;h2 id="年五星书籍推荐"&gt;2019 年五星书籍推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26700379/"&gt;西尔斯亲密育儿百科（2015版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/20424526/"&gt;邓小平时代&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;审时度势（毛后期的隐忍、南巡）；建设制度，不单纯依赖于人；战略家（经济建设大于意识形态斗争，改革开放）；坚定；职业化 （少有私交朋友）；果敢；纪律严明；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/27608239/"&gt;原则&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Ray Dalio 的三观输出，生活和组织的原则适合借鉴&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/1449351/"&gt;呐喊&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;人物刻画深入骨髓&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/30320765/"&gt;写给父母的未来之书 : 抓住0-7岁关键期培养一生的优势&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;期待和孩子一起成长，郝景芳、王立铭两位都是我喜欢的作者。行文理性不偏颇，对我教育观念养成颇有帮助。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/27025492/"&gt;上帝的手术刀 : 基因编辑简史&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;不可多得的科普佳品&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/30396635/"&gt;这就是OKR : 让谷歌、亚马逊实现爆炸性增长的工作法&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;脉络非常清晰，理论实践相结合；从 OKR 演变到 CFR，不只是关注结果，还关注过程；资源 1、2、3、4 非常有用，可操作强，可以作为日常实践的参考&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/30365007/"&gt;重新理解创业 : 一个创业者的途中思考&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;优点 真诚，有案例有故事； 缺点 * 从作者经验谈起，陷入了知识的困境，有些作者觉得想当然的逻辑并不是所有人都了解的；部分内容前后冲突，比如赛道到底做小还是做大。当然商场如战场，没有一贯原则，只有理性的逻辑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/30267664/"&gt;深度思维 : 透过复杂直抵本质的跨越式成长方法论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="附录-12019-okr-清单"&gt;附录 1：2019 OKR 清单&lt;/h2&gt;
&lt;table cellpadding="0" cellspacing="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
Direction
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
D Rank
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Objectives
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
O Rank
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Key Result
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
KR Rank
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Rank Score
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Long Task
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Progress
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Plan
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Done
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Done Norm
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Score Total
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="10"&gt;
&lt;p&gt;
习惯养成
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="10"&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
运动
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每周跑步或游泳 2 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
104
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
6
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0576923076923077
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00115384615384615
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
体重 80kg -&amp;gt; 70 kg
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
10
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
5.1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.51
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0102
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
高效率
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
工作日个人时间 &amp;gt; 1h 每周 3 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
10%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
156
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
45
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.288461538461538
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00288461538461538
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
工作日工作时间 &amp;gt; 8h 每周 4 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
208
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
117
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.5625
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0140625
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
周末个人时间 &amp;gt; 3h 每周周 2 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
104
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
18
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.173076923076923
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00432692307692308
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
RT 值达标（80/60） 每周 6 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■■□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
312
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
246
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.788461538461538
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0315384615384615
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
读书
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每月读书 4 本
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
48
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
15
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.3125
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0125
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
计划和复盘
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
10%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每周做早晨计划 6 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
312
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
233
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.746794871794872
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00448076923076923
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
每日做习惯追踪
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
364
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
193
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.53021978021978
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00318131868131868
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
每周做 Review
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.8%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
52
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
11
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.211538461538462
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0016923076923077
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
影响力
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
写作
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
写作 12 篇
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
12
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0833333333333333
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00416666666666667
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="6"&gt;
&lt;p&gt;
家庭
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="6"&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
旅行
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
10%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
出国旅行 1 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■■■
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0125
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
出沪旅行 2 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
父母
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
回父母家 6 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
7.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■■□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
6
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
15
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.5
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.1875
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
子女
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
60%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每周陪伴小孩 &amp;gt;3h 2 天
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
60%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
9%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
96
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
56
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.583333333333333
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0525
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
制定并执行子女成长计划
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
12
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0833333333333333
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0025
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
笔记 3 本教育书籍
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.333333333333333
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.00999999999999999
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="11"&gt;
&lt;p&gt;
基础技能
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="11"&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
数学
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
看完「统计学习方法」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.3
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.3
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0045
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
看完「什么是数学」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
看完「怎样解题」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
写一篇关于数学的文章
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
英文
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
扇贝背 GAE 词汇（剩余 3600）
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.8%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3600
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
懂你英语打卡两个月 30*2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.8%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
60
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
5
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0833333333333333
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0015
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
写 2 篇英文博客
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.2%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
读完「语法俱乐部」并做完习题
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.2%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
13
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
系统思考
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
笔记「认知科学」6 本书籍
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.5
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.02
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
团队管理
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
笔记「创业和管理」4 本书籍
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
70%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.8%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■■□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.75
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.021
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
写 2 篇相关文章
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.2%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="6"&gt;
&lt;p&gt;
专业技能
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="6"&gt;
&lt;p&gt;
15%
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
综合技能
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
关注 3 个会议（InfoQ、AS、？）
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.4%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
云原生相关技术学习（待定）
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
60%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3.6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
语言和基础
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
60%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
笔记「Java Concurrency in Practice」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.7%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.0054
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
读完「七周七并发」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
10%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.9%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
笔记「架构思想」4 本书
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.7%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
读完「自己动手写Java虚拟机」或者类似书
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.7%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="5"&gt;
&lt;p&gt;
面向未来技能
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="5"&gt;
&lt;p&gt;
15%
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
机器学习
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
60%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
学完 Coursera Machine Learning
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
4.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
学习 Google Machine Learning Crash
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.7%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.2
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0%
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
学完「集体编程智慧」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.8%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■■■
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.018
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
数据分析
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
笔记「深入浅出数据分析」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
■■■■
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
0.03
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
笔记「利用 Python 进行数据分析」
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="附录-22020-okr-清单"&gt;附录 2：2020 OKR 清单&lt;/h2&gt;
&lt;table cellpadding="0" cellspacing="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
Direction
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
D Rank
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Objectives
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
O Rank
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Key Result
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
KR Rank
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Rank Score
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Long Task
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Is Done
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
Plan
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="8"&gt;
&lt;p&gt;
习惯养成
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="8"&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
运动
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每周跑步或游泳 2 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
104
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
高效率
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
工作日个人时间 &amp;gt; 1h 每周 3 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
10%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1.5%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
156
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
工作日工作时间 &amp;gt; 8h 每周 4 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3.75%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
208
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
周末个人时间 &amp;gt; 3h 每周周 2 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3.75%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
104
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
RT 值达标（80/60） 每周 6 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
312
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
计划和复盘
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="3"&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每周做早晨计划 6 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.7%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
312
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
每日做习惯追踪
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2.7%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
364
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
每周做 Review
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
40%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
3.6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
52
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
家庭
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="4"&gt;
&lt;p&gt;
20%
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
旅行
&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan="2"&gt;
&lt;p&gt;
10%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
出国旅行 1 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
出沪旅行 2 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
50%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
1%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
2
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
父母
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
30%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
回父母家 12 次
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
6%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
12
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
子女
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
60%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每周陪伴小孩 &amp;gt;3h 2 天
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
12%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
96
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
输入
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
读书
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
每月读书 4 本出笔记
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
48
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
输出
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
写作
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
写作 24 篇
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
25%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
V
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
□□□□
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
24
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
100%
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;PS：文章成于 2020-01-19。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2020/03/2019/"&gt;https://blog.alswl.com/2020/03/2019/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 29 Mar 2020 23:48:00 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2020-03-29:2020/03/2019/</guid><category>Review</category></item><item><title>漫谈前后端天花板</title><link>https://blog.alswl.com/2019/07/frontend-backend-ceiling/</link><description>&lt;blockquote&gt;
&lt;p&gt;在阿里，我们不得不承认一个事实：前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。 在阿里，虽然前端的工作已 经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。&lt;/p&gt;
&lt;p&gt;- 玉伯 2013 年 &lt;a href="https://github.com/lifesinger/blog/issues/141"&gt;阿里前端的困局与突围&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure&gt;
&lt;img alt="ceilling" src="https://4ocf5n.dijingchao.com/upload_dropbox/201907/ceilling.jpg"/&gt;&lt;figcaption&gt;ceilling&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;small&gt;image from &lt;a href="https://pixabay.com/photos/abbey-arches-architecture-building-1851493/"&gt;Abbey Arches Architecture - Free photo on Pixabay&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="和-g-总论道"&gt;和 G 总论道&lt;/h2&gt;
&lt;p&gt;前几天和某大厂前端负责人 G 聊职业生涯发展，聊着聊着就谈到了前端和后端职业天花板。 我表达了自己观点：后端职业天花板更高，这是由职能细分决定。&lt;/p&gt;
&lt;p&gt;后端（服务端）概念比较宽泛，常见分类可以有应用开发工程师、中间件工程师、甚至可以包含运维、数据工程师、算法工程师。 本文我只将后端工程师限定在应用开发工程师以及衍生的框架、库开发工程师。 前端这边由于引入大前端概念，概念也比较广，包含：Web 前端、移动端（iOS + Android 客户端）、桌面端（PC 端）。 我们也限定在这几个方向的应用开发。&lt;/p&gt;
&lt;p&gt;有些同学可能不服气，现在基于 Node.js 也能写后端应用，并且已经有越来越多成熟产品。 单页应用推动了 React / React Native / Vue 等技术发展，这类前端框架也需要基于 MVC / MVVM 设计模式管理复杂数据流。 在端场景，Hybrid 应用愈发成熟，并且在一些特定领域比如 AI，iOS 也引入 Core ML 技术。 这样天花板还不够高么？&lt;/p&gt;
&lt;p&gt;是的，尽管前端近年发展迅猛，探索出多种新技术，从更广泛端技术来看，Android / iOS 也迎来爆炸式发展， 几乎隐隐有势头盖过后端趋势。 随着业务复杂度提升， Web Frontend / Android / iOS 开发困难度愈发提升；随着科技普惠云计算发展， 技术门槛会进一步降低，当前前端工程师会有更宽阔空间。 但是仍然认为后端是更难掌握，职业天花板更高。&lt;/p&gt;
&lt;p&gt;听我一一道来。&lt;/p&gt;
&lt;h2 id="技术复杂度"&gt;技术复杂度&lt;/h2&gt;
&lt;p&gt;为了避免争执，我们先来看看如何评估一项技术复杂度，拎出三个衡量技术复杂度维度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务复杂度（业务结构复杂度、业务类型复杂度、逻辑复杂度、流程复杂度、颗粒度 x 关联业务复杂度、外部系统合作复杂度）
&lt;ul&gt;
&lt;li&gt;量化指标：模型数量、模型属性数量、业务流程长度、业务条件分支数量、外部合作系统数量&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;数据量复杂度（流量级别、业务数据量级、数据增长速度）
&lt;ul&gt;
&lt;li&gt;量化指标：模型实例数量、服务用户数量 x 用户使用频率、增长率&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;服务时效性（对外提供服务 SLA）
&lt;ul&gt;
&lt;li&gt;量化指标：状态数量、面向个体服务时间、面向群体服务时间、在线要求可用率&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于服务时效性是一个动态概念，先基于业务复杂度和数据量复杂度画个简图：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    ^
  D |    +-------------+     +-------------+
  a |    |             |     |             |
  t |    |    Big      |     |  Complex    |
  a |    |             |     |             |
    |    +-------------+     +-------------+
  s |                                 
  i |                                 
  z |    +-------------+     +-------------+
  e |    |             |     |             |
    |    |    Simple   |     | Diversified |
    |    |             |     |             |
    |    +-------------+     +-------------+
    |
    +----------------------------------------&amp;gt; 
                                    Business Logic&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;前端位于左下（可能会涉及到 Diversified（多样性），但即便如此，客户端 Client 无数据持久化，复杂度有限）&lt;/li&gt;
&lt;li&gt;后端位于右上（基础设施工程师支持 Big，应用开发工程师支撑 Deversified（多样性））&lt;/li&gt;
&lt;li&gt;数据处于右上（基础设施工程师支持 Big，数据开发工程师支撑 Deversified（多样性））&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="后端难"&gt;后端难&lt;/h2&gt;
&lt;p&gt;为什么后端更难挑战更大，有以下原因：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;贴近业务&lt;/strong&gt;。后端是业务逻辑忠实实现方和执行者，所有业务链路、业务分支、主流程和旁路都需要在后端有实现。 由于现在用户体验方面要求逐步提高，确实有不少业务链路和检查动作在前端呈现出来。 但这种链路即便有呈现，后端还是要进行建模、检查校验。 反观前端阿喀琉斯之踵，运行在端（浏览器 / 手机端），对用户透明，会面临安全问题。 从而导致数据无法持久化（即便持久化也是为了性能，这些数据不可信）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可用性要求高&lt;/strong&gt;。可用性体现在两个方面，实时可用性（也就是我们常说的 SLA）与面向未来设计（或者说向前兼容）。 前者要求系统是可以持续提供服务，这就带来了高可用、可扩容要求。这对整体系统设计带来了巨大挑战。 单点算力可用性增强的模式已经被证明不可行，分布式是被证明的可行道路。 后者对设计者提出了更高要求，系统需要兼容过去，还要给未来变化留下口子，当变化来临时候才可以低成本实现。 反观端上技术，本地无状态，无持久化数据，因此既没有实时可用性要求，也没有面向未来设计要求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抽象程度高&lt;/strong&gt;。抽象是为了解决业务复杂性和易变性，将具体业务以合理可扩展方式设计好。 这也是贴近业务的直接体现。 为了解决复杂业务下面抽象程度高问题，工程界提出了许多方法论。 设计层面有 DDD 领域驱动设计、微服务设计等；工程实施层面有各种设计模式、SOLID 开发模式、重构方法论等。 端上技术更多着眼在 UI 层面方法论：Reactive、Flux 数据流、动态热更新等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上下游空间大&lt;/strong&gt;。后端处于研发链路中间，前承端，后启运维数据算法，横接运营产品项管。 从我周围样本观察，当项目缺乏负责人时候，往往会从后端开发工程师挑选资深一员作为项目 Owner。 从人数上来看，后端往往也占据开发大的大多数。 由于上下游空间大，后端工程师职业天花板也会更开阔。转 DevOps / SRE / 算法 / 数据的后端开发工程师比比皆是。 这种转换非常自然，也提高了后端工程师的天花板。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;贴近运行系统&lt;/strong&gt;。当后端工程师部署他的项目，推动上线后，他往往需要对这个应用的运行环境有更多了解。 对于后端应用来说，生命周期可能是开发一两周，运行一两年。这种模式下面倒逼后端对 Linux 服务器环境有更多了解。 否则在生产环境运行时候，缺乏相关技能和工具掌握遇到问题就会束手无策。需要了解的还不仅仅是 Linux 部署环境， 还有相关的基础设施： RPC 系统、Queuing 队列系统、缓存系统、容器化环境等等基础设施。&lt;/p&gt;
&lt;h2 id="给前端的建议"&gt;给前端的建议&lt;/h2&gt;
&lt;p&gt;我看到有不少前端工程师们已经开始尝试突破天花板，进行「升维攻击」。我将其总结为这么三条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;向后走：从直接实现业务升级往后端方向推进，从加速整体研发效率&lt;/li&gt;
&lt;li&gt;服务上下游：形成前端中台，比如无痕数据打点系统，飞冰、AntDesign（包括集团内部 BigFish / Basement）&lt;/li&gt;
&lt;li&gt;服务前端：从服务业务变为服务其他前端工程师，提供前端框架、Hybrid 框架、工具链、CICD 系统服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS：前端还有一类发力方向 - 复杂 UI 产品，比如 Web Editor，Google Doc、Office Online。 随着大前端发展，这方面的空间已经大大扩充，Web / App 前端已经可以基于 Flutter / Electronic 等技术做 PC 端应用。 但这类应用数量较少，开发技能点和常见应用开发差异较大，不作为常规路线讨论。&lt;/p&gt;
&lt;p&gt;我给前端同学的建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要被手头事情限制住，也不要被 Title 限制住，开阔自己的技术视野，和上下游多合作，去理解上游业务和下游技术点。 这个建议对后端工程师同样合适。&lt;/li&gt;
&lt;li&gt;往下深扎技术，往上学习架构知识。IE 优化技巧会过期，但是浏览器渲染流程和算法不会过期； HTTP1.1 到 HTTP 2.0 过程中，协议会变化，但是定义问题，解决问题思路不会过期； iOS / Android 之上语言会转变，但是基础资源管理、IO 模式、TCP 协议不会过期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;蚂蚁体验技术使用另外一种模式规避了这个问题，将前端概念从「端」扩展到「体验技术」。 格局一下子扩大，不再限于在用户浏览器运行，关注边界扩大到用户使用的方方面面。 他们推出的 语雀 Lark、AntDesign 以及背后支持的 Basement 开发者技术栈也确实给使用者带来更好体验， 加速了开发者速度，降低了前端工程师开发门槛，完整诠释了「体验技术」意义。 关于「体验技术部」故事，你可以看 &lt;a href="https://zhuanlan.zhihu.com/p/64214581"&gt;那些年的体验技术部 - 知乎&lt;/a&gt; 了解更多。&lt;/p&gt;
&lt;h2 id="后端天花板"&gt;后端天花板&lt;/h2&gt;
&lt;p&gt;后端开发工程师瓶颈是什么？我认为是业务理解，而业务理解抓手是数据理解。 最朴素业务理解是帮助产品经理梳理需求，将其所构想产品工程化实现出来。 但以更高要求来对待时候，单纯实现就远远不够了，要考虑成本和收益。 比如用户 Landing 页面优化，投入一周时间进行开发这是成本，那么期望到收益是什么？ 更高的用户转化率。后端工程师是否有意识对这些数据进行建模、AB 测试、跟踪结果，进而帮助产品、运营进行决策？&lt;/p&gt;
&lt;p&gt;除了完成功能，数据理解还有另外一个层面意义。在数据量规模到达一个量级时候，系统所追求不仅仅是可用、稳定， 还需要从沉淀数据中挖掘业务内在关系，将数据模型展现出来。这个工作内容已经超越了后端工程师职责， 属于数据工程师（还有一些叫法数仓管理员）职责。他们工作核心内容就是通过对业务数据挖掘，发现问题、解决问题，给予业务指导。 手段是建立体系化量化指标，将沉淀数据和日常业务关联。&lt;/p&gt;
&lt;p&gt;后端是否可能被取代？我认为传统应用开发工程师被取代概率高，未来 10 年左右时间可以被取代。 为什么这么说，什么工种可以被取代？越标准化的工种越容易被取代。应用业务开发经过这些过程：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;产品需求构思（产品经理拍脑子 / 数据决策）&lt;/li&gt;
&lt;li&gt;需求分析&lt;/li&gt;
&lt;li&gt;需求实现&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;开发&lt;/li&gt;
&lt;li&gt;上线运行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用开发工程师参与了 2 3 4 5 6 部分， 每个部分产出物已经逐步呈现出标准化势态。比如需求分析文档+系统设计文档，已经具备标准化雏形（离岸外包也是基于这个来开发）。 进一步想，如果一门语言描述能力足够强，需求分析阶段即可将实现完成。4、5、6 也可以被自动化设施所取代。 应用开发工程师在整个工程师生态里面是手的存在，而非脑存在。&lt;strong&gt;手总是可以通过工具增强所替代&lt;/strong&gt;。 我们设想一种场景，让业务方自己写 SQL，然后根据 SQL 生成标准化的 DAO 模块、Service 模块、View 模块、配套上合适的 UI 界面， 就可以拿出去直接用了。&lt;/p&gt;
&lt;p&gt;后端如何才能不被取代呢？ 在复杂度上面施力。复杂度可以往两个方向发展，对业务有更深刻理解成为业务专家。 支持大数据量和提供高可用性，成为基础设施专家，比如分布式存储、搜索、算法、芯片、网络、效能*。&lt;/p&gt;
&lt;p&gt;另外一种升维办法是成为技术团队技术管理者，融合技术领导者和团队管理者两种技能。&lt;/p&gt;
&lt;h2 id="总结"&gt;总结&lt;/h2&gt;
&lt;p&gt;后端天花板更高，但之所以高并非语言等技术因素带来的，本质原因是贴合业务更近、需要处理数据更多、有状态并且需要长期提供服务。 前端突破天花板就不是前端，后端突破天花板就不是后端，不要被角色限定自己学习内容，不要给自己划定边界。&lt;/p&gt;
&lt;p&gt;最后提一个问题，现在越来越火的 Serverless，如果后端来建设该如何建设？如果前端来建设该如何建设？&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2019/07/frontend-backend-ceiling/"&gt;https://blog.alswl.com/2019/07/frontend-backend-ceiling/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Thu, 04 Jul 2019 19:58:28 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2019-07-04:2019/07/frontend-backend-ceiling/</guid><category>Frontend</category><category>Backend</category></item><item><title>从 2018 到 2019</title><link>https://blog.alswl.com/2019/04/2018/</link><description>&lt;figure&gt;
&lt;img alt="yuan-ming-yuan" src="https://4ocf5n.dijingchao.com/upload_dropbox/201904/yuan-ming-yuan.png"/&gt;&lt;figcaption&gt;yuan-ming-yuan&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;图片摄于北京圆明园&lt;/p&gt;
&lt;p&gt;怎么描述 2018？我找了三个关键词。&lt;/p&gt;
&lt;h2 id="忙拥抱变化新生"&gt;2018 忙、拥抱变化、新生&lt;/h2&gt;
&lt;p&gt;我的 2018 年从北京拉开帷幕，1 月份时候团队几个小伙伴一起去给北京研发中心同学做了一次技术分享。 TL 余老师带我们三个架构师逛了圆明园，北京小伙伴热情招待我们吃了东来顺火锅。 在天津时候还第一次从海河冰面渡河。只是没想到，这次旅行成了我在沪江最后一次团建，&lt;/p&gt;
&lt;p&gt;当时我已经有一些想法离开沪江，一些问题逐步暴露出来： 沪江工作舒适、做事情自由，但技术上缺乏量级挑战，制度上内部流程僵化，部门利益关系错综复杂。 我深信业务、技术是互相引领促进，在这种环境下无法全力施展拳脚。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;恰好此接到蚂蚁金服 Sourcing 电话，于是开始走面试流程。事后证明，这是不靠谱沟通流程， 无准备状态的我让一些细节问题考倒(这也让我养成了 Sourcing 候选人时候都会问一句最近有没有做过面试准备)。 最终我还是走完了流程，以（我以为的） SRE 身份加入了蚂蚁。这里隐含一个巨大风险， 当时我对蚂蚁金服体系不够了解，这也给之后「拥抱变化」埋下了伏笔。&lt;/p&gt;
&lt;p&gt;加入蚂蚁之后一个月后，第一个项目就让我大跌眼镜，我成为了一个增删改查工程师，而且是在技术债务较为严重项目上开展。 这个项目疲惫不堪，倒不是加班加点，而是在业务进度压迫之下必须囫囵吞枣实现功能， 不顾工程设计缺乏，框架使用方式不标准，带来大量低效劳动重复劳动。 期望成为 SRE 做 Infrastructure 的我一下子就蒙逼了，我先压下不满和震惊，抱着学习态度先投入完成交给自己的任务。&lt;/p&gt;
&lt;p&gt;9 月儿子出生，我似乎做足了准备，但仍然发现准备不充分。 怀抱红彤彤的小精灵，我该如何做好父亲一角色？ 这触发了我对家庭关系、父子关系的思考。我能给他提供什么，带来什么？我希望他成为什么样的人？ 坎贝尔的千面英雄里提到的英雄之旅给我深刻印象。 人生历程是一个少年成为英雄的过程：懵懂、自我、挑战、出走、成长、灭龙、回归。 期望在他英雄之旅上，我能成为他的后盾，他的炮火，也能在他疲惫时候给他温暖归处。&lt;/p&gt;
&lt;p&gt;陪产假很快结束，我重新回到工作中节奏仍然没有能控制起来，做了两个体量并不大的项目。 「拥抱变化」这个词我很喜欢，这是一种 VUCA 下面抵抗不确定性生存策略。 我不想让信任我的伙伴失望，也不愿意轻易放弃，持续想在业务场景中挖掘技术能够发挥价值。 18 年末我抓到一个机会。尽管这个想法还不够完善，但这个机会是我能够发挥价值重大突破口。&lt;/p&gt;
&lt;p&gt;纵观 18 年，我职业生涯面临了巨大拐点，做了一个选择。 这也许不是最好，但是回头看 19 年沪江经历了一场巨大人事变动，至少这不是最差。&lt;/p&gt;
&lt;h2 id="量化-okr"&gt;量化 OKR&lt;/h2&gt;
&lt;p&gt;语言力量是软弱的，我直接用量化数字来回顾 2018。 很不幸，按照年初计划 OKR 来看，这一年我的评分特别打脸。 原因有如下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;照顾家庭，照顾夫人和照顾小孩&lt;/li&gt;
&lt;li&gt;工作环境变化，需要额外精力投入&lt;/li&gt;
&lt;li&gt;目标设定较高，有妄念&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;量化表格附在本文最后。 完成度按照每季度如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5.88%&lt;/li&gt;
&lt;li&gt;12.02%&lt;/li&gt;
&lt;li&gt;6.61%&lt;/li&gt;
&lt;li&gt;2.66%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二季度是在沪江最后一段旅程，这段时间我个人时间充沛，做了不少事情。 完成了 ProgFun 学习，尽管狼狈仍然跑完了开智写作课。 第三季度开始我产能大幅降低，主要受家庭影响。 第四个季度我精力大量投入在工作上面，仅剩一些精力优先放到家庭，进一步导致个人事项度降低。 工作时间大幅增加，每周用 1 天时间陪伴家人，另外有一天时间用来个人事项处理。 个人时间由以前每个月 70（&lt;code&gt;(2*5+6*2)*4&lt;/code&gt;）降低到 24（&lt;code&gt;6*4&lt;/code&gt;），几乎只有之前 1/3 时间。&lt;/p&gt;
&lt;p&gt;接下来是 2019 年 OKR 安排。从个人发展方向上来说 18 年安排问题在于贪心。综合个人发展和精力分配， 以去年完成度为参考，新年任务安排需要调整为 1/4。&lt;/p&gt;
&lt;p&gt;19 年 OKR 有这么几个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;平衡好工作、家庭和个人三方面时间分配&lt;/li&gt;
&lt;li&gt;个人 OKR 在 2018 年基础上做减法，而不是持续增加负荷&lt;/li&gt;
&lt;li&gt;精力减少，更要安排事项优先级，避免贪多嚼不烂
&lt;ul&gt;
&lt;li&gt;去除几个主题：区块链、经济学、Scala、分布式数据库、Go&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;从个人长期事业规划出发，结合当前工作需求，圈定专项
&lt;ul&gt;
&lt;li&gt;数据分析、机器学习上面，Java 语言&lt;/li&gt;
&lt;li&gt;数学、英语还是持续投入&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2019 OKR 具体表格在附录。&lt;/p&gt;
&lt;p&gt;有一点比较感慨，想做事情多，但是真正计算下来，尤其是加入阿里之后，个人能够分配时间真是少之又少。 真想好好珍惜学生时代以及以前工作不那么繁忙时光。&lt;/p&gt;
&lt;h2 id="书影音"&gt;2018 书影音&lt;/h2&gt;
&lt;p&gt;聊一些轻松一些话题，推荐一下我 2018 年使用的不错物品、阅读书籍和观影。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个人好物
&lt;ul&gt;
&lt;li&gt;Nitendo Switch + 塞尔达传说&lt;/li&gt;
&lt;li&gt;天猫精灵：前后购入 4 个，小朋友最爱&lt;/li&gt;
&lt;li&gt;小米之家运动鞋：物美价廉&lt;/li&gt;
&lt;li&gt;MacBook Pro 摄像头遮挡贴：https://detail.tmall.com/item.htm?id=555224375945&lt;/li&gt;
&lt;li&gt;3D 电影专用偏光镜片：https://detail.tmall.com/item.htm?id=534639536731&lt;/li&gt;
&lt;li&gt;自带名字定制红包：https://item.taobao.com/item.htm?id=561176419636&lt;/li&gt;
&lt;li&gt;SONY 微单 a6500，用一只 a6500 置换了母亲 Canon 6DII，微单确实方便携带，适合我这种随手拍用户&lt;/li&gt;
&lt;li&gt;FUJIIRYOKI JP870 按摩椅：用过之后，其他按摩椅都是渣渣 https://item.jd.com/11295717231.html&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;书（四星以上，去掉虚构类书籍）
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/22993407/"&gt;跑步，该怎么跑？ (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/1014561/"&gt;古文观止 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/4916545/"&gt;车主生活从这里开始 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26677905/"&gt;打破自我的标签 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/6538430/"&gt;人类群星闪耀时 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26931430/"&gt;算法新解 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26880855/"&gt;进化 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/3748247/"&gt;把你的英语用起来！ (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/3813669/"&gt;民主的细节 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/3655433/"&gt;西尔斯怀孕百科 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/24891766/"&gt;怀得上，生得下 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26745255/"&gt;深入理解Nginx（第2版） (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/1393724/"&gt;楚辞 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26759508/"&gt;硅谷钢铁侠 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/30186025/"&gt;风格感觉 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/25742200/"&gt;Google软件测试之道 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/25782902/"&gt;反脆弱 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/27039508/"&gt;企业IT架构转型之道：阿里巴巴中台战略思想与架构实战 (豆瓣)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;影（五星）
&lt;ul&gt;
&lt;li&gt;黑镜 第一季&lt;/li&gt;
&lt;li&gt;新世纪福音战士&lt;/li&gt;
&lt;li&gt;猫鼠游戏&lt;/li&gt;
&lt;li&gt;至暗时刻&lt;/li&gt;
&lt;li&gt;追风筝的人&lt;/li&gt;
&lt;li&gt;舌尖上的新年&lt;/li&gt;
&lt;li&gt;2001太空漫游&lt;/li&gt;
&lt;li&gt;当我们离开地球：美国国家航空航天局的太空行动&lt;/li&gt;
&lt;li&gt;荒岛余生&lt;/li&gt;
&lt;li&gt;人生一串&lt;/li&gt;
&lt;li&gt;卢旺达饭店&lt;/li&gt;
&lt;li&gt;末代皇帝&lt;/li&gt;
&lt;li&gt;阿波罗13号&lt;/li&gt;
&lt;li&gt;河西走廊&lt;/li&gt;
&lt;li&gt;造梦者&lt;/li&gt;
&lt;li&gt;我不是药神&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="初春"&gt;2019 初春&lt;/h2&gt;
&lt;p&gt;2019 已经过去一个季度了，我刚结束为期一个月 9116 项目冲刺。 终于可以缓口气，在四月初带小孩出行踏青看落樱。 尽管偶尔疲惫不堪，偶尔对自己工作不满，但仍然对未来充满信心和期待。 机会时代的智慧不仅仅只是等待和希望，更应该是探寻和希望。&lt;/p&gt;
&lt;h2 id="附录-2018-okr-表格"&gt;附录 2018 OKR 表格&lt;/h2&gt;
&lt;div&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table cellpadding="0" cellspacing="0"&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Direction&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;D Rank&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Objectives&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;O Rank&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Key Result&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;KR Rank&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Rank Score&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Long Task&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Is Done&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Plan&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Done&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Done Norm&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Score Total&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;掌握面向未来的技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;机器学习的基本技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;80%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学完 Coursera Machine Learning&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;80%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;6.4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学完「集体编程智慧」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;掌握区块链知识&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;Bitcoin / ethereum / ada / iots / eco&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.002&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读 2 本区块链的书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.005&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="19"&amp;gt;
                &amp;lt;p&amp;gt;掌握基础的技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="19"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;数学&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;15%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;看完「数学之美」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;看完「什么是数学」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.3&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.3&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0018&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;看完「如何解题」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0006&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写一篇关于数学的文章&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;弄清楚概率论的研究对象、范畴、方法论&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;提升英文水平&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;扇贝背完 TOFEL 词汇&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■■&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.01&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;扇贝背 GAE 词汇 60 天&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;60&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;21&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.35&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0014&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;懂你英语打卡 30*4&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;120&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;23&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.191666666666667&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0023&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写 2 篇英文博客&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;15%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「语法俱乐部」并做完习题&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.8%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;22&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;9&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.409090909090909&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.00327272727272727&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;经济管理&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;15%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「经济学原理」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完吴晓波的一系列书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.9%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;6&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读 3 本关于投资的书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.9%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;通过投资获得 X 元收益&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;提升系统化思考能力&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读 5 本相关书籍&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学完 Coursera Model Thinking 课程&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2.4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;团队管理&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;阅读团队管理相关 5 本书籍&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0024&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;产出 3 篇相关文章&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.333333333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.004&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;X&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="12"&amp;gt;
                &amp;lt;p&amp;gt;提升专业技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="12"&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;Scala 语言深入&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学完 Coursera Scala 课程 4*4&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;16&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.125&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.005625&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「Akka Cookbook」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2.25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「深入理解 Scala」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2.25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;分布式系统深入&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学习 MIT 6.824 课程&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;研究 TiDB，产出文章&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写一篇 CAP 文章&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="6"&amp;gt;
                &amp;lt;p&amp;gt;计算机语言和基础&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="6"&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「Java Concurrency in Practice」/ 「七周七并发」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完架构思想 4 本书：架构漫谈 / 程序原本 / 大道至简 / 我的架构思想&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完 Go 语言 4 本书： Go 入门指南 / Go 语言编程 / Go in Action / build web application with golang&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「算法新解」「图解算法」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.75&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.01125&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;LeetCode 刷题 200 题&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;200&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;26&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.13&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0039&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「SICP」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="7"&amp;gt;
                &amp;lt;p&amp;gt;提升家庭生活质量&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="7"&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;旅行&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;出国旅行 1 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;出江浙沪旅行 2 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;父母&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;15%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;回父母家 10 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;6&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.009&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;小孩&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;生 1 个&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■■&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.01&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;照顾夫人&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每周做饭 2 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;96&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;29&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.302083333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0120833333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;家庭事务&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每个月整理家庭一次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;12&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.25&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.005&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;车&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;买 1 辆车&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■■&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.005&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="7"&amp;gt;
                &amp;lt;p&amp;gt;养成习惯&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="7"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;运动&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;全年跑步或游泳 36 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2.4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;36&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0555555555555556&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.00133333333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;高效率&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;个人时间 &amp;amp;gt; 2h 一周 4 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4.8%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;192&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;70&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.364583333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0175&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;高效率&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;工作时间 &amp;amp;gt; 6h 一周 3 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4.8%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;144&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;89&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.618055555555556&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0296666666666667&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每月读书 4 本&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;48&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;37&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.770833333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0154166666666667&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;计划和复盘&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;全年做早晨计划 264 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.8%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;264&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;240&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.909090909090909&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0163636363636364&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;全年做习惯追踪 365 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.8%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;365&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;244&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.668493150684932&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0120328767123288&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每周做 Review&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;2.4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;48&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;23&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.479166666666667&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0115&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;提升个人 PR&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;结实外部朋友&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;参会 4 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.6%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;□□□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;4&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;面向 100+ 人的外部做 1 次分享&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;70%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.4%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.5&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.007&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;外部代码贡献&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;参与 1 个开源项目，提交核心作用代码&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.75&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.75&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.0225&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;提升写作能力&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;全年写作 12 篇&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■□□&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;12&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;7&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.583333333333333&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.00875&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;参加开智的课程，作业提交 8w&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;70%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;3.5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;V&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;■■■■&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;8&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;8&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;1&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;0.035&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;Score for Q&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;Score 期望&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;Score 推测全年&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;Score Total&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;27.1694240348692%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id="附录-2019-年-okr-表格"&gt;附录 2019 年 OKR 表格&lt;/h2&gt;
&lt;div&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table cellpadding="0" cellspacing="0"&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Direction&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;D Rank&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Objectives&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;O Rank&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;Key Result&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
                &amp;lt;p&amp;gt;KR Rank&amp;lt;/p&amp;gt;
            &amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="9"&amp;gt;
                &amp;lt;p&amp;gt;习惯养成&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="9"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;运动&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每周跑步或游泳 2 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;运动&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;体重 80kg -&amp;amp;gt; 70 kg&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;高效率&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;工作日个人时间 &amp;amp;gt; 1h 每周 3 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;高效率&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;工作日工作时间 &amp;amp;gt; 8h 每周 4 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;高效率&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;周末个人时间 &amp;amp;gt; 6h 每周周 1 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每月读书 4 本&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;计划和复盘&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每周做早晨计划 6 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每日做习惯追踪&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每周做 Review&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="11"&amp;gt;
                &amp;lt;p&amp;gt;基础技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="11"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;数学&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;看完「统计学习方法」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;看完「什么是数学」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;看完「怎样解题」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写一篇关于数学的文章&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;英文&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;扇贝背 GAE 词汇（剩余 3600）&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;懂你英语打卡两个月 30*2&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写 2 篇英文博客&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「语法俱乐部」并做完习题&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;系统思考&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记「认知科学」6 本书籍&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;团队管理&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记「创业和管理」4 本书籍&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;70%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写 2 篇相关文章&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="6"&amp;gt;
                &amp;lt;p&amp;gt;专业技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="6"&amp;gt;
                &amp;lt;p&amp;gt;15%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;综合技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;关注 3 个会议（InfoQ、AS、？）&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;云原生相关技术学习（待定）&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;语言和基础&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="4"&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记「Java Concurrency in Practice」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「七周七并发」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记「架构思想」4 本书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;读完「自己动手写Java虚拟机」或者类似书&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;面向未来技能&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="5"&amp;gt;
                &amp;lt;p&amp;gt;15%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;机器学习&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学完 Coursera Machine Learning&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学习 Google Machine Learning Crash&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;学完「集体编程智慧」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;数据分析&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;40%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记「深入浅出数据分析」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记「利用 Python 进行数据分析」&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;影响力&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;5%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写作&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;写作 12 篇&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="6"&amp;gt;
                &amp;lt;p&amp;gt;家庭&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="6"&amp;gt;
                &amp;lt;p&amp;gt;25%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;旅行&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="2"&amp;gt;
                &amp;lt;p&amp;gt;10%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;出国旅行 1 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;出沪旅行 2 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;50%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;父母&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;30%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;回父母家 6 次&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;子女&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td rowspan="3"&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;每周陪伴小孩 1 天&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;60%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;制定并执行子女成长计划&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;笔记 3 本教育书籍&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;20%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;100%&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2019/04/2018/"&gt;https://blog.alswl.com/2019/04/2018/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 03 Apr 2019 00:19:24 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2019-04-03:2019/04/2018/</guid><category>2017</category><category>年度</category></item><item><title>DevOps 和 SRE</title><link>https://blog.alswl.com/2018/09/devops-and-sre/</link><description>&lt;p&gt;最近有一位朋友和我聊职业发展方向问题，聊了不少 DevOps 和 SRE 话题。 我几年前刚接触这两个概念时也常常将之混淆，可惜当时没有人来解答我困惑。 现在这虽然已经极为流行，但是我发现我这位朋友对这两个职位还存在一些误区。 于是我给了一些见解并整理成文章以饕大众。&lt;/p&gt;
&lt;p&gt;最常见的误区：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DevOps 新概念，好高级哦&lt;/li&gt;
&lt;li&gt;SRE 是高级版 DevOps&lt;/li&gt;
&lt;li&gt;运维可以轻松转身 DevOps 工程师&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我一一给你讲解吧。&lt;/p&gt;
&lt;p&gt;&lt;img alt="sre-and-devops.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201809/sre-and-devops.png"/&gt; &lt;small&gt;&lt;a href="https://www.youtube.com/watch?v=uTEL8Ff1Zvk"&gt;image via YouTube&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="devops-和-sre-定义"&gt;DevOps 和 SRE 定义&lt;/h2&gt;
&lt;p&gt;DevOps 是字面上 Dev 开发 / Ops 运维两者组合， 严格意义上 DevOps 如下（via &lt;a href="https://en.wikipedia.org/wiki/DevOps"&gt;DevOps - Wikipedia&lt;/a&gt;）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DevOps（Development 和 Operations 的组合词）是一种重视&amp;ldquo;软件开发人员（Dev）&amp;rdquo;和&amp;ldquo;IT 运维技术人员（Ops）&amp;rdquo;之间沟通合作的文化、运动或惯例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SRE 全称是 Site Reliability Engineering，最早是由 Google 提出，并且在其工程实践中发扬光大。 他们还出了一本同名书籍「&lt;a href="https://landing.google.com/sre/book.html"&gt;Site Reliability Engineering&lt;/a&gt;」， 让这个理念在互联网工程师圈子里广泛传播。&lt;/p&gt;
&lt;p&gt;Google 对 SRE 解释是（via &lt;a href="https://en.wikipedia.org/wiki/Site_Reliability_Engineering"&gt;Site Reliability Engineering - Wikipedia&lt;/a&gt;）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Site reliability engineering (SRE) is a discipline that incorporates aspects of software engineering and applies that to operations whose goals are to create ultra-scalable and highly reliable software systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我将其翻译翻译为中文：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网站稳定性工程师是致力于打造「高扩展、高可用系统」，并将其贯彻为原则的软件工程师。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从定义来看，DevOps 是文化、运动和惯例，而 SRE 是有严格任职要求的职位。 文化是软性定义，文化有更多概念可以捏造，而 SRE 定义精准，就少了想象空间（也可能 SRE 门槛高 😄）。 按 Google 给出的说法是，SRE 工程师实践了 DevOps 文化。这个观点没错，但是国内的 DevOps 逐步独立出 DevOps 工程师， 所以在本文，我着重讨论的是 DevOps 工程师和 SRE 工程师两种职位对比。&lt;/p&gt;
&lt;h2 id="两者产生背景和历史"&gt;两者产生背景和历史&lt;/h2&gt;
&lt;p&gt;互联网需求催生了 DevOps 。在最传统软件企业中，是只有 Dev 没有 Ops， 那时 Ops 可能还是只是技术支持人员。开发按照瀑布流：需求分析、系统设计、开发、测试、交付、运行， 传统软件发布是一个重量级操作。一旦发布，Dev 几乎不再直接操作。 80 后可能会记得 QQ 每年都会有一个大版本发布吧，QQ 2000 / 2003 / 2004 等等。 此时 Ops 不用和 Dev 直接高频接触，甚至针对一些纯离线业务，压根没有设立 Ops 这个岗位。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="qq-2004.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201809/qq-2004.png"/&gt;&lt;figcaption&gt;qq-2004.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;互联网浪潮之后，软件由传统意义上桌面软件演变为面向网站、手机应用。 这时候业务核心逻辑，比如交易，社交行为都不在用户桌面完成，而是在服务器后端完成。 这给互联网企业给予了极大操作空间：随时可以改变业务逻辑，这促进了业务快速迭代变更。 但即便这样，Dev 和 Ops 是极其分裂的两个环节。Ops 不关心代码是如何运作的，Dev 不知道代码如何运行在服务器上。&lt;/p&gt;
&lt;p&gt;当业界还沉浸在可以每周发布版本喜悦中时，2009 年，Flicker 提出了每天发布 10+ 次概念，大大震撼了业界。 Flicker 提出了几个核心理念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务快速发展，需要拥抱变更，小步快跑&lt;/li&gt;
&lt;li&gt;Ops 目标不是为了网站稳定和快速，而是推动业务快速发展&lt;/li&gt;
&lt;li&gt;基于自动化工具提高 Dev / Ops 联接：代码版本管理、监控&lt;/li&gt;
&lt;li&gt;高效沟通：IRC / IM Robot（现在那些 ChatBot 套路，10 年前就被 Flicker 玩过了）&lt;/li&gt;
&lt;li&gt;信任、透明、高效、互助的沟通文化&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;img alt="flicker.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201809/flicker.png"/&gt;&lt;figcaption&gt;flicker.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;原文 SlideShare 在这 &lt;a href="https://www.slideshare.net/jallspaw/10-deploys-per-day-dev-and-ops-cooperation-at-flickr"&gt;10+ Deploys Per Day: Dev and Ops Cooperation at Flickr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;真是让人难以想象，今天各种培训公司和一些知名大 V 在呼唤这些 DevOps 理念， 竟然在 2009 年一份幻灯片中就展现淋漓尽致。经典总是不过时，在尘封下闪耀着智慧光芒。 有些人将 DevOps 和运维自动化等同，这是只看到表象。 DevOps 目标是提高业务系统交付速度，并为之提供相关工具、制度和服务。 一些个人或培训机构添油加醋和衍生含义，都是围绕这 DevOps 本质而发散。&lt;/p&gt;
&lt;p&gt;接下来聊聊 SRE 历史， SRE 出现要晚一些。在 2003 年时候 Google 的 Ben Treynor 招募了几个软件工程师，这个团队设立目的是帮助 Google 生产环境服务运行更稳定、健壮、可靠。 不同于中小型规模公司，Google 服务于十几亿用户服务，短暂服务不可用会带来致命后果。 因此 Google 走在了时代最前面，SRE 产生了。&lt;/p&gt;
&lt;p&gt;这个职位为大规模集群服务，小型团队不需要这样职位设定（可能也招不起真正 SRE 😊）。 Google 在探索若干年之后，SRE 团队开始将自己心得体会写在线上，并在 2016 年将此书出版。&lt;/p&gt;
&lt;h2 id="两者的职能不同"&gt;两者的职能不同&lt;/h2&gt;
&lt;p&gt;DevOps 文化，那么就没有一个具象职能要求。现在不少公司将 DevOps 职能单独抽取出来，称之为 DevOps 工程师。 那让我们看看 DevOps 工程师关心什么：DevOps 文化目的是提交交付速度， DevOps 工程师就自然会关心软件 / 服务的整个生命周期。&lt;/p&gt;
&lt;p&gt;一个简单的公式：&lt;code&gt;速度 = 总量 / 时间&lt;/code&gt;，添上工程行业术语，即 &lt;code&gt;交付速度 = （（功能特性 * 工程质量） / 交付时间） * 交付风险&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;功能特性交给产品经理和项目经理管理，DevOps 工程师需要关心剩下几个因素：工程质量 / 交付时间 / 交付风险。 DevOps 工程师职能如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理应用全生命周期（需求、设计、开发、QA、发布、运行）&lt;/li&gt;
&lt;li&gt;关注全流程效率提升，挖掘瓶颈点并将其解决&lt;/li&gt;
&lt;li&gt;自动化运维平台设计和研发工作（标准化、自动化、平台化）&lt;/li&gt;
&lt;li&gt;支持运维系统，包括 虚拟化技术、资源管理技术、监控技术、网络技术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SRE 关键词是「高扩展性」「高可用性」。高扩展性是指当服务用户数量暴增时， 应用系统以及支撑其服务（服务器资源、网络系统、数据库资源）可以在不调整系统结构，不强化机器本身性能 ，仅仅增加实例数量方式进行扩容。高可用性是指，应用架构中任何环节出现不可用时，比如应用服务、网关、数据库 等系统挂掉，整个系统可以在可预见时间内恢复并重新提供服务。当然，既然是「高」可用， 那么这个时间一般期望在分钟级别。SRE 职能可以概括为以下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为 应用、中间件、基础设施等提供 选型、设计、开发、容量规划、调优、故障处理&lt;/li&gt;
&lt;li&gt;为业务系统提供基于可用性、可扩展性考虑决策，参与业务系统设计和实施&lt;/li&gt;
&lt;li&gt;定位、处理、管理故障，优化导致故障发生相关部件&lt;/li&gt;
&lt;li&gt;提高各部件资源利用率&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="工作内容不同"&gt;工作内容不同&lt;/h2&gt;
&lt;p&gt;职责不同导致两个职位工作内容也不尽相同，我将 DevOps 工程师和 SRE 工程师职能列举如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DevOps
&lt;ul&gt;
&lt;li&gt;设定应用生命管理周期制度，扭转流程&lt;/li&gt;
&lt;li&gt;开发、管理 开发工程师 /QA 工程师使用 开发平台系统&lt;/li&gt;
&lt;li&gt;开发、管理 发布系统&lt;/li&gt;
&lt;li&gt;开发、选型、管理 监控、报警系统&lt;/li&gt;
&lt;li&gt;开发、管理 权限系统&lt;/li&gt;
&lt;li&gt;开发、选型、管理 CMBD&lt;/li&gt;
&lt;li&gt;管理变更&lt;/li&gt;
&lt;li&gt;管理故障&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SRE
&lt;ul&gt;
&lt;li&gt;管理变更&lt;/li&gt;
&lt;li&gt;管理故障&lt;/li&gt;
&lt;li&gt;制定 SLA 服务标准&lt;/li&gt;
&lt;li&gt;开发、选型、管理 各类中间件&lt;/li&gt;
&lt;li&gt;开发、管理 分布式监控系统&lt;/li&gt;
&lt;li&gt;开发、管理 分布式追踪系统&lt;/li&gt;
&lt;li&gt;开发、管理 性能监控、探测系统（dtrace、火焰图）&lt;/li&gt;
&lt;li&gt;开发、选型、培训 性能调优工具&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很有趣的对比，DevOps 和 SRE 都会关心应用生命周期，特别是生命周期里面中变更和故障。 但是 DevOps 工作内容是主要为开发链路服务，一个 DevOps Team 通常会提供一串工具链， 这其中会包括：开发工具、版本管理工具、CI 持续交付工具、CD 持续发布工具、报警工具、故障处理。 而 SRE Team 则关注更为关注变更、故障、性能、容量相关问题，会涉及具体业务，产出工具链会有： 容量测量工具、Logging 日志工具、Tracing 调用链路跟踪工具、Metrics 性能度量工具、监控报警工具等。&lt;/p&gt;
&lt;h2 id="devops-和-sre-关系"&gt;DevOps 和 SRE 关系&lt;/h2&gt;
&lt;p&gt;DevOps 首先是一种文化，后期逐渐独立成一个职位；SRE 一开始就明确是一个职位； 不少同学把 DevOps 和 SRE 搞混，是被两者表象锁迷惑，看上去这两者都有的工具属性、自动化要求也相似。 甚至有一些开发同学把这类运维工作都统一理解为：服务器 + 工具 + 自动化。这是盲人摸象，管中窥豹。&lt;/p&gt;
&lt;p&gt;从技能上来说，两者都需要较强的运维技能。 在职业发展天花板上，DevOps 可能缺乏 SRE 在一些专业领域的技能： 计算机体系结构能力；高吞吐高并发优化能力；可扩展系统设计能力；复杂系统设计能力；业务系统排查能力。 两者都需要软实力，但是 SRE 面临复杂度更高，挑战更大，要求也更高：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析问题、解决问题能力&lt;/li&gt;
&lt;li&gt;对业务系统更了解&lt;/li&gt;
&lt;li&gt;具备高并发、高可用系统设计实施经验&lt;/li&gt;
&lt;li&gt;对整个系统链路有更全面认识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DevOps 具有普遍意义，现代互联网公司都需要 DevOps，但是并非所有团队对高可用性、高扩展性存在需求，它们不需要 SRE。 DevOps 工程师掌握相关技能之后，也有机会可以发展为 SRE 工程师。 而一位合格 SRE 工程师，在有选择情况下面，我相信不会去转型为 DevOps 工程师。&lt;/p&gt;
&lt;p&gt;从专业背景来看，无论是 DevOps 还是 SRE 工程师，都需要研发背景，前者需要开发工具链，后者需要有较强架构设计经验。 如果有运维工程师想转型成为 DevOps 或者 SRE，那么需要补上相关技术知识。 毕竟，不是会搭建一套 Jenkins + Kubernetes 就可以自称为 DevOps / SRE 工程师。&lt;/p&gt;
&lt;p&gt;怎么样，有没有解开这几个常见误区呢？希望你看到这里可以豁然开朗，最后附上两个工程师的技能点， 期望有志成为这两种工程师的同学，加油努力。&lt;/p&gt;
&lt;h2 id="附录技能点"&gt;附录：技能点&lt;/h2&gt;
&lt;p&gt;DevOps：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Operator 技能
&lt;ul&gt;
&lt;li&gt;Linux Basis
&lt;ul&gt;
&lt;li&gt;基本命令操作&lt;/li&gt;
&lt;li&gt;Linux FHS（Filesystem Hierarchy Standard 文件系统层次结构标准）&lt;/li&gt;
&lt;li&gt;Linux 系统（差异、历史、标准、发展）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;脚本
&lt;ul&gt;
&lt;li&gt;Bash / Python&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;基础服务
&lt;ul&gt;
&lt;li&gt;DHCP / NTP / DNS / SSH / iptables / LDAP / CMDB&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;自动化工具
&lt;ul&gt;
&lt;li&gt;Fabric / Saltstack / Chef / Ansible&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;基础监控工具
&lt;ul&gt;
&lt;li&gt;Zabbix / Nagios / Cacti&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;虚拟化
&lt;ul&gt;
&lt;li&gt;KVM 管理 / XEN 管理 / vSphere 管理 / Docker&lt;/li&gt;
&lt;li&gt;容器编排 / Mesos / Kubernetes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;服务
&lt;ul&gt;
&lt;li&gt;Nginx / F5 / HAProxy / LVS 负载均衡&lt;/li&gt;
&lt;li&gt;常见中间件 Operate（启动、关闭、重启、扩容）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Dev
&lt;ul&gt;
&lt;li&gt;语言
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Go（可选）&lt;/li&gt;
&lt;li&gt;Java（了解部署）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;流程和理论
&lt;ul&gt;
&lt;li&gt;Application Life Cycle&lt;/li&gt;
&lt;li&gt;12 Factor&lt;/li&gt;
&lt;li&gt;微服务概念、部署、生命周期&lt;/li&gt;
&lt;li&gt;CI 持续集成 / Jenkins / Pipeline / Git Repo Web Hook&lt;/li&gt;
&lt;li&gt;CD 持续发布系统&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;基础设施
&lt;ul&gt;
&lt;li&gt;Git Repo / Gitlab / Github&lt;/li&gt;
&lt;li&gt;Logstash / Flume 日志收集&lt;/li&gt;
&lt;li&gt;配置文件管理（应用、中间件等）&lt;/li&gt;
&lt;li&gt;Nexus / JFrog / Pypi 包依赖管理&lt;/li&gt;
&lt;li&gt;面向 开发 / QA 开发环境管理系统&lt;/li&gt;
&lt;li&gt;线上权限分配系统&lt;/li&gt;
&lt;li&gt;监控报警系统&lt;/li&gt;
&lt;li&gt;基于 Fabric / Saltstack / Chef / Ansible 自动化工具开发&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SRE：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语言和工程实现
&lt;ul&gt;
&lt;li&gt;深入理解开发语言（假设是 Java）
&lt;ul&gt;
&lt;li&gt;业务部门使用开发框架&lt;/li&gt;
&lt;li&gt;并发、多线程和锁&lt;/li&gt;
&lt;li&gt;资源模型理解：网络、内存、CPU&lt;/li&gt;
&lt;li&gt;故障处理能力（分析瓶颈、熟悉相关工具、还原现场、提供方案）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;常见业务设计方案和陷阱（比如 Business Modeling，N+1、远程调用、不合理 DB 结构）&lt;/li&gt;
&lt;li&gt;MySQL / Mongo OLTP 类型查询优化&lt;/li&gt;
&lt;li&gt;多种并发模型，以及相关 Scalable 设计&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;问题定位工具
&lt;ul&gt;
&lt;li&gt;容量管理&lt;/li&gt;
&lt;li&gt;Tracing 链路追踪&lt;/li&gt;
&lt;li&gt;Metrics 度量工具&lt;/li&gt;
&lt;li&gt;Logging 日志系统&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;运维架构能力
&lt;ul&gt;
&lt;li&gt;Linux 精通，理解 Linux 负载模型，资源模型&lt;/li&gt;
&lt;li&gt;熟悉常规中间件（MySQL Nginx Redis Mongo ZooKeeper 等），能够调优&lt;/li&gt;
&lt;li&gt;Linux 网络调优，网络 IO 模型以及在语言里面实现&lt;/li&gt;
&lt;li&gt;资源编排系统（Mesos / Kubernetes）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;理论
&lt;ul&gt;
&lt;li&gt;容量规划方案&lt;/li&gt;
&lt;li&gt;熟悉分布式理论（Paxos / Raft / BigTable / MapReduce / Spanner 等），能够为场景决策合适方案&lt;/li&gt;
&lt;li&gt;性能模型（比如 Pxx 理解、Metrics、Dapper）&lt;/li&gt;
&lt;li&gt;资源模型（比如 Queuing Theory、负载方案、雪崩问题）&lt;/li&gt;
&lt;li&gt;资源编排系统（Mesos / Kurbernetes）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ref"&gt;Ref&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/DevOps"&gt;DevOps - 维基百科，自由的百科全书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Site_reliability_engineering"&gt;Site reliability engineering - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://skill-map.stuq.org/"&gt;StuQ 技能图谱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://12factor.net/zh_cn/"&gt;The Twelve-Factor App （简体中文）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://landing.google.com/sre/book/chapters/communication-and-collaboration.html"&gt;Google - Site Reliability Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uTEL8Ff1Zvk"&gt;What&amp;rsquo;s the Difference Between DevOps and SRE? - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/09/devops-and-sre/"&gt;https://blog.alswl.com/2018/09/devops-and-sre/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 09 Sep 2018 23:21:40 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-09-09:2018/09/devops-and-sre/</guid><category>DevOps</category><category>SRE</category></item><item><title>破解三才五格姓名测试</title><link>https://blog.alswl.com/2018/07/naming-algorithem/</link><description>&lt;p&gt;&lt;img alt="201807/bagua.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201807/bagua.png"/&gt; &lt;small&gt;image from Wikipedia &lt;a href="https://zh.wikipedia.org/wiki/%E5%85%AB%E5%8D%A6"&gt;八卦&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;随着孩子预产期临近，我还有一个重要的任务没有完成：给孩子起一个名字。 这本来是个随性的任务，但是由于上一辈笃信某个算命先生的姓名测试算法，让这个任务难度倍增。 我根据一些古文取了不少名字，但是最后都败在姓名测试上面：得分不高。得分不高老一辈就要有说辞， 我自己就是一个活生生案例，曾用名得分不高，中考被逼换了名字，改头换面重新做人。&lt;/p&gt;
&lt;p&gt;我根据韵律取的名字几乎都败在算分数上面，我得琢磨一下其中奥秘，提高取名效率，避免再出现差错。 不少网站都提供姓名测试算命，我且先看看上面的得分，研究一下规律：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.123cha.com/xm/"&gt;姓名测试,姓名打评分,姓名算命,姓名分析,在线三才五格五行吉凶剖象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.zhonghuaqiming.com/testname.aspx"&gt;姓名测试打分，根据周易三才五格取名法为您评测姓名-中华起名网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meiguoshenpo.com/xingming/ceshi/"&gt;【姓名测试】姓名测试打分算命_姓名打分_姓名测试打分生辰八字 - 美国神婆星座网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每家网站都写得天花乱坠：易经、五格剖象法、五行起名、五格起名、三格数理。 这些都不用 Care，因为它们都是来自同一个算法：「三才五格」。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="熊崎健翁的三才五格"&gt;熊崎健翁的三才五格&lt;/h2&gt;
&lt;p&gt;我回想先生使用的算命方法，有这么几个特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跟我强调使用了「康熙字典」进行计算&lt;/li&gt;
&lt;li&gt;给了我一个网址是 &lt;code&gt;.jp&lt;/code&gt; 结尾，我当年上网计算之后，的确得到的数字和先生算计的一样，惊为天人&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据这两个线索，我很快挖掘到了 &lt;a href="https://zh.wikipedia.org/wiki/%E5%A7%93%E5%90%8D%E5%AD%A6"&gt;姓名学 - 维基百科，自由的百科全书&lt;/a&gt; 。这里面就着重解释了日本人熊崎健翁的「三才五格」算法，&lt;/p&gt;
&lt;p&gt;五格分别是天格、人格、地格、外格、总格，三才是天格、人格、地格的总称。 虽然三才五格看着挺像中国易经的概念，但其实是出口转内销的舶来品。 五格的具体解释如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;天格：是先祖留传下来的，其数理对人影响不大。&lt;/li&gt;
&lt;li&gt;地格：又称前运，影响人中年以前的活动力。&lt;/li&gt;
&lt;li&gt;人格：又称主运，是整个姓名的中心点，影响人的一生命运。&lt;/li&gt;
&lt;li&gt;总格：又称后运，影响人中年以后的命运。&lt;/li&gt;
&lt;li&gt;外格：又称变格，影响人的社交能力、智慧等，其数理不用重点去看。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外熊崎健翁还创造性的将五行引入，把这个模型做的更复杂。 不过评分的影响因子还是只有五格，单个字的五行并没有发挥直接的作用。 也有一些算命先生会刻意将单字的五行做成相生相克连贯起来，这样显得更有学问。&lt;/p&gt;
&lt;h2 id="三才五格计算算法"&gt;三才五格计算算法&lt;/h2&gt;
&lt;p&gt;这个算法的流程是这样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算每个汉字的笔画数
&lt;ul&gt;
&lt;li&gt;姓名拆分为姓和名，尤其要注意单姓和复姓&lt;/li&gt;
&lt;li&gt;将简体姓和名转换为繁体姓和名&lt;/li&gt;
&lt;li&gt;将繁体姓和名映射为康熙字典中的姓和名&lt;/li&gt;
&lt;li&gt;将康熙字典中的姓和名的笔画数检出&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;根据笔画数计算五格（数字）
&lt;ul&gt;
&lt;li&gt;天格：姓氏笔划再加一数即是天格数（若是复姓，将姓之笔划合计）&lt;/li&gt;
&lt;li&gt;人格：将姓氏与第一个名字相加即是人格数（若复姓双名，则姓氏的第二个字笔画加名的第一个字的笔画； 复姓单名则姓氏的第二个字加名的笔画）&lt;/li&gt;
&lt;li&gt;地格：将第一个名字与第二个名字相加即是地格数（若是单名，将名字再加一数）&lt;/li&gt;
&lt;li&gt;外格：将名字最后一字加一数即是外格数&lt;/li&gt;
&lt;li&gt;总格：将姓与名相加即是总格数&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;（可选）根据五格计算五行（这个五行对计算结果没有影响）
&lt;ul&gt;
&lt;li&gt;尾数 1、2 于五行属木&lt;/li&gt;
&lt;li&gt;尾数 3、4 于五行属火&lt;/li&gt;
&lt;li&gt;尾数 5、6 于五行属土&lt;/li&gt;
&lt;li&gt;尾数 7、8 于五行属金&lt;/li&gt;
&lt;li&gt;尾数 9、10 于五行属水&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;根据笔画数得到解释
&lt;ul&gt;
&lt;li&gt;计算规则见 &lt;a href="https://baike.baidu.com/item/%E6%80%BB%E6%A0%BC"&gt;总格_百度百科&lt;/a&gt;， 其内容是列出 1-81 数字对应的情况，这个规则没有给出具体吉凶&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;根据解释得到吉凶等级
&lt;ul&gt;
&lt;li&gt;123cha / 中华起名网 / 美国神婆都是根据这个解释给出一个大概吉凶，他们给吉凶有一些小差异&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;根据吉凶等级计算总分
&lt;ul&gt;
&lt;li&gt;每家网站的算法有些差异，我估计算命先生的公式也应该有一些差异&lt;/li&gt;
&lt;li&gt;我自己根据对五格的解释，给出一个加权公式，跟几家算命网站进行了加权因子拟合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述流程中，有两个给算命先生留出的调整空间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据解释推出吉凶&lt;/li&gt;
&lt;li&gt;根据吉凶计算总分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据解释推出吉凶，我研读了一下解释，比较倾向中华起名网和美国神婆的吉凶判断。 举例「旱苗逢雨」的解释，123cha 给出「(旱苗逢雨) 万物更新，调顺发达，恢弘泽世，繁荣富贵」吉。 中华起名网和美国神婆给出「（旱苗逢雨）：挽回家运的春成育数」和 「（旱苗逢雨）万物更新，调顺发达，恢弘泽世，繁荣富贵」大吉。 从解释的意象来看，我觉得应当作大吉。&lt;/p&gt;
&lt;p&gt;第二个调整空间是根据吉凶计算总分。有了五格的吉凶，要给出百分制下面的总分， 这看上去需要一个加权公式。这个公式的设计决定最后得分多少。 我根据五格的定位设计了一份。&lt;/p&gt;
&lt;p&gt;常见吉凶等级以及他们对应的得分，这个得分是我自行设计，从 100-0 依次排序：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大吉 100&lt;/li&gt;
&lt;li&gt;吉 75&lt;/li&gt;
&lt;li&gt;*半吉 62.5&lt;/li&gt;
&lt;li&gt;平 50&lt;/li&gt;
&lt;li&gt;凶 25&lt;/li&gt;
&lt;li&gt;大凶 0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于没有统一算法计算吉凶总分，我根据五格解释，设计了吉凶等级的加权因子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;天格：是先祖留传下来的，其数理对人影响不大。5%&lt;/li&gt;
&lt;li&gt;地格：又称前运，影响人中年以前的活动力。20%&lt;/li&gt;
&lt;li&gt;人格：又称主运，是整个姓名的中心点，影响人的一生命运。45%&lt;/li&gt;
&lt;li&gt;总格：又称后运，影响人中年以后的命运。20%&lt;/li&gt;
&lt;li&gt;外格：又称变格，影响人的社交能力、智慧等，其数理不用重点去看。10%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大功告成，我们拿几个姓名过来测算一下这个算法是否合理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;芮成钢总分：&lt;code&gt;100*0.05 + 62.5*0.2 + 100*0.45 + 62.5*0.2 + 100*0.1 = 85&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;123cha 72&lt;/li&gt;
&lt;li&gt;中华算命 92&lt;/li&gt;
&lt;li&gt;美国神婆 82&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;狄小天总分：&lt;code&gt;0*0.05 + 100*0.2 + 75*0.45 + 100*0.2 + 100*0.1 = 83.75&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;123cha 81&lt;/li&gt;
&lt;li&gt;中华算命 91&lt;/li&gt;
&lt;li&gt;美国神婆 85&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;狄二总分：&lt;code&gt;25*0.05 + 25*0.2 + 100*0.45 + 0*0.2 + 25*0.1 = 53.75&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;123cha 46&lt;/li&gt;
&lt;li&gt;中华算命 59&lt;/li&gt;
&lt;li&gt;美国神婆 65&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过最后的得分可以看到，三种算法的结果还是比较接近的。&lt;/p&gt;
&lt;h2 id="工程实现"&gt;工程实现&lt;/h2&gt;
&lt;p&gt;光实现了算法还没完，我还要有程序帮我做自动化计算。 名字的输入可以自行设计，用诗经、楚辞、古诗源等古文，然后导入程序计算得分。&lt;/p&gt;
&lt;p&gt;为了工程实现，我需要准备如下数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简体汉字到繁体汉字的转换&lt;/li&gt;
&lt;li&gt;繁体汉字到康熙字典中汉字比划数&lt;/li&gt;
&lt;li&gt;根据笔画数计算出吉凶&lt;/li&gt;
&lt;li&gt;（可选）汉字对应的五行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过一下午搜索，我终于将需要的数据准备好：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BYVoid/OpenCC"&gt;BYVoid/OpenCC: A project for conversion between Traditional and Simplified Chinese&lt;/a&gt; 提供转换简繁体&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/breezyreeds/kangxi-strokecount"&gt;breezyreeds/kangxi-strokecount: Lookup stroke count according to Kangxi radicals. 康熙字典筆劃數對照表&lt;/a&gt; 提供笔画数&lt;/li&gt;
&lt;li&gt;虽然 &lt;a href="https://baike.baidu.com/item/%E6%80%BB%E6%A0%BC"&gt;总格_百度百科&lt;/a&gt; 提供了解释， 但是还是需要从相关网站爬取吉凶等级&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microshaoft/EditPlus/blob/26edd54bc26db36db8b3b17b4c670dc2953c78fe/User/Chinese.CTL"&gt;EditPlus/Chinese.CTL at 26edd54bc26db36db8b3b17b4c670dc2953c78fe &amp;middot; Microshaoft/EditPlus&lt;/a&gt; 提供了单个汉字的五行计算&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="最后"&gt;最后&lt;/h2&gt;
&lt;p&gt;资深算命先生狄大师提醒大家，不管什么测字法都是玄学，玩玩就好，千万不要过于上心， 除非你家里有老人信这个，而你恰好又是一个孝子。&lt;/p&gt;
&lt;p&gt;在一切准备就绪之后，我离出去当算命先生之差一个竹竿和墨镜了。 作为工程师，我当然会提供一个开放应用给大家用，请大家耐心等待我的小程序上架。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/07/naming-algorithem/"&gt;https://blog.alswl.com/2018/07/naming-algorithem/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 29 Jul 2018 19:19:36 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-07-29:2018/07/naming-algorithem/</guid><category>Family</category></item><item><title>从 SQL Server 到 MySQL（三）：愚公移山 - 开源力量</title><link>https://blog.alswl.com/2018/06/sql-server-migration-3/</link><description>&lt;p&gt;该系列三篇文章已经全部完成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/03/sql-server-migration-1/"&gt;从 SQL Server 到 MySQL（一）：异构数据库迁移 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/05/sql-server-migration-2/"&gt;从 SQL Server 到 MySQL（二）：在线迁移，空中换发动机 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/06/sql-server-migration-3/"&gt;从 SQL Server 到 MySQL（三）：愚公移山 - 开源力量 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;img alt="201806/refactor.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/refactor.png"/&gt;&lt;figcaption&gt;201806/refactor.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;我们用了两章文章 &lt;a href="https://blog.alswl.com/2018/03/sql-server-migration-1/"&gt;从 SQL Server 到 MySQL（一）：异构数据库迁移&lt;/a&gt; / &lt;a href="https://blog.alswl.com/2018/05/sql-server-migration-2/"&gt;从 SQL Server 到 MySQL（二）：在线迁移，空中换发动机&lt;/a&gt; 介绍我们遇到问题和解决方案。 不管是离线全量迁移还是在线无缝迁移， 核心 ETL 工具就是 yugong。&lt;/p&gt;
&lt;p&gt;Yugong 是一个成熟工具， 在阿里巴巴去 IOE 行动中起了重要作用， 它与 Otter / Canal 都是阿里中间件团队出品。 它们三者各有分工： Yugong 设计目标是异构数据库迁移； Canal 设计用来解决 MySQL binlog 订阅和消费问题； Otter 则是在 Canal 之上，以准实时标准解决数据库同步问题。 Otter 配备了相对 yugong 更健壮管理工具、分布式协调工具， 从而长期稳定运行。Yugong 设计目标则是一次性迁移工作，偏 Job 类型。 当然 yugong 本身质量不错，长期运行也没问题。 我们有个产线小伙伴使用我们魔改后 yugong， 用来将数据从管理平台同步数据到用户前台，已经稳定跑了半年多了。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="yugong-系统结构"&gt;yugong 系统结构&lt;/h2&gt;
&lt;p&gt;这里我不赘述如何使用 yugong，有需求同学直接去 &lt;a href="https://github.com/alibaba/yugong"&gt;官方文档&lt;/a&gt; 查看使用文档。&lt;/p&gt;
&lt;p&gt;我直接进入关键环节：解剖 yugong 核心模块。 Yugong 数据流是标准 ETL 流程，分别有 Extractor / Translator / Applier 这三个大类来实现 ETL 过程:&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="ETL &amp;amp; Java Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/etl.png"/&gt;&lt;figcaption&gt;ETL &amp;amp; Java Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;我们依次来看看这三大类具体设计。&lt;/p&gt;
&lt;h3 id="extractor"&gt;Extractor&lt;/h3&gt;
&lt;figure&gt;
&lt;img alt="Extractor Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/extractor.png"/&gt;&lt;figcaption&gt;Extractor Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;YuGongLifeCycle&lt;/code&gt;：Yugong 组件生命周期声明&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractYuGongLifeCycle&lt;/code&gt;：Yugong 组件生命周期一些实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RecordExtractor&lt;/code&gt;：基础 Extractor Interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractRecordExtractor&lt;/code&gt;：基础 Extractor 虚拟类，做了一部分实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractOracleRecordExtractor&lt;/code&gt;：Oracle Extractor 虚拟类，做了一部分 Oracle 相关实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleOnceFullRecordExtractor&lt;/code&gt;：Oracle 基于特定 SQL 一次性 Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleFullRecordExtractor&lt;/code&gt;：Oracle 全量 Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleRecRecordExtractor&lt;/code&gt;：Oracle 记录 Extractor，用来创建物化视图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleMaterializedIncRecordExtractor&lt;/code&gt;：基于（已有）物化视图 Oracle 增量 Extrator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleAllRecordExtractor&lt;/code&gt;：Oracle 自动化 Extractor，先 Mark 再 Full，再 Inc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Exctractor 从 Source DB 读取数据写入内存， Yugong 官方提供 Extractor 抽象出 &lt;code&gt;AbstractRecordExtractor&lt;/code&gt; 类， 其余类都是围绕 Oracle 实现。 另外 Yugong 设计了 &lt;code&gt;YuGongLifeCycle&lt;/code&gt; 类实现了组件生命周期管理。&lt;/p&gt;
&lt;h3 id="translator"&gt;Translator&lt;/h3&gt;
&lt;figure&gt;
&lt;img alt="Translator Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/translator.png"/&gt;&lt;figcaption&gt;Translator Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DataTranslator&lt;/code&gt;：Translator 基类，为 Row 级别数据处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TableTranslator&lt;/code&gt;：Translator 基类，为 Table 级别提供处理（官方代码中没有使用）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractDataTranslator&lt;/code&gt;：Data Translator 虚拟类，做了部分实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EncodeDataTranslator&lt;/code&gt;：转换编码格式 Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleIncreamentDataTranslator&lt;/code&gt;：为 Oracle 增量数据准备 Translator，会调整一些数据状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BackTableDataTranslator&lt;/code&gt;：Demo，允许在 Translator 中做回写数据操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BillOutDataTranslator&lt;/code&gt;：Demo，包含一些阿里业务逻辑 Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MidBillOutDetailDataTranslator&lt;/code&gt;：Demo，包含一些阿里业务逻辑 Translator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Translator 读取内存中 RowData 然后变换， 大部分 Translator 做一些无状态操作，比如编码转换。 另外还有一小部分 Translator 做了业务逻辑操作，比如做一些数据回写。&lt;/p&gt;
&lt;h3 id="applier"&gt;Applier&lt;/h3&gt;
&lt;figure&gt;
&lt;img alt="Applier Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/applier.png"/&gt;&lt;figcaption&gt;Applier Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RecordApplier&lt;/code&gt;：基础 Applier Interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractRecordApplier&lt;/code&gt;：基础 Applier 虚拟类，做了一部分实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CheckRecordRecordApplier&lt;/code&gt;：检查数据一致性 Applier，不做数据写入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FullRecordRecordApplier&lt;/code&gt;：全量数据 Applier，使用 UPSERT 做数据更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IncreamentRecordApplier&lt;/code&gt;：增量 Applier，使用 Oracle 物化视图为数据源&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AllRecordRecordApplier&lt;/code&gt;：自动化 Applier，先使用全量数据 Applier，然后使用增量数据 Applier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Applier 将经过 Translator 处理过的数据写入 Target DB。 Yugong 提供了一致性检查、全量、增量 Applier。 比较特殊是 &lt;code&gt;AllRecordRecordApplier&lt;/code&gt; 提供了全套自动化操作。&lt;/p&gt;
&lt;h3 id="others"&gt;Others&lt;/h3&gt;
&lt;p&gt;除了 ETL 三个要素，yugong 还有一些重要类：控制类和工具类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SqlTemplate&lt;/code&gt;：提供 CRUD / UPSERT 等操作的基类 SQL 模板&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OracleSqlTemplate&lt;/code&gt;：基于 SqlTemplate 实现的 Oracle SQL 模板&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RecordDiffer&lt;/code&gt;：一致性检查 differ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;YugongController&lt;/code&gt;：应用控制器，控制整个应用数据流向&lt;/li&gt;
&lt;li&gt;&lt;code&gt;YugongInstance&lt;/code&gt;：控制单个迁移任务实例，一张表对应一个 YugongInstance&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="老战士的问题_1"&gt;老战士的问题&lt;/h2&gt;
&lt;p&gt;说 yugong 有问题会有些标题党，毕竟它是久经考验老战士了。 但对我们来说，开源版本 yugong 还有一些不足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不支持 SQL Server 读取&lt;/li&gt;
&lt;li&gt;不支持 SQL Server 写入（Rollback 需要写入 SQL Server）&lt;/li&gt;
&lt;li&gt;不支持 MySQL 读取&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了数据库支持，Yugong 在工程上面倒是也有一些改善空间。 我们最后花费了不少时间，做了工程上改进。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抛弃默认打包方式（基于 maven-assembly-plugin 生成类似 LFS 结构 tar.gz 文件）， 改为使用 fat jar 模式打包，仅生成单文件可执行 jar 包&lt;/li&gt;
&lt;li&gt;抛弃 ini 配置文件，使用 YAML 配置文件格式（已有老配置仍然使用 ini 文件，YAML 主要管理表结构变更）&lt;/li&gt;
&lt;li&gt;改造 Plugin 模式，将 Java 运行时编译改为反射获取 Java 类&lt;/li&gt;
&lt;li&gt;拆分 Unit Test / Integration Test，降低重构成本&lt;/li&gt;
&lt;li&gt;重构 Oracle 继承结构，使其开放 SQL Server / MySQL 接口&lt;/li&gt;
&lt;li&gt;支持 Canal Redis 格式数据作为 MySQL 在线增量数据源&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="改造之后结构"&gt;改造之后结构&lt;/h2&gt;
&lt;h3 id="extractor-1"&gt;Extractor&lt;/h3&gt;
&lt;figure&gt;
&lt;img alt="Extractor New Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/extractor-new.png"/&gt;&lt;figcaption&gt;Extractor New Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AbstractSqlServerExtractor&lt;/code&gt;：新增抽象 SqlServer Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractMysqlExtractor&lt;/code&gt;：新增抽象 MySQL Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractFullRecordExtractor&lt;/code&gt;：新增抽象 Full 模式 Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SqlServerCdcExtractor&lt;/code&gt;：新增 SQL Server CDC 增量模式 Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MysqlCanalExtractor&lt;/code&gt;：新增 MySQL Canal 格式增量消费 Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MysqlCanalRedisExtractor&lt;/code&gt;：新增 MySQL Canal 格式增量消费 Extractor，使用 Redis 做回溯&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MysqlFullExtractor&lt;/code&gt;：新增 MySQL 全量 Extractor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SqlServerFullExtractor&lt;/code&gt;：新增 SQL Server 全量 Extractor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在抽象出三个抽象类之后，整体逻辑更为清晰，如果未来要增加新数据库格式支持，也更为简单。&lt;/p&gt;
&lt;h3 id="translator-1"&gt;Translator&lt;/h3&gt;
&lt;figure&gt;
&lt;img alt="Translator New Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/translator-new.png"/&gt;&lt;figcaption&gt;Translator New Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Sha1ShardingTranslator&lt;/code&gt;：根据 Sha1 Sharding Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ModShardingTranslator&lt;/code&gt;：根据 Value Mode Sharding Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RangeShardingTranslator&lt;/code&gt;：根据范围 Sharding Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UserRouterMapShardingTranslator&lt;/code&gt;：特定业务使用， 用户分表 Sharding Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UserRouterMapMobileShardingTranslator&lt;/code&gt;：特定业务使用， 用户分表 Sharding Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ClassLearningNoteInfoShardingTranslator&lt;/code&gt;：特定业务使用自定义 Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ClassLearningIsActiveReverseShardingTranslator&lt;/code&gt;：特定业务使用自定义 Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ColumnFixDataTranslator&lt;/code&gt;：调整表结构 Translator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NameStyleDataTranslator&lt;/code&gt;：调整表字段名 Translator，支持按风格对整个表自动转换&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CompositeIndexesDataTranslator&lt;/code&gt;：解决复合主键下唯一 PK 确定问题的 Translator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新增了一系列 Translator。&lt;/p&gt;
&lt;h3 id="applier-1"&gt;Applier&lt;/h3&gt;
&lt;figure&gt;
&lt;img alt="Applier New Class" src="https://4ocf5n.dijingchao.com/upload_dropbox/201806/applier-new.png"/&gt;&lt;figcaption&gt;Applier New Class&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SqlServerIncreamentRecordApplier&lt;/code&gt;：新增 SQL Server 增量消费 Applier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Applier 结构调整挺小，主要是增加了 SQL Server 的支持。&lt;/p&gt;
&lt;h2 id="二次开发心得_1"&gt;二次开发心得&lt;/h2&gt;
&lt;p&gt;如何快速了解一个开源项目？很多同学第一反应就是阅读源码。 看源码固然是有效果，但是性价比太低。 如果项目设计不合理，很快会迷失在代码细节之中。 我的经验是先阅读官方出品的一些 Slide 分享，然后阅读官方核心文档。 Slide 含金量高，在讲述核心中核心。&lt;/p&gt;
&lt;p&gt;如果真要去了解细节去阅读源码，那我建议要善用工具， 比如使用 IntelliJ 的 Diagram 功能，抽象出核心类。 还有一些插件比如 SequencePluginReload 方便地生成函数之间调用，实为查看数据流利器。 我在这次开发过程中，也根据生成类图发现了一些问题， 从而在进入 Coding 之前，先对框架继承结构重构。提高了整体开发效率&lt;/p&gt;
&lt;p&gt;根据代码风格判断，Yugong 并非是出自一个人之手。这多少会导致代码风格和设计上面不一致。 我自己也常年在业务线里面摸爬滚打，能想象到在快速推进项目中需要糙快猛。 但后人接受开发，多少会有些头疼。 于是我在进入开发之前，引入标准化 CheckStyle，用 Google Style 全局格式化， 使用 Sonar 扫描保证一个代码质量基线。 同时这也是一把双刃剑，格式化项目会导致大量 diff， 这也给我自己埋下了一个苦果，在后期给上游提交 PR 引入无尽问题。&lt;/p&gt;
&lt;p&gt;开发过程中我也犯了一些错误。最为头疼是没有在早期考虑到向开源社区贡献， 导致未来向上游合并困难重重，现在还在头疼合并代码中。 另外，由于整体项目时间紧，我贪图实现速度，没有做更详尽单元测试覆盖。 这里没有遵循开源软件的最佳实践。&lt;/p&gt;
&lt;p&gt;经过我改造的 Yugong 版本开源地址是：https://github.com/alswl/yugong 。 我也提交了 Pull Request https://github.com/alibaba/yugong/pull/66 ， 正在与官方沟通如何将这部分提交并入上游。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/06/sql-server-migration-3/"&gt;https://blog.alswl.com/2018/06/sql-server-migration-3/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 20 Jun 2018 20:18:52 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-06-20:2018/06/sql-server-migration-3/</guid><category>SQLServer</category><category>MySQL</category><category>DB-Migration</category></item><item><title>从 SQL Server 到 MySQL（二）：在线迁移，空中换发动机</title><link>https://blog.alswl.com/2018/05/sql-server-migration-2/</link><description>&lt;p&gt;该系列三篇文章已经全部完成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/03/sql-server-migration-1/"&gt;从 SQL Server 到 MySQL（一）：异构数据库迁移 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/05/sql-server-migration-2/"&gt;从 SQL Server 到 MySQL（二）：在线迁移，空中换发动机 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/06/sql-server-migration-3/"&gt;从 SQL Server 到 MySQL（三）：愚公移山 - 开源力量 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;img alt="flying-tanker" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/flying-tanker.png"/&gt;&lt;figcaption&gt;flying-tanker&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;smaill&gt;（image via https://pixabay.com/en/military-stealth-bomber-refueling-602729/ ）&lt;/smaill&gt;&lt;/p&gt;
&lt;p&gt;在上篇文章 &lt;a href="https://blog.alswl.com/2018/03/sql-server-migration-1/"&gt;从 SQL Server 到 MySQL （一）：异构数据库迁移 - Log4D&lt;/a&gt; 中，我们给大家介绍了从 SQL Server 到 MySQL 异构数据库迁移的基本问题和全量解决方案。 全量方案可以满足一部分场景的需求，但是这个方案仍然是有缺陷的： 迁移过程中需要停机，停机的时长和数据量相关。 对于核心业务来说，停机就意味着损失。 比如用户中心的服务，以它的数据量来使用全量方案，会导致迁移过程中停机若干个小时。 而一旦用户中心停止服务，几乎所有依赖于这个中央服务的系统都会停摆。&lt;/p&gt;
&lt;p&gt;能不能做到无缝的在线迁移呢？系统不需要或者只需要极短暂的停机？ 作为有追求的技术人，我们一定要想办法解决上面的问题。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="在线迁移的原理和流程"&gt;在线迁移的原理和流程&lt;/h2&gt;
&lt;p&gt;针对 Oracle 到 MySQL，市面上已经有比较成熟的解决方案 - alibaba 的 &lt;a href="https://github.com/alibaba/yugong"&gt;yugong&lt;/a&gt; 项目。 在解决 SQL Server 到 MySQL 在线迁移之前，我们先研究一下 yugong 是如何做到 Oracle 的在线迁移。&lt;/p&gt;
&lt;p&gt;下图是 yugong 针对 Oracle 到 MySQL 的增量迁移流程：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="yugong-oracle.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/yugong-oracle.png"/&gt;&lt;figcaption&gt;yugong-oracle.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这其中有四个步骤：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;增量数据收集 (创建 Oracle 表的增量物化视图)&lt;/li&gt;
&lt;li&gt;进行全量复制&lt;/li&gt;
&lt;li&gt;进行增量复制 (可并行进行数据校验)&lt;/li&gt;
&lt;li&gt;原库停写，切到新库&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Oracle 物化视图（Materialized View）是 Oracle 提供的一个机制。 一个物化视图就是主库在某一个时间点上的复制，可以理解为是这个时间点上的 Snapshot。 当主库的数据持续更新时，物化视图的更新可以通过独立的批量更新完成，称之为 &lt;code&gt;refreshes&lt;/code&gt;。 一批 &lt;code&gt;refreshes&lt;/code&gt; 之间的变化，就对应到数据库的内容变化情况。 物化视图经常用来将主库的数据复制到从库，也常常在数据仓库用来缓存复杂查询。&lt;/p&gt;
&lt;p&gt;物化视图有多种配置方式，这里比较关心刷新方式和刷新时间。 刷新方式有三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete Refresh：删除所有数据记录重新生成物化视图&lt;/li&gt;
&lt;li&gt;Fast Refresh：增量刷新&lt;/li&gt;
&lt;li&gt;Force Refresh：根据条件判断使用 Complete Refresh 和 Fast Refres&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刷新机制有两种模式： Refresh-on-commit 和 Refresh-On-Demand。&lt;/p&gt;
&lt;p&gt;Oracle 基于物化视图，就可以完成增量数据的获取，从而满足阿里的数据在线迁移。 将这个技术问题泛化一下，想做到在线增量迁移需要有哪些特性？ 我们得到如下结论（针对源数据库）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增量变化：支持增量获得增量数据库变化&lt;/li&gt;
&lt;li&gt;延迟：获取变化数据这个动作耗时需要尽可能低&lt;/li&gt;
&lt;li&gt;幂等一致性：变化数据的消费应当做到幂等，即不管目标数据库已有数据什么状态，都可以无差别消费&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回到我们面临的问题上来，SQL Server 是否有这个机制满足这三个特性呢？ 答案是肯定的，SQL Server 官方提供了 CDC 功能。&lt;/p&gt;
&lt;h2 id="cdc-的工作原理"&gt;CDC 的工作原理&lt;/h2&gt;
&lt;p&gt;什么是 CDC？ CDC 全称 Change Data Capture，设计目的就是用来解决增量数据的。 它是 SQL Server 2008 新增的特性， 在这之前只能使用 SQl Server 2005 中的 &lt;code&gt;after insert&lt;/code&gt; / &lt;code&gt;after delete&lt;/code&gt; / &lt;code&gt;after update&lt;/code&gt; Trigger 功能来获得数据变化。&lt;/p&gt;
&lt;p&gt;CDC 的工作原理如下：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="cdc-data-flow.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/cdc-data-flow.png"/&gt;&lt;figcaption&gt;cdc-data-flow.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;当数据库表发生变化时候，Capture process 会从 transaction log 里面获取数据变化， 然后将这些数据记录到 Change Table 里面。 有了这些数据，用户可以通过特定的 CDC 查询函数将这些变化数据查出来。&lt;/p&gt;
&lt;h2 id="cdc-的数据结构和基本使用"&gt;CDC 的数据结构和基本使用&lt;/h2&gt;
&lt;p&gt;CDC 的核心数据就是那些 Change Table 了，这里我们给大家看一下 Change Table 长什么样，可以有个直观的认识。&lt;/p&gt;
&lt;p&gt;通过以下的函数打开一张表（fruits）的 CDC 功能。&lt;/p&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb1-1" title="1"&gt;&lt;span class="co"&gt;-- enable cdc for db&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-2" title="2"&gt;sys.sp_cdc_enable_db;&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-3" title="3"&gt;&lt;span class="co"&gt;-- enable by table&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-4" title="4"&gt;&lt;span class="kw"&gt;EXEC&lt;/span&gt; sys.sp_cdc_enable_table @source_schema &lt;span class="op"&gt;=&lt;/span&gt; N&lt;span class="st"&gt;'dbo'&lt;/span&gt;, @source_name &lt;span class="op"&gt;=&lt;/span&gt; N&lt;span class="st"&gt;'fruits'&lt;/span&gt;, @role_name &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt;;&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-5" title="5"&gt;&lt;span class="co"&gt;-- list cdc enabled table&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb1-6" title="6"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; name, is_cdc_enabled &lt;span class="kw"&gt;from&lt;/span&gt; sys.databases &lt;span class="kw"&gt;where&lt;/span&gt; is_cdc_enabled &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt;;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此 CDC 功能已经开启，如果需要查看哪些表开启了 CDC 功能，可以使用一下 SQL：&lt;/p&gt;
&lt;div class="sourceCode" id="cb2"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb2-1" title="1"&gt;&lt;span class="co"&gt;-- list cdc enabled table&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-2" title="2"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; name, is_cdc_enabled &lt;span class="kw"&gt;from&lt;/span&gt; sys.databases &lt;span class="kw"&gt;where&lt;/span&gt; is_cdc_enabled &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt;;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;开启 CDC 会导致产生一张 Change Table 表 &lt;code&gt;cdc.dbo_fruits_CT&lt;/code&gt;，这张表的表结构如何呢？&lt;/p&gt;
&lt;div class="sourceCode" id="cb3"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb3-1" title="1"&gt;.&lt;span class="kw"&gt;schema&lt;/span&gt; cdc.dbo_fruits_CT&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-2" title="2"&gt;name            &lt;span class="kw"&gt;default&lt;/span&gt;  nullable  &lt;span class="kw"&gt;type&lt;/span&gt;          &lt;span class="fu"&gt;length&lt;/span&gt;  &lt;span class="kw"&gt;indexed&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-3" title="3"&gt;&lt;span class="co"&gt;--------------  -------  --------  ------------  ------  -------&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-4" title="4"&gt;__$end_lsn      &lt;span class="kw"&gt;null&lt;/span&gt;     YES       binary        &lt;span class="dv"&gt;10&lt;/span&gt;      &lt;span class="kw"&gt;NO&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-5" title="5"&gt;__$operation    &lt;span class="kw"&gt;null&lt;/span&gt;     &lt;span class="kw"&gt;NO&lt;/span&gt;        &lt;span class="dt"&gt;int&lt;/span&gt;           &lt;span class="dv"&gt;4&lt;/span&gt;       &lt;span class="kw"&gt;NO&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-6" title="6"&gt;__$seqval       &lt;span class="kw"&gt;null&lt;/span&gt;     &lt;span class="kw"&gt;NO&lt;/span&gt;        binary        &lt;span class="dv"&gt;10&lt;/span&gt;      &lt;span class="kw"&gt;NO&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-7" title="7"&gt;__$start_lsn    &lt;span class="kw"&gt;null&lt;/span&gt;     &lt;span class="kw"&gt;NO&lt;/span&gt;        binary        &lt;span class="dv"&gt;10&lt;/span&gt;      YES&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-8" title="8"&gt;__$update_mask  &lt;span class="kw"&gt;null&lt;/span&gt;     YES       varbinary     &lt;span class="dv"&gt;128&lt;/span&gt;     &lt;span class="kw"&gt;NO&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-9" title="9"&gt;&lt;span class="kw"&gt;id&lt;/span&gt;              &lt;span class="kw"&gt;null&lt;/span&gt;     YES       &lt;span class="dt"&gt;int&lt;/span&gt;           &lt;span class="dv"&gt;4&lt;/span&gt;       &lt;span class="kw"&gt;NO&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-10" title="10"&gt;name            &lt;span class="kw"&gt;null&lt;/span&gt;     YES       &lt;span class="dt"&gt;varchar&lt;/span&gt;(&lt;span class="dv"&gt;255&lt;/span&gt;)  &lt;span class="dv"&gt;255&lt;/span&gt;     &lt;span class="kw"&gt;NO&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这张表中以 &lt;code&gt;__&lt;/code&gt; 开头的字段是 CDC 所记录的元数据，&lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 是 fruits 表的原始字段。 这意味着 CDC 的表结构和原始表结构是一一对应的。&lt;/p&gt;
&lt;p&gt;接下来我们做一些业务操作，让数据库的数据发生一些变化，然后查看 CDC 的 Change Table：&lt;/p&gt;
&lt;div class="sourceCode" id="cb4"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb4-1" title="1"&gt;&lt;span class="co"&gt;-- 1 step&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-2" title="2"&gt;&lt;span class="kw"&gt;DECLARE&lt;/span&gt; @begin_time datetime, @end_time datetime, @begin_lsn binary(&lt;span class="dv"&gt;10&lt;/span&gt;), @end_lsn binary(&lt;span class="dv"&gt;10&lt;/span&gt;);&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-3" title="3"&gt;&lt;span class="co"&gt;-- 2 step&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-4" title="4"&gt;&lt;span class="kw"&gt;SET&lt;/span&gt; @begin_time &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="st"&gt;'2017-09-11 14:03:00.000'&lt;/span&gt;;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-5" title="5"&gt;&lt;span class="kw"&gt;SET&lt;/span&gt; @end_time   &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="st"&gt;'2017-09-11 14:10:00.000'&lt;/span&gt;;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-6" title="6"&gt;&lt;span class="co"&gt;-- 3 step&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-7" title="7"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; @begin_lsn &lt;span class="op"&gt;=&lt;/span&gt; sys.fn_cdc_map_time_to_lsn(&lt;span class="st"&gt;'smallest greater than'&lt;/span&gt;, @begin_time);&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-8" title="8"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; @end_lsn &lt;span class="op"&gt;=&lt;/span&gt; sys.fn_cdc_map_time_to_lsn(&lt;span class="st"&gt;'largest less than or equal'&lt;/span&gt;, @end_time);&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-9" title="9"&gt;&lt;span class="co"&gt;-- 4 step&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-10" title="10"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="op"&gt;*&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; cdc.fn_cdc_get_all_changes_dbo_fruits(@begin_lsn, @end_lsn, &lt;span class="st"&gt;'all'&lt;/span&gt;);&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里的操作含义是：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;定义存储过程中需要使用的 4 个变量&lt;/li&gt;
&lt;li&gt;begin_time / end_time 是 Human Readable 的字符串格式时间&lt;/li&gt;
&lt;li&gt;begin_lsn / end_lsn 是通过 CDC 函数转化过的 Log Sequence Number，代表数据库变更的唯一操作 ID&lt;/li&gt;
&lt;li&gt;根据 begin_lsn / end_lsn 查询到 CDC 变化数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查询出来的数据如下所示：&lt;/p&gt;
&lt;div class="sourceCode" id="cb5"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb5-1" title="1"&gt;__$start_lsn          __$end_lsn  __$seqval             __$operation  __$update_mask  &lt;span class="kw"&gt;id&lt;/span&gt;  name&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-2" title="2"&gt;&lt;span class="co"&gt;--------------------  ----------  --------------------  ------------  --------------  --  ------&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-3" title="3"&gt;0000dede0000019f001a  &lt;span class="kw"&gt;null&lt;/span&gt;        0000dede0000019f0018  &lt;span class="dv"&gt;2&lt;/span&gt;             &lt;span class="dv"&gt;03&lt;/span&gt;              &lt;span class="dv"&gt;1&lt;/span&gt;   apple&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-4" title="4"&gt;0000dede000001ad0004  &lt;span class="kw"&gt;null&lt;/span&gt;        0000dede000001ad0003  &lt;span class="dv"&gt;2&lt;/span&gt;             &lt;span class="dv"&gt;03&lt;/span&gt;              &lt;span class="dv"&gt;2&lt;/span&gt;   apple2&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-5" title="5"&gt;0000dede000001ba0003  &lt;span class="kw"&gt;null&lt;/span&gt;        0000dede000001ba0002  &lt;span class="dv"&gt;3&lt;/span&gt;             &lt;span class="dv"&gt;02&lt;/span&gt;              &lt;span class="dv"&gt;2&lt;/span&gt;   apple2&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-6" title="6"&gt;0000dede000001ba0003  &lt;span class="kw"&gt;null&lt;/span&gt;        0000dede000001ba0002  &lt;span class="dv"&gt;4&lt;/span&gt;             &lt;span class="dv"&gt;02&lt;/span&gt;              &lt;span class="dv"&gt;2&lt;/span&gt;   apple3&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-7" title="7"&gt;0000dede000001c10003  &lt;span class="kw"&gt;null&lt;/span&gt;        0000dede000001c10002  &lt;span class="dv"&gt;2&lt;/span&gt;             &lt;span class="dv"&gt;03&lt;/span&gt;              &lt;span class="dv"&gt;3&lt;/span&gt;   apple4&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-8" title="8"&gt;0000dede000001cc0005  &lt;span class="kw"&gt;null&lt;/span&gt;        0000dede000001cc0002  &lt;span class="dv"&gt;1&lt;/span&gt;             &lt;span class="dv"&gt;03&lt;/span&gt;              &lt;span class="dv"&gt;3&lt;/span&gt;   apple4&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到 Change Table 已经如实的记录了我们操作内容，注意 &lt;code&gt;__$operation&lt;/code&gt; 代表了数据库操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 =&amp;gt; 删除&lt;/li&gt;
&lt;li&gt;2 =&amp;gt; 插入&lt;/li&gt;
&lt;li&gt;3 =&amp;gt; 更新前数据&lt;/li&gt;
&lt;li&gt;4 =&amp;gt; 更新后数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据查出来的数据，我们可以重现这段时间数据库的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增了 &lt;code&gt;id&lt;/code&gt; 为 1 / 2 的两条数据&lt;/li&gt;
&lt;li&gt;更新了 &lt;code&gt;id&lt;/code&gt; 为 2 的数据&lt;/li&gt;
&lt;li&gt;插入了 &lt;code&gt;id&lt;/code&gt; 为 3 的数据&lt;/li&gt;
&lt;li&gt;删除了 &lt;code&gt;id&lt;/code&gt; 为 3 的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cdc-调优"&gt;CDC 调优&lt;/h2&gt;
&lt;p&gt;有了 CDC 这个利器，终于意味着我们的方向是没有问题的，我们终于稍稍吁了一口气。 但除了了解原理和使用方式，我们还需要深入了解 CDC 的工作机制，对其进行压测、调优， 了解其极限和边界，否则一旦线上出现不可控的情况，就会对业务带来巨大损失。&lt;/p&gt;
&lt;p&gt;我们先看看 CDC 的工作流程，就可以知道有哪些核心参数可以调整：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Influence of capture job parameters" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/cdc-influence.png"/&gt;&lt;figcaption&gt;Influence of capture job parameters&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;上图是 CDC Job 的工作流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;蓝色区域是一次 Log 扫描执行的最大扫描次数：maxscans number（&lt;code&gt;maxscans&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;蓝色区域同时被最大扫描 transcation 数量控制：&lt;code&gt;maxtrans&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;浅蓝色区域是扫描间隔时间，单位是秒：&lt;code&gt;pollinginterval&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三个参数平衡着 CDC 的服务器资源消耗、吞吐量和延迟， 根据具体场景，比如大字段，宽表，BLOB 表，可以调整从而达到满足业务需要。 他们的默认值如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;maxscan&lt;/code&gt; 默认值 10&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxtrans&lt;/code&gt; 默认值 500&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pollinginterval&lt;/code&gt; 默认值 5 秒&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="cdc-压测"&gt;CDC 压测&lt;/h2&gt;
&lt;p&gt;掌握了能够调整的核心参数，我们即将对 CDC 进行了多种形式的测试。 在压测之前，我们还需要确定关键的健康指标，这些指标有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存：buffer-cache-hit / page-life-expectancy / page-split 等&lt;/li&gt;
&lt;li&gt;吞吐：batch-requets / sql-compilations / sql-re-compilations / transactions count&lt;/li&gt;
&lt;li&gt;资源消耗：user-connections / processes-blocked / lock-waits / checkpoint-pages&lt;/li&gt;
&lt;li&gt;操作系统层面：CPU 利用率、磁盘 IO&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出于篇幅考虑，我们无法将所有测试结果贴出来， 这里放一个在并发 30 下面插入一百万数据（随机数据）进行展示：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="cdc-metrics.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/cdc-metrics.png"/&gt;&lt;figcaption&gt;cdc-metrics.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img alt="cdc-system-load.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/cdc-system-load.png"/&gt;&lt;figcaption&gt;cdc-system-load.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;测试结论是，在默认的 CDC 参数下面：&lt;/p&gt;
&lt;p&gt;CDC 的开启/关闭过程中会导致若干个 Process Block， 大流量请求下面（15k TPS）过程会导致约 20 个左右 Process Block。 这个过程中对服务器的 IO / CPU 无明显波动， 开启/关闭瞬间会带来 mssql.sql-statistics.sql-compilations 剧烈波动。 CDC 开启后，在大流量请求下面对 QPS / Page IO 无明显波动， 对服务器的 IO / CPU 也无明显波动， CDC 开启后可以在 16k TPS 下正常工作。&lt;/p&gt;
&lt;p&gt;如果对性能不达标，官方有一些简单的优化指南：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调整 maxscan maxtrans pollinginterval&lt;/li&gt;
&lt;li&gt;减少在插入后立刻插入&lt;/li&gt;
&lt;li&gt;避免大批量写操作&lt;/li&gt;
&lt;li&gt;限制需要记录的字段&lt;/li&gt;
&lt;li&gt;尽可能关闭 net changes&lt;/li&gt;
&lt;li&gt;没任务压力时跑 cleanup&lt;/li&gt;
&lt;li&gt;监控 log file 大小和 IO 压力，确保不会写爆磁盘&lt;/li&gt;
&lt;li&gt;要设置 filegroup_name&lt;/li&gt;
&lt;li&gt;开启 sp_cdc_enable_table 之前设置 filegroup&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="yugong-的在线迁移机制"&gt;yugong 的在线迁移机制&lt;/h2&gt;
&lt;p&gt;OK，截目前位置，我们已经具备了 CDC 这个工具，但是这仅仅提供了一种可能性， 我们还需要一个工具将 CDC 的数据消费出来，并喂到 MySQL 里面去。&lt;/p&gt;
&lt;p&gt;好在有 yugong。 Yugong 官方提供了 Oracle 到 MySQL 的封装，并且抽象了 Source / Target / SQL Tempalte 等接口， 我们只要实现相关接口，就可以完成从 SQL Server 消费数据到 MySQL 了。&lt;/p&gt;
&lt;p&gt;这里我们不展开，我还会花专门的一篇文章讲如何在 yugong 上面进行开发。 可以提前剧透一下，我们已经将支持 SQL Server 的 yugong 版本开源了。&lt;/p&gt;
&lt;h2 id="如何回滚"&gt;如何回滚&lt;/h2&gt;
&lt;p&gt;数据库迁移这样的项目，我们不仅仅要保证单向从 SQL Server 到 MySQL 的写入， 同时要从 MySQL 写入 SQL Server。&lt;/p&gt;
&lt;p&gt;这个流程同样考虑增量写入的要素：增量消费，延迟，幂等一致性。&lt;/p&gt;
&lt;p&gt;MySQL 的 binlog 可以满足这三个要素，需要注意的是，MySQL binlog 有三种模式， Statement based，Row based 和 Mixed。只有 Row based 才能满足幂等一致性的要求。&lt;/p&gt;
&lt;p&gt;确认理论上可行之后，我们一样需要一个工具将 binlog 读取出来，并且将其转化为 SQL Server 可以消费的数据格式，然后写入 SQL Server。&lt;/p&gt;
&lt;p&gt;我们目光转到 alibaba 的另外一个项目 Canal。 Canal 是阿里中间件团队提供的 binlog 增量订阅 &amp;amp; 消费组件。 之所以叫组件，是由于 Canal 提供了 Canal-Server 应用和 Canal Client Library， Canal 会模拟成一个 MySQL 实例，作为 Slave 连接到 Master 上面， 然后实时将 binlog 读取出来。 至于 binlog 读出之后想怎么使用，权看用户如何使用。&lt;/p&gt;
&lt;p&gt;我们基于 Canal 设计了一个简单的数据流，在 yugong 中增加了这么几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL Server 的写入功能&lt;/li&gt;
&lt;li&gt;消费 Canal 数据源的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Canal Server 中的 binlog 只能做一次性消费， 内部实现是一个 Queue， 为了满足我们可以重复消费数据的能力，我们还额外设计了一个环节，将 Canal 的数据放到 Queue 中，在未来任意时间可以重复消费数据。 我们选择了 Redis 作为这个 Queue，数据流如下。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="canal.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201805/canal.png"/&gt;&lt;figcaption&gt;canal.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="最佳实践"&gt;最佳实践&lt;/h2&gt;
&lt;p&gt;数据库的迁移在去 Windows 中，是最不容得出错的环节。 应用是无状态的，出现问题可以通过回切较快地回滚。 但数据库的迁移就需要考虑周到，做好资源准备，发布流程， 故障预案处理。&lt;/p&gt;
&lt;p&gt;考虑到多个事业部都需要经历这个一个过程，我们项目组将每一个步骤都固化下来， 形成了一个最佳实践。我们的迁移步骤如下，供大家参考：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;大阶段&lt;/th&gt;
&lt;th&gt;阶段&lt;/th&gt;
&lt;th&gt;事项&lt;/th&gt;
&lt;th&gt;是否完成&lt;/th&gt;
&lt;th&gt;负责人&lt;/th&gt;
&lt;th&gt;耗时&lt;/th&gt;
&lt;th&gt;开始时间&lt;/th&gt;
&lt;th&gt;完成时间&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;白天&lt;/td&gt;
&lt;td&gt;存量数据阶段&lt;/td&gt;
&lt;td&gt;创建 MySQL 数据库，准备相关账号资源&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;开启 CDC&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;从 Slave SQLServer dump 一份 snapshot 到 Backup SQL Server&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;Backup SQL Server 消费数据， ETL 到 MySQL&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;增量数据阶段&lt;/td&gt;
&lt;td&gt;确认 ETL 数据已经消费完成，检查数据总条数&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;从 Slave SQLServer 开始消费 CDC 数据，持续写入 MySQL&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;使用 yugong 检查一天内数据的一致性&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;检查不一致的数据，10 分钟之后人工进行检查，确认是 CDC 延迟带来的问题&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;检查数据总量条目&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;使用 yugong 对抽样表进行全量检查&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;凌晨&lt;/td&gt;
&lt;td&gt;应用发布阶段&lt;/td&gt;
&lt;td&gt;停止 SQL Server 的应用&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;技术经理&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;检查没有连接进入 SQL Server&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;使用 yugong 检查一天内数据的一致性&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;检查数据总量条目&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;启用基于 MySQL 的应用&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;运维&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;测试阶段&lt;/td&gt;
&lt;td&gt;测试应用是否正常，回归所有功能&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;QA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;（临时新增）测试 ReadOnly DB 的应用访问情况&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;QA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;完成阶段&lt;/td&gt;
&lt;td&gt;接入流量&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;运维&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;（可选）回滚阶段&lt;/td&gt;
&lt;td&gt;发现问题，直接将应用切回 SQL Server&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;运维&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;事后进行数据审计，进行新增数据补偿&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;（可选）回滚过程中，使用 Canal 读取 binlog，并使用 Canal Client 重放到 SQL Server&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;DBA&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.oracle.com/cd/B10500_01/server.920/a96567/repmview.htm"&gt;Materialized View Concepts and Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/previous-versions/sql/sql-server-2008/dd266396(v=sql.100)"&gt;Tuning the Performance of Change Data Capture in SQL Server 2008 | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/yugong"&gt;alibaba/yugong: 阿里巴巴去Oracle数据迁移同步工具(全量+增量,目标支持MySQL/DRDS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/canal"&gt;alibaba/canal: 阿里巴巴mysql数据库binlog的增量订阅&amp;amp;消费组件 。阿里云DRDS( https://www.aliyun.com/product/drds )、阿里巴巴TDDL 二级索引、小表复制powerd by canal.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/05/sql-server-migration-2/"&gt;https://blog.alswl.com/2018/05/sql-server-migration-2/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Mon, 21 May 2018 11:24:36 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-05-21:2018/05/sql-server-migration-2/</guid><category>SQLServer</category><category>MySQL</category><category>DB-Migration</category></item><item><title>如何逃离死海效应</title><link>https://blog.alswl.com/2018/04/death-sea-effect/</link><description>&lt;figure&gt;
&lt;img alt="201804/death-sea.jpg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201804/death-sea.jpg"/&gt;&lt;figcaption&gt;201804/death-sea.jpg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;（图片来自 &lt;a href="https://www.flickr.com/photos/tsaiproject/8298557641"&gt;The Dead Sea, Israel | One of the lowest, saltiest and unusu&amp;hellip; | Flickr&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;最近听团队老大的一个分享，介绍公司提倡的工程师的核心价值观，受益良多。 这也让我想起了一篇文章， Bruce F. Webster 在 2008 年写了一篇文章「The Wetware Crisis: the Dead Sea effect」， 翻译过来是「死海效应」。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Bruce 在文章中阐述了一个概念：一个团队可能陷入一种反模式，称之为死海效应。 死海是位于约旦的一个高盐分水域，由于水分被蒸发，这里的盐度是正常海水的 8 倍。 将水分比喻为高质量人才，盐分比喻为低质量人才。 水分容易被蒸发，而补入不足，盐分不容易蒸发日积月累，进而导致整个团队的人才质量劣化。&lt;/p&gt;
&lt;p&gt;借用经济学里面的一个概念：劣币驱逐良币。&lt;/p&gt;
&lt;h2 id="形成"&gt;形成&lt;/h2&gt;
&lt;p&gt;为什么会形成这样的状况呢？&lt;/p&gt;
&lt;p&gt;在一个正常运作的团队中，整个人才系统应该是循环的。有新的成员加入，也有老的成员离开。 只要市场上人才质量不发生剧烈的波动，团队内人才质量应该是平稳的。 但死海效应中不这样，好的人才不断流失，低质量人才被留存，这个团队素质越来越差。 形成这种状况的原因其实挺简单：环境恶化，高质量人才有更强的实力，可以自由地选择满足自己期望的团队。 而低质量人才没有更多选择空间，从而只能在当前的环境下继续生存。&lt;/p&gt;
&lt;p&gt;死海效应导致的恶劣后果是显而易见的。 现代组织中人是生产第一要素。 如果人才质量持续降低，那么整个团队会缺乏战斗力，商业上得不到发展，这个团队将面临瓦解的风险。&lt;/p&gt;
&lt;p&gt;什么样的团队容易滋生死海效应，我总结了几个点：无压、不透明、人情。&lt;/p&gt;
&lt;p&gt;第一个点是无压，当一个公司的业务发展进入瓶颈期，战略上面没有远见， 抑或是已经占据了市场中的有利地形，温饱不愁，那么就容易失去压力。 我对商业的理解有限，就拿技术团队来做比喻： 当一个技术团队给业务提供的支撑足够并且业务发展平稳， 那么技术团队有两个选择：维持平稳的状态；给自己提出更高的技术要求。 前者是舒适的，后者长期带来回报，但是短期辛苦并且有风险。 前者的团队空间有限，挑战难度低，更容易产生死海效应。&lt;/p&gt;
&lt;p&gt;第二个滋生死海效应的点是不透明。这种不透明体现在多个方面： 战略上是否向全体员工透明？业绩结果是否向全体员工透明？团队和个人绩效结果是否透明？评价标准是否透明？ 不透明会会导致团队的不公平。 一线员工看不到未来发展的方向和业绩，无法感受到个体被组织所尊重。 也许有些人尸位素餐，却能获得高收益，自然无法让团队的高贡献者认可。 Google 有一系列方法，包括 OKR 透明化，TGIF（Thank God It&amp;rsquo;s Friday） 全体沟通会，有效的解决这个问题。&lt;/p&gt;
&lt;p&gt;第三个点是人情。大家在一起工作，时间一长或多或少会产生羁绊。 中国社会又特别讲究人情来往，今天你帮我一些忙，那我就得记在心上，未来有机会要还给你。 这当然是一种人和人之间沟通的一种黏合剂和缓冲，但是也是职业化程度低的表现。 企业的存在是有使命和目的，营造一种大家庭的氛围一定不在其使命中。 小团队早期可以家族化管理，但是一旦走上正轨，一定要规范化管理。 人情其实是对标准和制度的破坏，而企业的正常运转，恰恰最是需要对标准和制度的遵守。 讲究人情，也会对职责和评价产生破坏，这又会导致不公平，死海效应也会应运而生。 这点我是非常佩服阿里，它有一个出名的职务轮换制度，管理层不能长期担任同一职位，需要定期轮换。 这样就能保证关键人才在企业内部是流动的，不会锁定在特定岗位。 也就避免了长期锁定带来的人情账户、内部小团体。&lt;/p&gt;
&lt;h2 id="如何逃离"&gt;如何逃离&lt;/h2&gt;
&lt;p&gt;那么如何来解决「死海效应」呢？有这么些方法：追求卓越、制度和透明、人才标准和流动。&lt;/p&gt;
&lt;p&gt;我以前和一个候选人沟通，他的一句话让我印象深刻：公司业务高速发展时，就不会存在复杂的管理问题。 这是一种理想情况。 但业务发展需要时间，进入瓶颈期之后，想继续保持团队活力，改怎么办？追求卓越。 效率能否再提高一些？自动化的程度是否能够再提高？能不能向一流团队 FLAG 看齐？ 这样就开阔了团队和个人的发展空间。 一旦有了追求卓越的信念，即便业务发展稍缓，仍然能够抵御死海效应。&lt;/p&gt;
&lt;p&gt;高质量人才离开往往是觉得受了委屈才离开，那么公平的制度和透明的实施就尤其重要。 保证不由某个个体的意志力转移，而是像机器一样可以运转，像数学一样可以被计算。 这个需要自上而下的贯彻，否则实施起来非常困难。 举一个例子，如果团队大部分成员会在月末调整绩效目标而获得更高的评分。 那么坚持不调整的人可能获得较低评分，这不是个体能够影响的局面。 没有自上而下的推动，制度和透明就只能是一阵清风。&lt;/p&gt;
&lt;p&gt;最后是人才标准和流动。人才流动并非是一个坏事，如同人的生理循环，吸收有益物质，排除有害物质。 这个循环必须正向运行，设定合理的准入标准和淘汰标准，高质量输入，低质量淘汰。 末尾淘汰制听起来残酷，其实在广泛实施，比如阿里的 3.25 的考核，腾讯的年末淘汰一人。 对于大部分非家族公司来说，如果真的出现害群之马，难道不淘汰么？ 淘汰应该制度化，让所有人看到并且重视，而不是担心会造成集体不安就隐性操作， 这反而更容易产生猜测和担忧。&lt;/p&gt;
&lt;h2 id="最后"&gt;最后&lt;/h2&gt;
&lt;p&gt;一旦进入死海效应的恶性循环，我认为乱世用重典为佳，小打小闹不能形成大影响。 关键时刻就必须搞运动，做动员，大张旗鼓。 当然这需要高层有足够的决心和意志力。如果管理层计划偏安一隅，没有宏伟愿景， 那么十几年的企业寿命也能为股东赚回足够的钱，死海效应是存在即合理的现象。 低质量的人才管理成本也低，人才死海效应和业务劣化恶性循环， 最后进入企业衰老期，天道轮回，有生必有死，看开就好。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/04/death-sea-effect/"&gt;https://blog.alswl.com/2018/04/death-sea-effect/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Mon, 09 Apr 2018 23:13:03 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-04-09:2018/04/death-sea-effect/</guid><category>management</category><category>team</category></item><item><title>从 SQL Server 到 MySQL（一）：异构数据库迁移</title><link>https://blog.alswl.com/2018/03/sql-server-migration-1/</link><description>&lt;p&gt;该系列三篇文章已经全部完成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/03/sql-server-migration-1/"&gt;从 SQL Server 到 MySQL（一）：异构数据库迁移 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/05/sql-server-migration-2/"&gt;从 SQL Server 到 MySQL（二）：在线迁移，空中换发动机 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.alswl.com/2018/06/sql-server-migration-3/"&gt;从 SQL Server 到 MySQL（三）：愚公移山 - 开源力量 - Log4D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;img alt="201803/migration-bird.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201803/migration-bird.png"/&gt;&lt;figcaption&gt;201803/migration-bird.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="背景"&gt;背景&lt;/h2&gt;
&lt;p&gt;沪江成立于 2001 年，作为较早期的教育学习网站， 当时技术选型范围并不大： Java 的版本是 1.2，C# 尚未诞生，MySQL 还没有被 Sun 收购， 版本号是 3.23。 工程师们选择了当时最合适的微软体系，并在日后的岁月里， 逐步从 ASP 过度到 .net，数据库也跟随 SQL Server 进行版本升级。&lt;/p&gt;
&lt;p&gt;十几年过去了，技术社区已经发生了天翻地覆的变化。 沪江的技术栈还基本在 .net 体系上，这给业务持续发展带来了一些限制。 人才招聘、社区生态、架构优化、成本风险方面都面临挑战。 集团经过慎重考虑，发起了大规模的去 Windows 化项目。 这其中包含两个重点子项目：开发语言从 C# 迁移到 Java， 数据库从 SQL Server 迁移到 MySQL。&lt;/p&gt;
&lt;p&gt;本系列文章就是向大家介绍， 从 SQL Server 迁移到 MySQL 所面临的问题和我们的解决方案。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="迁移方案的基本流程"&gt;迁移方案的基本流程&lt;/h2&gt;
&lt;p&gt;设计迁移方案需要考量以下几个指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;迁移前后的数据一致性&lt;/li&gt;
&lt;li&gt;业务停机时间&lt;/li&gt;
&lt;li&gt;迁移项目是否对业务代码有侵入&lt;/li&gt;
&lt;li&gt;需要提供额外的功能：表结构重构、字段调整&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过仔细调研，在平衡复杂性和业务方需求后， 迁移方案设计为两种：停机数据迁移和在线数据迁移。 如果业务场景允许数小时的停机，那么使用停机迁移方案， 复杂度低，数据损失风险低。 如果业务场景不允许长时间停机，或者迁移数据量过大， 无法在几个小时内迁移完成，那么就需要使用在线迁移方案了。&lt;/p&gt;
&lt;p&gt;数据库停机迁移的流程：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201803/migration-db-offline-readonly.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201803/migration-db-offline-readonly.png"/&gt;&lt;figcaption&gt;201803/migration-db-offline-readonly.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;停机迁移逻辑比较简单，使用 ETL（Extract Translate Load） 工具从 Source 写入 Target，然后进行一致性校验，最后确认应用运行 OK， 将 Source 表名改掉进行备份。&lt;/p&gt;
&lt;p&gt;在线迁移的流程：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201803/migration-db-online.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201803/migration-db-online.png"/&gt;&lt;figcaption&gt;201803/migration-db-online.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;在线迁移的方案稍微复杂一些，流程上有准备全量数据，然后实时同步增量数据， 在数据同步跟上（延迟秒级别）之后，进行短暂停机（Hang 住，确保没有流量）， 就可以使用新的应用配置，并使用新的数据库。&lt;/p&gt;
&lt;h2 id="需要解决的问题"&gt;需要解决的问题&lt;/h2&gt;
&lt;p&gt;从 SQL Server 迁移到 MySQL，核心是完成异构数据库的迁移。&lt;/p&gt;
&lt;p&gt;基于两种数据迁移方案，我们需要解决以下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个数据库的数据结构是否可以一一对应？出现不一致如何处理？&lt;/li&gt;
&lt;li&gt;MySQL 的使用方式和 SQL Server 使用方式是否一致？有哪些地方需要注意？&lt;/li&gt;
&lt;li&gt;如何确保迁移前后的数据一致性？&lt;/li&gt;
&lt;li&gt;在迁移中，如何支持数据结构调整？&lt;/li&gt;
&lt;li&gt;如何保证业务不停情况下面，实现在线迁移？&lt;/li&gt;
&lt;li&gt;数据迁移后如果发现业务异常需要回滚，如何处理新产生的数据？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决以上的问题，我们需要引入一整套解决方案，包含以下部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指导文档 A：SQL Server 转换 MySQL 的数据类型对应表&lt;/li&gt;
&lt;li&gt;指导文档 B：MySQL 的使用方式以及注意点&lt;/li&gt;
&lt;li&gt;支持表结构变更，从 SQL Server 到 MySQL 的 ETL 工具&lt;/li&gt;
&lt;li&gt;支持 SQL Server 到 MySQL 的在线 ETL 工具&lt;/li&gt;
&lt;li&gt;一致性校验工具&lt;/li&gt;
&lt;li&gt;一个回滚工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我们一一来解决这些问题。&lt;/p&gt;
&lt;h2 id="sql-server-到-mysql-指导文档"&gt;SQL Server 到 MySQL 指导文档&lt;/h2&gt;
&lt;p&gt;非常幸运的是，MySQL 官方早就准备了一份如何其他数据库迁移到 MySQL 的白皮书。 &lt;a href="https://www.mysql.com/it/why-mysql/white-papers/guide-to-migrating-from-sql-server-to-mysql/"&gt;MySQL :: Guide to Migrating from Microsoft SQL Server to MySQL&lt;/a&gt; 里提供了详尽的 SQL Server 到 MySQL 的对应方案。 包含了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL Server to MySQL - Datatypes 数据类型对应表&lt;/li&gt;
&lt;li&gt;SQL Server to MySQL - Predicates 逻辑算子对应表&lt;/li&gt;
&lt;li&gt;SQL Server to MySQL &amp;ndash; Operators and Date Functions 函数对应表&lt;/li&gt;
&lt;li&gt;T-SQL Conversion Suggestions 存储过程转换建议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要额外处理的数据类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;SQL Server&lt;/th&gt;
&lt;th&gt;MySQL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;IDENTITY&lt;/td&gt;
&lt;td&gt;AUTO_INCREMENT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;NTEXT, NATIONAL TEXT&lt;/td&gt;
&lt;td&gt;TEXT CHARACTER SET UTF8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;SMALLDATETIME&lt;/td&gt;
&lt;td&gt;DATETIME&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;MONEY&lt;/td&gt;
&lt;td&gt;DECIMAL(19,4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;SMALL MONEY&lt;/td&gt;
&lt;td&gt;DECIMAL(10,4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;UNIQUEIDENTIFIER&lt;/td&gt;
&lt;td&gt;BINARY(16)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;SYSNAME&lt;/td&gt;
&lt;td&gt;CHAR(256)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在实际进行中，还额外遇到了一个用来解决树形结构存储的字段类型 Hierarchyid。这个场景需要额外进行业务调整。&lt;/p&gt;
&lt;p&gt;我们在内部做了针对 MySQL 知识的摸底排查工作， 并进行了若干次的 MySQL 使用技巧培训， 将工程师对 MySQL 的认知拉到一根统一的线。&lt;/p&gt;
&lt;p&gt;关于存储过程使用，我们和业务方也达成了一致：所有 SQL Server 存储过程使用业务代码进行重构，不能在 MySQL 中使用存储过程。 原因是存储过程增加了业务和 DB 的耦合，会让维护成本变得极高。 另外 MySQL 的存储过程功能和性能都较弱，无法大规模使用。&lt;/p&gt;
&lt;p&gt;最后我们提供了一个 MySQL 开发规范文档，借数据库迁移的机会， 将之前相对混乱的表结构设计做了统一了约束（部分有业务绑定的设计， 在考虑成本之后没有做调整）。&lt;/p&gt;
&lt;h2 id="etl-工具"&gt;ETL 工具&lt;/h2&gt;
&lt;p&gt;ETL 的全称是 Extract Translate Load（读取、转换、载入）， 数据库迁移最核心过程就是 ETL 过程。 如果将 ETL 过程简化，去掉 Translate 过程， 就退化为一个简单的数据导入导出工具。 我们可以先看一下市面上常见的导入导出工具， 了解他们的原理和特性，方便我们选型。&lt;/p&gt;
&lt;p&gt;MySQL 同构数据库数据迁移工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html"&gt;mysqldump&lt;/a&gt; 和 &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/mysqlimport.html"&gt;mysqlimport&lt;/a&gt; MySQL 官方提供的 SQL 导出导出工具&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.percona.com/doc/percona-toolkit/LATEST/pt-table-sync.html"&gt;pt-table-sync&lt;/a&gt; Percona 提供的主从同步工具&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.percona.com/software/mysql-database/percona-xtrabackup"&gt;XtraBackup&lt;/a&gt; Percona 提供的备份工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;异构数据库迁移工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.convert-in.com/"&gt;Database migration and synchronization tools&lt;/a&gt; ：国外一家提供数据库迁移解决方案的公司&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/DataX"&gt;DataX&lt;/a&gt; ：阿里巴巴开发的数据库同步工具&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/yugong"&gt;yugong&lt;/a&gt; ：阿里巴巴开发的数据库迁移工具&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mysql.com/cn/products/workbench/"&gt;MySQL Workbench&lt;/a&gt; ：MySQL 提供的 GUI 管理工具，包含数据库迁移功能&lt;/li&gt;
&lt;li&gt;&lt;a href="https://community.hds.com/docs/DOC-1009855"&gt;Data Integration - Kettle&lt;/a&gt; ：国外的一款 GUI ETL 工具&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ispirer.cn/products/sql-server-to-mysql-migration"&gt;Ispirer&lt;/a&gt; ：提供应用程序、数据库异构迁移方案的公司&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.szmesoft.com/DB2DB"&gt;DB2DB 数据库转换工具&lt;/a&gt; ：一个国产的商业数据库迁移软件&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.navicat.com/en/products/navicat-premium"&gt;Navicat Premium&lt;/a&gt; ：经典的数据库管理工具，带数据迁移功能&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/cyq1162/p/5637978.html"&gt;DBImport&lt;/a&gt; ：个人维护的迁移工具，非常简陋，需要付费&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看上去异构数据库迁移工具和方案很多，但是经过我们调研，其中不少是为老派的传统行业服务的。 比如 Kettle / Ispirerer，他们关注的特性，不能满足互联网公司对性能、迁移耗时的要求。 简单筛选后，以下几个工具进入我们候选列表（为了做特性对比，加入几个同构数据库迁移工具）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;工具名称&lt;/th&gt;
&lt;th&gt;热数据备份保证一致性&lt;/th&gt;
&lt;th&gt;batch 操作&lt;/th&gt;
&lt;th&gt;支持异构数据库&lt;/th&gt;
&lt;th&gt;断点续接&lt;/th&gt;
&lt;th&gt;开源&lt;/th&gt;
&lt;th&gt;开发语言&lt;/th&gt;
&lt;th&gt;GUI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;mysqldump&lt;/td&gt;
&lt;td&gt;V 使用 &lt;code&gt;single-transaction&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;pt-table-sync&lt;/td&gt;
&lt;td&gt;V 使用 transaction 或 &lt;code&gt;lock table&lt;/code&gt; 的 FTWRL&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;Pell&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;DataX&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;yugong&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;DB2DB&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;.net&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;MySQL Workbench&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;由于异构数据库迁移，真正能够进入我们选型的只有 DataX / yugong / DB2DB / MySQL Workbench。 经过综合考虑，我们最终选用了三种方案， DB2DB 提供小数据量、简单模式的停机模式支持， 足以应付小数据量的停机迁移，开发工程师可以自助完成。 DataX 为大数据量的停机模式提供服务， 使用 JSON 进行配置，通过修改查询 SQL，可以完成一部分结构调整工程。 yugong 的强大可定制性也为在线迁移提供了基础， 我们在官方开源版本的基础之上，增加了以下额外功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 SQL Server 作为 Source 和 Target&lt;/li&gt;
&lt;li&gt;支持 MySQL 作为 Source&lt;/li&gt;
&lt;li&gt;支持 SQL Server 增量更新&lt;/li&gt;
&lt;li&gt;支持使用 YAML 作为配置格式&lt;/li&gt;
&lt;li&gt;调整 yugong 为 fat jar 模式运行&lt;/li&gt;
&lt;li&gt;支持表名、字段名大小写格式变化，驼峰和下划线自由转换&lt;/li&gt;
&lt;li&gt;支持表名、字段名细粒度自定义&lt;/li&gt;
&lt;li&gt;支持复合主键迁移&lt;/li&gt;
&lt;li&gt;支持迁移过程中完成 Range / Time / Mod / Hash 分表&lt;/li&gt;
&lt;li&gt;支持新增、删除字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于 yugong 的二次开发，我们也积累了一些经验，这个我们下篇文章会来分享。&lt;/p&gt;
&lt;h2 id="一致性校验工具"&gt;一致性校验工具&lt;/h2&gt;
&lt;p&gt;在 ETL 之后，需要有一个流程来确认数据迁移前后是否一致。 虽然理论上不会有差异，但是如果中间有程序异常， 或者数据库在迁移过程中发生操作，数据就会不一致。&lt;/p&gt;
&lt;p&gt;业界有没有类似的工具呢？ 有，Percona 提供了 pt-table-checksum 这样的工具， 这个工具设计从 master 使用 &lt;code&gt;checksum&lt;/code&gt; 来和 slave 进行数据对比。 这个设计场景是为 MySQL 主从同步设计， 显然无法完成从 SQL Server 到 MySQL 的一致性校验。 尽管如此，它的一些技术设计特性也值得参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一次检查一张表&lt;/li&gt;
&lt;li&gt;每次检查表，将表数据拆分为多个 trunk 进行检查&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;REPLACE...SELECT&lt;/code&gt; 查询，避免大表查询的长时间带来的不一致性&lt;/li&gt;
&lt;li&gt;每个 trunk 的查询预期时间是 0.5s&lt;/li&gt;
&lt;li&gt;动态调整 trunk 大小，使用指数级增长控制大小&lt;/li&gt;
&lt;li&gt;查询超时时间 1s / 并发量 25&lt;/li&gt;
&lt;li&gt;支持故障后断点恢复&lt;/li&gt;
&lt;li&gt;在数据库内部维护 src / diff，meta 信息&lt;/li&gt;
&lt;li&gt;通过 Master 提供的信息自动连接上 slave&lt;/li&gt;
&lt;li&gt;必须 Schema 结构一致&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们选择 yugong 作为 ETL 工具的一大原因也是因为它提供了多种模式。 支持 CHECK / FULL / INC / AUTO 四种模式。 其中 CHECK 模式就是将 yugong 作为数据一致性检查工具使用。 yugong 工作原理是通过 JDBC 根据主键范围变化，将数据取出进行批量对比。&lt;/p&gt;
&lt;p&gt;这个模式会遇到一点点小问题，如果数据库表没有主键，将无法进行顺序对比。 其实不同数据库有自己的逻辑主键，Oracle 有 &lt;code&gt;rowid&lt;/code&gt;， SQL Server 有 &lt;code&gt;physloc&lt;/code&gt;。这种方案可以解决无主键进行比对的问题。&lt;/p&gt;
&lt;h2 id="如何回滚"&gt;如何回滚&lt;/h2&gt;
&lt;p&gt;我们需要考虑一个场景，在数据库迁移成功之后业务已经运行了几个小时， 但是遇到了一些 Critical 级别的问题，必须回滚到迁移之前状态。 这时候如何保证这段时间内的数据更新到老的数据库里面去？&lt;/p&gt;
&lt;p&gt;最朴素的做法是，在业务层面植入 DAO 层的打点， 将 SQL 操作记录下来到老数据库进行重放。 这种方式虽然直观，但是要侵入业务系统，直接被我们否决了。 其实这种方式是 binlog statement based 模式， 理论上我们可以直接从 MySQL 的 binlog 里面获取数据变更记录。 以 row based 方式重放到 SQL Server。&lt;/p&gt;
&lt;p&gt;这时候又涉及到逆向 ETL 过程， 因为很可能 Translate 过程中，做了表结构重构。 我们的解决方法是，使用 Canal 对 MySQL binlog 进行解析， 然后将解析之后的数据作为数据源， 将其中的变更重放到 SQL Server。&lt;/p&gt;
&lt;p&gt;由于回滚的过程也是 ETL，基于 yugong， 我们继续定制了 SQL Server 的写入功能， 这个模式类似于在线迁移，只不过方向是从 MySQL 到 SQL Server。&lt;/p&gt;
&lt;h2 id="其他实践"&gt;其他实践&lt;/h2&gt;
&lt;p&gt;我们在迁移之前做了大量压测工作， 并针对每个迁移的 DB 进行线上环境一致的全真演练。 我们构建了和生产环境机器配置一样， 数据量一样的测试环境，并要求每个系统在上线之前都进行若干次演练。 演练之前准备详尽的操作手册和事故处理方案。 演练准出的标准是：能够在单次演练中不出任何意外，时间在估计范围内。 通过演练我们保证了整个操作时间可控，减少操作时候的风险。&lt;/p&gt;
&lt;p&gt;为了让数据库的状态更为直观的展现出来， 我们对 MySQL / SQL Server 添加了细致的 Metrics 监控。 在测试和迁移过程中，可以便利地看到数据库的响应情况。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201803/sql-server-metrics.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201803/sql-server-metrics.png"/&gt;&lt;figcaption&gt;201803/sql-server-metrics.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img alt="201803/mysql-metrics.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201803/mysql-metrics.png"/&gt;&lt;figcaption&gt;201803/mysql-metrics.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;为了方便 DBA 快速 Review SQL。 我们提供了一些工具，直接将代码库中的 SQL 拎出来， 可以方便地进行 SQL Review。 再配合其他 SQL Review 工具， 比如 &lt;a href="https://github.com/Meituan-Dianping/SQLAdvisor"&gt;Meituan-Dianping/SQLAdvisor&lt;/a&gt;， 可以实现一部分自动化，提高 DBA 效率，避免线上出现明显的 Slow SQL。&lt;/p&gt;
&lt;h2 id="最后"&gt;最后&lt;/h2&gt;
&lt;p&gt;基于这几种方案我们打了一套组合拳。经过将近一年的使用， 进行了 28 个通宵，迁移了 42 个系统， 完成了包括用户、订单、支付、电商、学习、社群、内容和工具的迁移。 迁移的数据总规模接近百亿，所有迁移项目均一次成功。 迁移过程中积累了丰富的实战经验，保障了业务快速向前发展。&lt;/p&gt;
&lt;p&gt;下一篇：&lt;a href="https://blog.alswl.com/2018/05/sql-server-migration-2/"&gt;从 SQL Server 到 MySQL（二）：在线迁移，空中换发动机 - Log4D&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/03/sql-server-migration-1/"&gt;https://blog.alswl.com/2018/03/sql-server-migration-1/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Mon, 12 Mar 2018 21:08:56 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-03-12:2018/03/sql-server-migration-1/</guid><category>SQLServer</category><category>MySQL</category><category>DB-Migration</category></item><item><title>从 2017 到 2018</title><link>https://blog.alswl.com/2018/01/2017-2018/</link><description>&lt;figure&gt;
&lt;img alt="2017 年 2 月摄于瑞虹月亮湾" src="https://4ocf5n.dijingchao.com/upload_dropbox/201801/moon.png"/&gt;&lt;figcaption&gt;2017 年 2 月摄于瑞虹月亮湾&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;small&gt;（2017 年 2 月摄于瑞虹月亮湾）&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;我有两年没公开年终总结了，原因很简单：年终结果无法让自己满意， 生活持续呈线性发展。那今年为什么又要将总结发出来呢？ 并非是我的 2017 过得如何充实、有成就感，而是出于两个目的。 第一是我认识到 OKR 需要平和对待，我目前对自己的生活是缺乏完全掌控力的， 我无法既渴求爆炸性的增长，又期望在这一过程中低风险，我需要接受这种现状。 第二是曝光自己的目标，让回顾和计划透明化。 从社会心理学的角度上来看，公开的承诺有助于个体更努力地驱动目标的完成。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="section"&gt;2017&lt;/h2&gt;
&lt;p&gt;2017 年我将个人生活纳入了 OKR 管理的范围，在这之前是琐碎的 Checklist 管理方法。 OKR 管理的优势在于年初可以关注大方向，保持全年的路线连贯性。 同时 OKR 可以量化的追踪每事项的进展，促进执行。&lt;/p&gt;
&lt;p&gt;我在 2017 年的 OKR 大致如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阅读
&lt;ul&gt;
&lt;li&gt;精读书籍&lt;/li&gt;
&lt;li&gt;粗读书籍&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;写作
&lt;ul&gt;
&lt;li&gt;写博客&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;健康
&lt;ul&gt;
&lt;li&gt;游泳&lt;/li&gt;
&lt;li&gt;跑步&lt;/li&gt;
&lt;li&gt;素食&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;习惯
&lt;ul&gt;
&lt;li&gt;冥想&lt;/li&gt;
&lt;li&gt;英语&lt;/li&gt;
&lt;li&gt;计划性&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;技术
&lt;ul&gt;
&lt;li&gt;操作系统理论&lt;/li&gt;
&lt;li&gt;新语言学习&lt;/li&gt;
&lt;li&gt;分布式系统&lt;/li&gt;
&lt;li&gt;大数据和人工智能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;创业准备
&lt;ul&gt;
&lt;li&gt;行业思考&lt;/li&gt;
&lt;li&gt;思维模型&lt;/li&gt;
&lt;li&gt;人脉认识&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;工作
&lt;ul&gt;
&lt;li&gt;普通任务的完成&lt;/li&gt;
&lt;li&gt;突破型任务的完成&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;家庭生活
&lt;ul&gt;
&lt;li&gt;家庭旅行（国内/国外）&lt;/li&gt;
&lt;li&gt;下一代&lt;/li&gt;
&lt;li&gt;上海话&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;财务
&lt;ul&gt;
&lt;li&gt;投资入门&lt;/li&gt;
&lt;li&gt;投资学习学习&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我就不将 Key Result 一一罗列出来了，加权平均之后，年度最终的得分是 0.40895。 我不觉得自己的目标设置得过高，过低的分数的原因是执行力不够。&lt;/p&gt;
&lt;p&gt;人的一身充满许多轻易就能够改变自己人生轨迹的事件，比如高考、恋爱，工作变动。 在 2017 年，我面临最重大事情就是我离开堆糖，在沪江开始了一段新的职业生涯。 不像那些足够理性的人，离开堆糖我非常不舍，过程中充满挣扎，最后还是做了决定。 到沪江之后，整个环境发生了变化，我从一百人不到的精英团队进入一个几千人、 具有许多历史包袱的大团队，一度压力很大。 在经历了冲突、沟通、推动这些状态之后，我也逐渐适应了。 此时又出现了新的焦虑：如何在一个相对迟缓的环境推动有效的变化。 这是一个大课题，也是我 2018 年想尝试解决的问题。&lt;/p&gt;
&lt;p&gt;17 年工作内容，主要围绕这么几块内容：将这个集团的 SQL Server 迁移到 MySQL 上。 核心需要解决的是将大规模异构数据进行离线/在线迁移，目标是缩短停机时间。 在迁移过程中还要提供一些数据重构功能，以便数据结构进行调整。 这个问题和当年阿里巴巴的去 IOE 有些相似，他们是 Oracle 到 MySQL，而我是从 SQL Server 到 MySQL。 我投入不少时间，好在结果挺不错，项目前后持续了半年时间，没有发生一例问题。 现在已经可以脱离我独立运作了。 除此之外我还在集团引入了 Metrics 系统；在集团开展一个每周的技术分享活动：沪江技术之夜。&lt;/p&gt;
&lt;p&gt;2017 全年看书有 48 本，是我近年来读书较多的一年。读书速度加快的主要原因是： 我主动追求更快的读书速度，提升索引归纳能力。 为此反复学习了「如何阅读一本书」/「如何高效学习」等方法。&lt;/p&gt;
&lt;p&gt;今年推荐阅读的几本书是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「讲理 : 作文四书之一」 - 王鼎钧
&lt;ul&gt;
&lt;li&gt;教你如何写论说文，让每个作者能挥洒自如表达自己思想和态度。 作者有一套「作文四书」，感谢余晟老师赠书。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;「人类简史」 - 尤瓦尔&amp;middot;赫拉利
&lt;ul&gt;
&lt;li&gt;开脑洞的人类历史学研究，作者妙笔生花，将复杂事情以形象和有趣的方法呈现给大家。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;「腾讯传 : 中国互联网公司进化论」- 吴晓波
&lt;ul&gt;
&lt;li&gt;中国互联网企业发家史，虽然大环境在不断变化，但当时决策的逻辑还有相当参考价值。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;「解读中国经济 - 林毅夫」
&lt;ul&gt;
&lt;li&gt;作为高参，林毅夫对中国当代经济环境理解深刻。 书中讲述了从 78 年改革开放到现在的制度变迁。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;17 写了 7 篇文章，低于预期。虽然在我的 inbox 里面存了不少草稿， 但觉得自己的逻辑还不流畅，修辞也不够优雅，还不好意思拿出来给大家看。 文字驾驭能力差这个问题我也意识到了，恰好边上有位写作高手，推荐了一些相关书籍。 期望接下来通过学习写作得到改善。&lt;/p&gt;
&lt;p&gt;2017 年去了一趟香港，不幸的是遭遇身体不适，在中环地铁晕厥，导致澳门行也取消。 患难见真情，我老婆对我也是真感情。除此之外，还和夫人去了一趟九华山。&lt;/p&gt;
&lt;p&gt;17 年还有一件幸运的事情，上海牌照拍了 17 个月之后终于中了，具备了买车的资格。 唯一遗憾的是，同时中了两张牌照，但是没有这么大的需求，无奈放弃一张， 还被罚款 1000 元。&lt;/p&gt;
&lt;p&gt;17 年让我产生幸福感的几个物件推荐：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ErgoDox 键盘：可编程的分体键盘，用了一遍，手腕再也不疼了。
&lt;ul&gt;
&lt;li&gt;我的 ErgoDox 驱动配置： &lt;a href="https://github.com/alswl/ergodox-firmware"&gt;alswl/ergodox-firmware: firmware for the ergoDOX keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我在知乎回答的感受帖： &lt;a href="https://www.zhihu.com/question/52088337/answer/141073759"&gt;使用Ergodox人体工学键盘是什么样的体验？ - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;洁成背心式垃圾袋
&lt;ul&gt;
&lt;li&gt;解决了要丢垃圾的中年男人担心垃圾袋脏的问题&lt;/li&gt;
&lt;li&gt;&lt;a href="https://item.jd.com/1529913.html"&gt;洁成背心式垃圾袋三卷装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Toodledo
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.toodledo.com/index.php?ref=td4d1aebdd0f59e"&gt;Toodledo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我认为最好的 GTD 管理软件，这一年我面临的工作频度非常高， 全就靠 Toodledo 帮我管理任务，基于复杂的 Searches， 大大提高我上下文切换速度，老工具焕发新春。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Proxifier
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.proxifier.com/"&gt;Proxifier - Bypass firewall and proxy, tunnel connections through an HTTPS and SOCKS proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mac 下能够将任何 App 设置代理的工具。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;「得到」的「硅谷来信」- 吴军
&lt;ul&gt;
&lt;li&gt;吴军作为成功的工程师、科学家、技术领袖、科技作家、历史作家， 有太多的思想可以被学习和直接使用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="section-1"&gt;2018&lt;/h2&gt;
&lt;p&gt;2018 年我将迎来自己的三十而立。&lt;/p&gt;
&lt;p&gt;人这种动物，总是在周期性的时间点上比平时更容易思考。 我花了几个周末，加上好几个洗澡的时间思考我接下来的目标是什么。 1 年的目标？5 年的目标？&lt;/p&gt;
&lt;p&gt;我一度没有答案，尤其是在被罗胖等内容创业者贩卖焦虑之后。 我倒是不担心自己像中兴那位 35 岁的同行，在各种压力之下逼得跳楼。 我的压力和焦虑主要是来自我自己未来想象空间太小。 剩下的时间越少，可以调整的变量范围就越小，随着时间巨轮碾过， 不管未来发展是线性还是非线性，都在忙忙碌碌中逐步变成现实。&lt;/p&gt;
&lt;p&gt;有时候也挺恨自己不具备天马行空的想象力和愿景。 我思考的结果是，技术发展速度虽然快，但是核心改变是有限的。 我目前没有足够的想法来做上层的事，那就切入基础领域，花时间补足短板。 在这个思路指导下，新年的 OKR 对基础领域的投入提高了比例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;Direction&lt;/th&gt;
&lt;th&gt;Objective&lt;/th&gt;
&lt;th&gt;Key Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;掌握面向未来的技能&lt;/td&gt;
&lt;td&gt;初步掌握机器学习的基本技能&lt;/td&gt;
&lt;td&gt;学完 Coursera Machine Learning&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;学完「集体编程智慧」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;掌握区块链知识&lt;/td&gt;
&lt;td&gt;读一本区块链的书&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;掌握基础的技能&lt;/td&gt;
&lt;td&gt;数学&lt;/td&gt;
&lt;td&gt;看完「数学之美」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看完「什么是数学」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看完「如何解题」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;写一篇关于数学的文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;弄清楚概率论的研究对象、范畴、方法论&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;提升英文水平&lt;/td&gt;
&lt;td&gt;扇贝背完 TOFEL 词汇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;扇贝背完 GAE 词汇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;写 2 篇英文博客&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;经济管理&lt;/td&gt;
&lt;td&gt;读完「经济学原理」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读完吴晓波的一系列书&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读 3 本关于投资的书&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;通过投资获得 X 元收益&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;提升系统化思考能力&lt;/td&gt;
&lt;td&gt;读 5 本相关书籍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;学完 Coursera Model Thinking 课程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;团队管理&lt;/td&gt;
&lt;td&gt;阅读团队管理相关 5 本书籍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;产出 3 篇相关文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;XXX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;提升专业技能&lt;/td&gt;
&lt;td&gt;Scala 语言深入&lt;/td&gt;
&lt;td&gt;学完 Coursera Scala 课程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读完「Akka Cookbook」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读完「深入理解 Scala」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;分布式系统深入&lt;/td&gt;
&lt;td&gt;学习 MIT 课程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;研究 TiDB，产出文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;写一篇 CAP 文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;计算机语言和基础&lt;/td&gt;
&lt;td&gt;读完「Java Concurrency in Practice」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读完「Go 语言编程」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读完「算法新解」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;读完「SICP」&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;提升家庭生活质量&lt;/td&gt;
&lt;td&gt;旅行&lt;/td&gt;
&lt;td&gt;出国旅行 1 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;出江浙沪旅行 2 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;父母&lt;/td&gt;
&lt;td&gt;回父母家 10 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;小孩&lt;/td&gt;
&lt;td&gt;生 1 个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;车&lt;/td&gt;
&lt;td&gt;买 1 辆车&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;养成习惯&lt;/td&gt;
&lt;td&gt;运动&lt;/td&gt;
&lt;td&gt;全年跑步或游泳 36 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;计划和复盘&lt;/td&gt;
&lt;td&gt;全年做早晨计划 264 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;全年做习惯追踪 365 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;每周做 Review&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;提升个人 PR&lt;/td&gt;
&lt;td&gt;结实外部朋友&lt;/td&gt;
&lt;td&gt;参会 4 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;面向 100+ 人的外部做 1 次分享&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;外部代码贡献&lt;/td&gt;
&lt;td&gt;参与 1 个开源项目，提交核心作用代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;提升写作能力&lt;/td&gt;
&lt;td&gt;全年写作 12 篇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;参加开智的课程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从目标执行的可行性上来说，年度 OKR 往往是允许甚至是推荐在执行过程中修改的。 季度的 OKR 在确定之后不允许进行修改。毕竟计划赶不上变化，但是又不能朝令夕改。 希望我今年在大方向保持稳定，每个季度能够执行贯彻到位，将时间价值最大化。&lt;/p&gt;
&lt;p&gt;2017，混乱和秩序相交。2018，进入冰山之下。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2018/01/2017-2018/"&gt;https://blog.alswl.com/2018/01/2017-2018/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Sun, 21 Jan 2018 22:57:26 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2018-01-21:2018/01/2017-2018/</guid><category>2017</category><category>年度</category></item><item><title>工作和热情</title><link>https://blog.alswl.com/2017/12/enthusiasm/</link><description>&lt;figure&gt;
&lt;img alt="201712/work.jpg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201712/work.jpg"/&gt;&lt;figcaption&gt;201712/work.jpg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最近和一位老朋友吃饭，他说他最近比较苦恼： 「开始有职业危机了，担心自己失去对工作的热情，似乎离油腻的中年人又进了一步」。 作为一名互联网工程师，我深知这个行业技术日新月异， 如果对工作都失去了兴趣，会将自己置于跟不上时代发展、自身得不到提升的危险境地； 从个人生活质量来看，工作占据了一天 1/3 ~ 2/3 的时间， 失去热情的工作会成为人生的桎梏，不是驾驭工作，而是被工作所奴役， 这会进而影响一个人的身心健康，得个抑郁症稀疏平常。&lt;/p&gt;
&lt;p&gt;如何保持对工作的热情，当自己陷入困境时候如何重新调动工作热情？ 这是职场人需要深思的问题。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id="工作带来什么"&gt;工作带来什么？&lt;/h2&gt;
&lt;p&gt;从因到果，让我们先聊聊工作给我们带来什么？&lt;/p&gt;
&lt;p&gt;对于不是含着金钥匙出生的群众来说，物质上的回报是重要并且第一位的。 如果温饱的需求都没有被满足，就没必要讨论精神世界的热情了。 大部分刚出校园的职场新人可能处于这个状态，一人吃饱全家不愁。 从马斯洛需求层次理论说起： 当「生理需求」、「安全需求」被满足之后，就需要「社交需求」、「尊重需求」 和「自我实现的需求」。 将这些需求映射到工作中，那就是成了「有志同道合的人一起工作」， 「工作能干出成绩，获得认可」， 「有挑战，干出成就感」。&lt;/p&gt;
&lt;p&gt;我有过一段经历：一个优秀工程师突然申请离职，和他沟通离职原因时， 他的反馈是「乏了，觉得工作没劲，甚至怀疑开发工程师是否是自己想要的工作， 想要回家休息一段时间」。 这个小伙子其实很优秀很优秀，FullStack，好奇心强烈，休息了一段时间，去了豆瓣厂。 我们后来分析，可能有这么几个原因导致他对这份工作失去了兴趣：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;他被分配到的工作内容不够有挑战，业务开发在一定程度上面有重复性&lt;/li&gt;
&lt;li&gt;他所做的几个项目，没有被充分发挥价值，没有获得足够的认同感&lt;/li&gt;
&lt;li&gt;公司的业务没有出现迅猛爆发，缺乏业务上的成就感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于这个案例的存在，后期我们也做了一些调整，避免再次发生这样的优秀人才流失悲剧。 当然，这些调整都是从组织的视角出发。但并非所有组织都有这样自省能力。 那么作为个体，有哪些方法可以挽回逝去的热情呢？&lt;/p&gt;
&lt;h2 id="放大已有成绩的影响力"&gt;放大已有成绩的影响力&lt;/h2&gt;
&lt;p&gt;将已有的工作成绩影响力放大，这是最不耗力气的一种办法。&lt;/p&gt;
&lt;p&gt;我们工作中，应当是取得了一些成绩的，这些成绩是否已经最大化发挥作用了？ 还有没有价值可以深挖？&lt;/p&gt;
&lt;p&gt;扩大作用的一种做法就是写作。 将工作内容中有创新、创意的地方，落实为文章进行发表。 不少公司会有和技术相关的宣传平台，比如沪江就有一个「沪江技术学院」公众号。 就比较适合发布公司内的一些技术创新、工程实践。 如果公司没有提供这样的平台，也可以使用自己的公众号或者博客， 唯一要注意的就是敏感信息不要泄露。&lt;/p&gt;
&lt;p&gt;除了使用写文章的方式，还有其他一些思路可以参考：做内部/外部分享； 将成果开源出来。做分享可以给自己带来不少成就感， 内部的分享可以更快速的对自己的成果进行宣传，也能通过这种形式培养信任感。 做开源是一个更大的话题，不少团队有这样的成功经验。比如饿了么的 Element， 我司也开源了 Guice 这样的系统。 这都是在日常工作中的工程实施总结形成的开源项目。&lt;/p&gt;
&lt;p&gt;有同学会问：自己觉得自己的工作亮点太少，缺乏对外部分享的价值。 其实这种担忧大可不必，只要是有价值的输出，总是能找到适合的输出对象， 如果对行业老司机没有帮助，那么对新人是否有帮助呢？ 对上下游的 parterner 是否有帮助么？ 前两天还看到一个阿里的开源项目 &lt;a href="https://github.com/alibaba/java-dns-cache-manipulator"&gt;alibaba/java-dns-cache-manipulator&lt;/a&gt;， 你能说这个很复杂么？但仍然可以给特定场景的人带来帮助。&lt;/p&gt;
&lt;h2 id="加大深度广度追求极致"&gt;加大深度广度，追求极致&lt;/h2&gt;
&lt;p&gt;假如工作内容是千篇一律，相信不管是谁都无法长期容忍。 这时候就要考虑一下突破自己固有的职责边界。&lt;/p&gt;
&lt;p&gt;第一种路径是突破工作内容所需要的深度， 将工作关注的问题能够刨根问底。在平凡的工作机会上面做出彩。 牛顿在发现力学三大定律，发明微积分后，还去英国皇家铸币厂工作。 我相信作为物理学家、数学家，他对主持铸币这个工作和他过往的工作无关， 但他仍然投入了极大精力和热情去处理事务，并且变革了从银本位到金本位。&lt;/p&gt;
&lt;p&gt;第二种方式是扩大自己的涉猎面，尝试探索新鲜事务。 在日常工作中，思考一下自己的上游、下游是否有遇到一些瓶颈，可否给予他们帮助？ 支撑自己日常工作的基础设施是否足够高效、健壮，能否在上面出一些力量？ 更有甚者，一些技术同学可以向前台走，去从技术的视角推动业务的变化。 也有一些同学可以往后走，往 BI 或者 AI 发展。 改变自己的职能变动太大，但是适当扩展自己涉猎面可以增强自己综合素质， 为未来提供更多可能性。&lt;/p&gt;
&lt;p&gt;最后一个路径是以更极致的标准来要求自己。 有些朋友可能会说道：在工程实践中，我们不是不推崇过度设计么？ 的确，我们要避免矫枉过正，但如果现在要求达到 60 分，我们做 120 分可能是过度设计， 我并不觉得追求 80 分有什么过分。 以超出需求者期望的姿态做事，技术上面追求极致，业务上追求卓越， 过程可能比较艰辛，但是获得的成就感也会更大。&lt;/p&gt;
&lt;p&gt;积极主动去摸索自己的瓶颈，不要被自己的现状所禁锢。 掌握自己固有知识，挖掘上下游知识，这是保持热情的重要方式。&lt;/p&gt;
&lt;h2 id="寻找志同道合的朋友"&gt;寻找志同道合的朋友&lt;/h2&gt;
&lt;p&gt;一个人是孤独的，鲁滨逊尚且需要星期五相伴， 何况我们这些生活在高度复杂社会里的人。 当一个人对方向产生迷茫，对处境有困惑，对问题感到棘手时候， 陪伴在周围的朋友是极其重要的。&lt;/p&gt;
&lt;p&gt;我在前东家曾经有过迷茫的时间段，但是遇到了相当多可以学习的朋友。 我们交流对现状的看法，探索解决问题的思路，畅谈未来发展的可能性。 这个过程中，发挥出了 1+1&amp;gt;2 的效应，互相激励，互相促进。&lt;/p&gt;
&lt;p&gt;如果在团队内找不到合适的伙伴， 那么参加外部活动，加入本地社区就是另外一种寻找朋友的方式。 在豆瓣同城、Meetup 等网络社区中，都可以找到大量同行业的朋友。 我自己曾经深度参与的组织有 CPyUG（Python 社区） / GDG（Google 开发者社区） / LUG（Linux 用户组）。&lt;/p&gt;
&lt;p&gt;写作也是一种高效的社交，建立自己的知识输出平台，有利于结实更多同行业人才。 输出自己的经验的同时，还能进行二次思考，并且形成自己的个人品牌。&lt;/p&gt;
&lt;h2 id="用脚投票"&gt;用脚投票&lt;/h2&gt;
&lt;p&gt;如果经过各种尝试，发现的确无法恢复自己对工作的热情，那么也可能是环境的问题。 给自己一些时间思考，思考清楚原因。 离开对个体和团队来说未必是一件好事。 长期消沉没有战斗力的人，对于团队其实是团队毒药，会将气氛带差。 在一个没有热情的环境中工作，也是浪费个人的时间。「逝者如斯，不舍昼夜」， 一个人的生命何其短暂，不要浪费在没热情的事情上。&lt;/p&gt;
&lt;p&gt;如果离开当前的团队，那么在下次选择时候，一定要慎重考虑之前遇到的问题， 避免悲剧重复发生。&lt;/p&gt;
&lt;h2 id="最后"&gt;最后&lt;/h2&gt;
&lt;p&gt;一个人很难持续保持极高热情，原因是你的工作内容始终会变得熟悉和重复。 这时候即进入一个舒适区，选择适应环境还是挣扎走出来， 这取决于个人的追求。 努力调整自己，通过学习、体验、Review 的方式，来帮助自己成长。 当到达瓶颈期的时候，想办法从自身、外部寻找帮助，重新进入非舒适区，才能让自己持续成长。&lt;/p&gt;
&lt;p&gt;祝你有热情地工作。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2017/12/enthusiasm/"&gt;https://blog.alswl.com/2017/12/enthusiasm/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Thu, 21 Dec 2017 23:46:59 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2017-12-21:2017/12/enthusiasm/</guid><category>Enthusiasm</category><category>Passion</category></item><item><title>一个关于 nolock 的故事：深入理解数据库隔离级别</title><link>https://blog.alswl.com/2017/09/sql-server-nolock/</link><description>&lt;figure&gt;
&lt;img alt="sql-server.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/sql-server.png"/&gt;&lt;figcaption&gt;sql-server.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;加入沪江不久，我就被扔到一个将集团 SQL Sever 的数据库迁移到 MySQL 的项目里， 同时伴随进行的还有 .net 系统迁移到 Java 系统。 在这个过程中我发现了一个很有趣的现象：历史遗留的 .net 项目中， 几乎所有的 SQL 中都会使用一个关键字：&lt;code&gt;nolock&lt;/code&gt;。 这让我很困惑，&lt;code&gt;nolock&lt;/code&gt; 的字面意思是对当前技术不使用锁技术，为什么要这样用呢？&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;我找了一个范例如下：&lt;/p&gt;
&lt;div class="sourceCode" id="cb1"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb1-1" title="1"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; [&lt;span class="kw"&gt;id&lt;/span&gt;] &lt;/a&gt;
&lt;a class="sourceLine" id="cb1-2" title="2"&gt;&lt;span class="kw"&gt;FROM&lt;/span&gt;   [dbo].[foos] &lt;span class="kw"&gt;WITH&lt;/span&gt;(nolock) &lt;/a&gt;
&lt;a class="sourceLine" id="cb1-3" title="3"&gt;&lt;span class="kw"&gt;WHERE&lt;/span&gt;  aField &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;42&lt;/span&gt; &lt;/a&gt;
&lt;a class="sourceLine" id="cb1-4" title="4"&gt;       &lt;span class="kw"&gt;AND&lt;/span&gt; bField &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt; &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作为横向支持工程师，开发工程师会问我：「数据库即将从 SQL Server 迁移到 MySQL，我们编码中还需要使用 &lt;code&gt;nolock&lt;/code&gt; 么？ MySQL 里面对应的写法是什么？」。 我并没有 SQL Server 的生产环境使用经验，一时间无法回答。 于是课后做相关知识学习，这里就是这次学习的一点成果。&lt;/p&gt;
&lt;p&gt;这个问题将被拆解成三个小问题进行回答：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nolock&lt;/code&gt; 是什么？&lt;/li&gt;
&lt;li&gt;为什么会需要在每个 Query 语句使用 &lt;code&gt;nolock&lt;/code&gt;？&lt;/li&gt;
&lt;li&gt;MySQL 的对应写法是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我们一个一个来看。&lt;/p&gt;
&lt;h2 id="第一个问题nolock-是什么"&gt;第一个问题：nolock 是什么？&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nolock&lt;/code&gt; 是 SQL Server 的一个关键字，这类关键字官方将其称之为 Hints。 Hints 的设计目的是为了能够让 SQL 语句在运行时，动态修改查询优化器的行为。 在语法上，Hints 以 &lt;code&gt;WITH&lt;/code&gt; 开头。除了 &lt;code&gt;WITH(nolock)&lt;/code&gt;， 还有 &lt;code&gt;TABLOCK&lt;/code&gt; / &lt;code&gt;INDEX&lt;/code&gt; / &lt;code&gt;ROWLOCK&lt;/code&gt; 等常见的 Hints。&lt;/p&gt;
&lt;p&gt;让我们仔细看看 MSDN 文档上的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;nolock&lt;/code&gt; 的作用等同于 &lt;code&gt;READUNCOMMITTED&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;READUNCOMMITTED&lt;/code&gt; 这是一种 RDBMS 隔离级别。 使用 &lt;code&gt;nolock&lt;/code&gt; 这个关键词，可以将当前查询语句隔离级别调整为 &lt;code&gt;READ UNCOMMITTED&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;计算机基础好的同学，应该对 &lt;code&gt;READUNCOMMITTED&lt;/code&gt; 这个关键词还有印象。 而基础不扎实的同学，也许只是觉得这个关键词眼熟，但是讲不清楚这是什么。 如果阅读这句话完全没有理解困难，那恭喜你，你可以直接跳到下一节了。 其他朋友就跟随我继续探索一下 RDMBS 的世界，复习一下隔离级别相关的知识。&lt;/p&gt;
&lt;h3 id="隔离级别"&gt;隔离级别&lt;/h3&gt;
&lt;p&gt;SQL 92 定义了四个隔离级别 （&lt;a href="https://en.wikipedia.org/wiki/Isolation_(database_systems)#Isolation_levels"&gt;Isolation (database systems) - Wikipedia&lt;/a&gt;）， 其隔离程度由高到低是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可序列化（Serializable）&lt;/li&gt;
&lt;li&gt;可重复读（Repeatable reads）&lt;/li&gt;
&lt;li&gt;提交读（Read committed）&lt;/li&gt;
&lt;li&gt;未提交读（Read uncommitted）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单单将这几个技术名词简单地罗列出来并没有什么意义，还有这几个问题需要搞清楚：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;隔离级别解决什么问题？&lt;/li&gt;
&lt;li&gt;为什么存在多种隔离级别？&lt;/li&gt;
&lt;li&gt;我们所谓的隔离级别从高到低，是什么含义，如何逐层降低的？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先是「隔离级别解决什么问题？」， 用通俗的语言描述就是：加一个针对数据资源的锁，从而保证数据操作过程中的一致性。&lt;/p&gt;
&lt;p&gt;这是最简单的实现方式，过于粗暴的隔离性将大幅降低性能， 多种隔离级别就是是为了取得两者的平衡。&lt;/p&gt;
&lt;p&gt;接下来我们来回答第二个问题「为什么存在多种粒度的隔离级别？」 这其实是一个需求和性能逐步平衡的过程，&lt;/p&gt;
&lt;p&gt;我们逐层递进，将隔离级别由低到高逐层面临进行分析。&lt;/p&gt;
&lt;h3 id="read-uncommitted"&gt;Read Uncommitted&lt;/h3&gt;
&lt;p&gt;Read Uncommitted 这个隔离级别是最低粒度的隔离级别， 如同它的名字一般，它允许在操作过程中不会锁，从而让当前事务读取到其他事务的数据。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="read-uncommitted.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/read-uncommitted.png"/&gt;&lt;figcaption&gt;read-uncommitted.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;如上图所示，在 Transaction 2 查询时候，Transaction 1 未提交的数据就已经对外暴露。 如果 Transaction 1 最后 Rollback 了，那么 Transaction 读取的数据就是错误的。&lt;/p&gt;
&lt;p&gt;「读到了其他事务修改了但是未提交的数据」即是&lt;strong&gt;脏读&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id="read-committed"&gt;Read Committed&lt;/h3&gt;
&lt;p&gt;想要避免脏读，最简单的方式就是在事务更新操作上加一把写锁， 其他事务需要读取数据时候，需要等待这把写锁释放。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="read-committed-1.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/read-committed-1.png"/&gt;&lt;figcaption&gt;read-committed-1.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;如上图所示，Transaction 1 在写操作时候，对数据 A 加了写锁， 那么 Transaction 2 想要读取 A，就必须等待这把锁释放。 这样就避免当前事务读取其他事务的未提交数据。&lt;/p&gt;
&lt;p&gt;但是除了脏读，一致性的要求还需要「可重复读」，即 「在一个事务内，多次读取的特定数据都必须是一致的 （即便在这过程中该数据被其他事务修改）」。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="read-committed-2.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/read-committed-2.png"/&gt;&lt;figcaption&gt;read-committed-2.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;上图就是没能保证「可重复度」，Transaction 2 第一次读取到了数据 A， 然后 Transaction 1 对数据 A 更新到 A&amp;rsquo;，那么当 Tranction 2 再次读取 A 时候， 它本来期望读到 A，但是却读到了 A&amp;rsquo;，这和它的预期不相符了。 解决这个问题，就需要提升隔离级别到「Repeatable Read」。&lt;/p&gt;
&lt;h3 id="repeatable-read"&gt;Repeatable Read&lt;/h3&gt;
&lt;p&gt;这个名字非常容易理解，即保障在一个事务内重复读取时， 始终能够读取到相同的内容。来看图：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="repeatable-read.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/repeatable-read.png"/&gt;&lt;figcaption&gt;repeatable-read.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;如上所示，当 Transation 2 读取 A 时候，会同时加上一把 Read Lock， 这把锁会阻止 Transaction 1 将 A 更新为 A&amp;rsquo;，Transaction 1 要么选择等待， 要么就选择结束。&lt;/p&gt;
&lt;p&gt;当我们将隔离级别升到这里是，似乎已经完美无缺了。 不管是写入还是读取，我们都可以保证数据的一致性不被破坏。 但是其实还有漏洞：新增数据的一致性！&lt;/p&gt;
&lt;p&gt;上述的三个隔离级别，都是对特定的一行数据进行加锁， 那假如将要更新的数据还没有写入数据库，如何进行加锁呢？ 比如自增表的新键，或者现有数据内的空缺 Key？&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="repeatable-read-2.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/repeatable-read-2.png"/&gt;&lt;figcaption&gt;repeatable-read-2.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;如图所示，在上述操作中，Transaction 2 查询了一个范围 Range 之后，Transaction 1 在这个范围内插入了一条新的数据。此时 Transaction 2 再次进行范围查询时候， 会发现查询到的 Range 和上次已经不一样了，多了一个 newA。&lt;/p&gt;
&lt;p&gt;这就是最高隔离级别才能解决的「幻影读」： 当两个完全相同的查询语句执行得到不同的结果集， 这常常在范围查询中出现。&lt;/p&gt;
&lt;h3 id="serializable"&gt;Serializable&lt;/h3&gt;
&lt;p&gt;从字面意思看，该隔离级别需要将被操作的数据加锁加一把锁。 任何读写操作都需要先获得这把锁才能进行。如果操作中带 WHERE 条件， 还需要将 WHERE 条件相关的范围全部加锁。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="serializable.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201709/serializable.png"/&gt;&lt;figcaption&gt;serializable.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;如图所示，在 Transaction 2 操作过程中，会对 Range 进行加锁， 此时其他事务无法操作其中的数据，只能等待或者放弃。&lt;/p&gt;
&lt;h3 id="db-的默认隔离级别"&gt;DB 的默认隔离级别&lt;/h3&gt;
&lt;p&gt;现在我们已经理解了隔离级别，那么「SQL Server 默认使用的隔离级别是什么呢？」 根据 &lt;a href="https://msdn.microsoft.com/en-us/library/ms175909.aspx"&gt;Customizing Transaction Isolation Level&lt;/a&gt; 这个文档描述，SQL Server 默认隔离级别是 READ COMMITTED。&lt;/p&gt;
&lt;p&gt;MySQL InnoDB 的默认隔离级别可以在 &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-transaction-isolation-levels.html"&gt;MySQL :: MySQL 5.7 Reference Manual :: 14.5.2.1 Transaction Isolation Levels&lt;/a&gt; 查询到，是 Read-Repeatable。&lt;/p&gt;
&lt;p&gt;隔离级别并没有最好之说，越高隔离级别会导致性能降低。 隔离级别的设定需要考虑业务场景。&lt;/p&gt;
&lt;h2 id="第二个问题为什么要使用-nolock_1"&gt;第二个问题：为什么要使用 nolock？&lt;/h2&gt;
&lt;p&gt;我们已经知道 &lt;code&gt;nolock&lt;/code&gt; 的作用是动态调整隔离级别。 那为什么在 SQL Server 的 Query 操作中，需要启用 &lt;code&gt;nolock&lt;/code&gt; 呢？ 我问了几个工程师，他们都语焉不详，或者是很泛泛地说：禁用读写锁，可以提升查询性能。&lt;/p&gt;
&lt;p&gt;此时我产生了困惑：「那么此时的数据一致性就不需要考虑了么？ 我们的数据库，已经到了需要禁用锁的程度来进行优化了么？」 我于是自己去探索，想知道为何广泛使用 &lt;code&gt;nolock&lt;/code&gt; 会成为一个「最佳实践」？&lt;/p&gt;
&lt;p&gt;由于时代久远，我只能追述到一些相关信息，比如 &lt;a href="https://blogs.msdn.microsoft.com/sqlcat/2013/09/16/top-10-sql-server-integration-services-best-practices/"&gt;Top 10 SQL Server Integration Services Best Practices | SQL Server Customer Advisory Team&lt;/a&gt; 中提到 「Use the NOLOCK or TABLOCK hints to remove locking overhead.」 但这个是针对于 SSIS 查询器，并不是针对业务内部使用。 反而能找到一大堆的文档，在反对使用 &lt;code&gt;nolock&lt;/code&gt; 这个关键字。&lt;/p&gt;
&lt;p&gt;继续追查下去，还从蛛丝马迹中寻找到一个使用 &lt;code&gt;nolock&lt;/code&gt; 的理由， SQL Server 默认是 Read Committed， 更新操作会产生排它锁，会 block 这个资源的查询操作， 已插入但未提交的数据主键也会产生一个共享锁， 而此时则会 block 这张表的全表查询和 Insert 操作。 为了避免 Insert 被 Block，就会推荐使用 &lt;code&gt;nolock&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;为了验证这是原因，我做一些 &lt;code&gt;nolock&lt;/code&gt; 测试。&lt;/p&gt;
&lt;h3 id="nolock-测试"&gt;nolock 测试&lt;/h3&gt;
&lt;p&gt;检查当前 SQL Server 隔离级别，确认隔离级别是默认的 Read Committed：&lt;/p&gt;
&lt;div class="sourceCode" id="cb2"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb2-1" title="1"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="cf"&gt;CASE&lt;/span&gt; transaction_isolation_level&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-2" title="2"&gt;       &lt;span class="cf"&gt;WHEN&lt;/span&gt; &lt;span class="dv"&gt;0&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-3" title="3"&gt;         &lt;span class="cf"&gt;THEN&lt;/span&gt; &lt;span class="st"&gt;'Unspecified'&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-4" title="4"&gt;       &lt;span class="cf"&gt;WHEN&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-5" title="5"&gt;         &lt;span class="cf"&gt;THEN&lt;/span&gt; &lt;span class="st"&gt;'ReadUncommitted'&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-6" title="6"&gt;       &lt;span class="cf"&gt;WHEN&lt;/span&gt; &lt;span class="dv"&gt;2&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-7" title="7"&gt;         &lt;span class="cf"&gt;THEN&lt;/span&gt; &lt;span class="st"&gt;'ReadCommitted'&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-8" title="8"&gt;       &lt;span class="cf"&gt;WHEN&lt;/span&gt; &lt;span class="dv"&gt;3&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-9" title="9"&gt;         &lt;span class="cf"&gt;THEN&lt;/span&gt; &lt;span class="st"&gt;'Repeatable'&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-10" title="10"&gt;       &lt;span class="cf"&gt;WHEN&lt;/span&gt; &lt;span class="dv"&gt;4&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-11" title="11"&gt;         &lt;span class="cf"&gt;THEN&lt;/span&gt; &lt;span class="st"&gt;'Serializable'&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-12" title="12"&gt;       &lt;span class="cf"&gt;WHEN&lt;/span&gt; &lt;span class="dv"&gt;5&lt;/span&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-13" title="13"&gt;         &lt;span class="cf"&gt;THEN&lt;/span&gt; &lt;span class="st"&gt;'Snapshot'&lt;/span&gt; &lt;span class="cf"&gt;END&lt;/span&gt; &lt;span class="kw"&gt;AS&lt;/span&gt; TRANSACTION_ISOLATION_LEVEL&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-14" title="14"&gt;&lt;span class="kw"&gt;FROM&lt;/span&gt; sys.dm_exec_sessions&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-15" title="15"&gt;&lt;span class="kw"&gt;WHERE&lt;/span&gt; session_id &lt;span class="op"&gt;=&lt;/span&gt; @@SPID&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-16" title="16"&gt;&lt;/a&gt;
&lt;a class="sourceLine" id="cb2-17" title="17"&gt;&lt;span class="co"&gt;-- ReadCommitted&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建表，初始化数据：&lt;/p&gt;
&lt;div class="sourceCode" id="cb3"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb3-1" title="1"&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TABLE&lt;/span&gt; foos (&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-2" title="2"&gt;  &lt;span class="kw"&gt;id&lt;/span&gt;    BIGINT    &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt;,&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-3" title="3"&gt;  &lt;span class="fu"&gt;value&lt;/span&gt; &lt;span class="dt"&gt;NCHAR&lt;/span&gt;(&lt;span class="dv"&gt;10&lt;/span&gt;) &lt;span class="kw"&gt;NULL&lt;/span&gt;,&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-4" title="4"&gt;  &lt;span class="kw"&gt;CONSTRAINT&lt;/span&gt; pk &lt;span class="kw"&gt;PRIMARY&lt;/span&gt; &lt;span class="kw"&gt;KEY&lt;/span&gt; clustered (&lt;span class="kw"&gt;id&lt;/span&gt;)&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-5" title="5"&gt;);&lt;/a&gt;
&lt;a class="sourceLine" id="cb3-6" title="6"&gt;&lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;INTO&lt;/span&gt; foos (&lt;span class="kw"&gt;id&lt;/span&gt;, &lt;span class="fu"&gt;value&lt;/span&gt;) &lt;span class="kw"&gt;VALUES&lt;/span&gt; (&lt;span class="dv"&gt;1&lt;/span&gt;, &lt;span class="st"&gt;'1'&lt;/span&gt;), (&lt;span class="dv"&gt;2&lt;/span&gt;, &lt;span class="st"&gt;'2'&lt;/span&gt;);&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 Transaction 1 中发起 Update 操作（INSERT / DELETE 同理），但是并不做 Commit 提交：&lt;/p&gt;
&lt;div class="sourceCode" id="cb4"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb4-1" title="1"&gt;&lt;span class="cf"&gt;BEGIN&lt;/span&gt; &lt;span class="kw"&gt;TRANSACTION&lt;/span&gt;;&lt;/a&gt;
&lt;a class="sourceLine" id="cb4-2" title="2"&gt;&lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;INTO&lt;/span&gt; foos (&lt;span class="kw"&gt;id&lt;/span&gt;, &lt;span class="fu"&gt;value&lt;/span&gt;) &lt;span class="kw"&gt;VALUES&lt;/span&gt; (&lt;span class="dv"&gt;3&lt;/span&gt;, &lt;span class="st"&gt;'3'&lt;/span&gt;);&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;开启一个新的 Session，发起全表查询和新增 PK 查询操作：&lt;/p&gt;
&lt;div class="sourceCode" id="cb5"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb5-1" title="1"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="op"&gt;*&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; foos;&lt;/a&gt;
&lt;a class="sourceLine" id="cb5-2" title="2"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="op"&gt;*&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt; foos &lt;span class="kw"&gt;WHERE&lt;/span&gt; &lt;span class="kw"&gt;id&lt;/span&gt; &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;4&lt;/span&gt;;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不出所料，此时查询果然会被 Block 住。&lt;/p&gt;
&lt;h3 id="mvcc"&gt;MVCC&lt;/h3&gt;
&lt;p&gt;并发控制的手段有这些：封锁、时间戳、乐观并发控制、悲观并发控制。 SQL Server 在 2005 后，引入了 MVCC（多版本控制）。 如果最终数据是一致，会允许数据写入，否则其他事务会被阻止写入。 那么 MVCC 引入是否可以解决 Insert 数据的锁问题？ 同样，我做了以下测试：&lt;/p&gt;
&lt;p&gt;查询 SQL Server 使用启用 MVCC ALLOW_SNAPSHOT_ISOLATION：&lt;/p&gt;
&lt;div class="sourceCode" id="cb6"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb6-1" title="1"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; name, snapshot_isolation_state &lt;span class="kw"&gt;FROM&lt;/span&gt; sys.databases;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 T-SQL 启用测试表的 SNAPSHOT_ISOLATION：&lt;/p&gt;
&lt;div class="sourceCode" id="cb7"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb7-1" title="1"&gt;&lt;span class="kw"&gt;ALTER&lt;/span&gt; &lt;span class="kw"&gt;DATABASE&lt;/span&gt; HJ_Test3D &lt;span class="kw"&gt;SET&lt;/span&gt; ALLOW_SNAPSHOT_ISOLATION &lt;span class="kw"&gt;ON&lt;/span&gt;;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着重复上面里面的 Insert 试验，依然被 Block 住。 看来 MVCC 并不能解决 Insert 锁的问题。&lt;/p&gt;
&lt;h3 id="sql-server-2005-之后还需要使用-nolock-么"&gt;SQL Server 2005 之后还需要使用 nolock 么？&lt;/h3&gt;
&lt;p&gt;从官方文档和上文测试可以看到，在 Insert 时候，由于排它锁的存在， 会导致 &lt;code&gt;SELECT ALL&lt;/code&gt; 以及 &lt;code&gt;SELECT&lt;/code&gt; 新插入数据的相关信息被锁住。 在这两种情景下面是需要使用 &lt;code&gt;nolock&lt;/code&gt; 的。&lt;/p&gt;
&lt;p&gt;除此之外，有这么几类场景可以使用 &lt;code&gt;nolock&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 SSIS 查询器中进行数据分析，不需要精准数据&lt;/li&gt;
&lt;li&gt;历史数据进行查询，没有数据更新操作，也不会产生脏数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们需要思考一下，性能和数据一致性上的权衡上， 我们是否愿意放弃数据一致性而为了提高一丝丝性能？ 以及我们有多少场景，会频繁使用 &lt;code&gt;SELECT ALL&lt;/code&gt; 操作而没有查询条件？&lt;/p&gt;
&lt;del&gt;
微软官方在 2008 的特性列表里面，明确地指出 &lt;code&gt;nolock&lt;/code&gt; 特性未来会在某个版本被废除：
&lt;/del&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;Specifying NOLOCK or READUNCOMMITTED in the FROM clause of an UPDATE or DELETE statement.&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;del&gt;
而改为推荐：
&lt;/del&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;Remove the NOLOCK or READUNCOMMITTED table hints from the FROM clause.&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;事实上，我听过不少团队会禁止在生产环境使用不带 WHERE 条件的 SQL。 那在这种模式下，产生相关的问题的几率也就更小了。 如果有很高的并发需求，那需要考虑一下是否需要其他优化策略：比如使用主从分离、 Snapshot 导出、流式分析等技术。&lt;/p&gt;
&lt;h2 id="第三个问题mysql-的对应写法是什么_1"&gt;第三个问题：MySQL 的对应写法是什么？&lt;/h2&gt;
&lt;p&gt;终于轮到 MySQL 的讨论了。MySQL，InnoDB 天生支持 MVCC， 并且支持 &lt;code&gt;innodb_autoinc_lock_mode&lt;/code&gt; &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-auto-increment-handling.html"&gt;AUTO_INCREMENT Handling in InnoDB&lt;/a&gt;。 这样可以避免 Insert 操作锁住全局 Select 操作。 只有在同时 Insert 时候，才会被 Block 住。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;innodb_autoinc_lock_mode&lt;/code&gt; 支持几种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;innodb_autoinc_lock_mode = 0 (&amp;ldquo;traditional&amp;rdquo; lock mode)
&lt;ul&gt;
&lt;li&gt;涉及auto-increment列的插入语句加的表级AUTO-INC锁，只有插入执行结束后才会释放锁&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;innodb_autoinc_lock_mode = 1 (&amp;ldquo;consecutive&amp;rdquo; lock mode)
&lt;ul&gt;
&lt;li&gt;可以事先确定插入行数的语句，分配连续的确定的 auto-increment 值&lt;/li&gt;
&lt;li&gt;对于插入行数不确定的插入语句，仍加表锁&lt;/li&gt;
&lt;li&gt;这种模式下，事务回滚，auto-increment 值不会回滚，换句话说，自增列内容会不连续&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;innodb_autoinc_lock_mode = 2 (&amp;ldquo;interleaved&amp;rdquo; lock mode)
&lt;ul&gt;
&lt;li&gt;同一时刻多条 SQL 语句产生交错的 auto-increment 值&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里也做了相应的测试。首先检查数据库隔离级别和 &lt;code&gt;innodb_autoinc_lock_mode&lt;/code&gt; 模式：&lt;/p&gt;
&lt;div class="sourceCode" id="cb8"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb8-1" title="1"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; @@global.tx_isolation, @@session.tx_isolation, @@tx_isolation;&lt;/a&gt;
&lt;a class="sourceLine" id="cb8-2" title="2"&gt;SHOW variables &lt;span class="kw"&gt;LIKE&lt;/span&gt; &lt;span class="st"&gt;'innodb_autoinc_lock_mode'&lt;/span&gt;;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;检查后发现都是 Repeatable Read，&lt;code&gt;innodb_autoinc_lock_mode&lt;/code&gt; 模式是 1。 然后创建测试表：&lt;/p&gt;
&lt;div class="sourceCode" id="cb9"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb9-1" title="1"&gt;&lt;span class="kw"&gt;CREATE&lt;/span&gt; &lt;span class="kw"&gt;TABLE&lt;/span&gt; `foos` (&lt;/a&gt;
&lt;a class="sourceLine" id="cb9-2" title="2"&gt;  `id` &lt;span class="dt"&gt;int&lt;/span&gt;(&lt;span class="dv"&gt;11&lt;/span&gt;) unsigned &lt;span class="kw"&gt;NOT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/a&gt;
&lt;a class="sourceLine" id="cb9-3" title="3"&gt;  `name` &lt;span class="dt"&gt;varchar&lt;/span&gt;(&lt;span class="dv"&gt;20&lt;/span&gt;) &lt;span class="kw"&gt;DEFAULT&lt;/span&gt; &lt;span class="kw"&gt;NULL&lt;/span&gt;,&lt;/a&gt;
&lt;a class="sourceLine" id="cb9-4" title="4"&gt;  &lt;span class="kw"&gt;PRIMARY&lt;/span&gt; &lt;span class="kw"&gt;KEY&lt;/span&gt; (`id`)&lt;/a&gt;
&lt;a class="sourceLine" id="cb9-5" title="5"&gt;) ENGINE&lt;span class="op"&gt;=&lt;/span&gt;InnoDB AUTO_INCREMENT&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="dv"&gt;18&lt;/span&gt; &lt;span class="kw"&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span class="op"&gt;=&lt;/span&gt;utf8;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 Transaction 1 中 Insert 数据：&lt;/p&gt;
&lt;div class="sourceCode" id="cb10"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb10-1" title="1"&gt;&lt;span class="kw"&gt;START&lt;/span&gt; &lt;span class="kw"&gt;TRANSACTION&lt;/span&gt;;&lt;/a&gt;
&lt;a class="sourceLine" id="cb10-2" title="2"&gt;&lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;INTO&lt;/span&gt; foos (name) &lt;span class="kw"&gt;VALUES&lt;/span&gt; (&lt;span class="ot"&gt;"a"&lt;/span&gt;);&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 Transaction 2 中 Select 数据，可以正常查询：&lt;/p&gt;
&lt;div class="sourceCode" id="cb11"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb11-1" title="1"&gt;&lt;span class="kw"&gt;SELECT&lt;/span&gt; &lt;span class="op"&gt;*&lt;/span&gt; &lt;span class="kw"&gt;FROM&lt;/span&gt;   foos;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 Transaction 2 中 Insert 数据，会被 Block 住：&lt;/p&gt;
&lt;div class="sourceCode" id="cb12"&gt;&lt;pre class="sourceCode sql"&gt;&lt;code class="sourceCode sql"&gt;&lt;a class="sourceLine" id="cb12-1" title="1"&gt;&lt;span class="kw"&gt;START&lt;/span&gt; &lt;span class="kw"&gt;TRANSACTION&lt;/span&gt;;&lt;/a&gt;
&lt;a class="sourceLine" id="cb12-2" title="2"&gt;&lt;span class="kw"&gt;INSERT&lt;/span&gt; &lt;span class="kw"&gt;INTO&lt;/span&gt; foos (name) &lt;span class="kw"&gt;VALUES&lt;/span&gt; (&lt;span class="ot"&gt;"a"&lt;/span&gt;);&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个测试可以证明 MySQL 可以在 &lt;code&gt;innodb_autoinc_lock_mode&lt;/code&gt;=1 下， Insert 同时 Query 不会被 Block， 但是在另外一个事务中 Insert 会被 Block。 结论是，由于 &lt;code&gt;innodb_autoinc_lock_mode&lt;/code&gt; 的存在，MySQL 中可以不需要使用 &lt;code&gt;nolock&lt;/code&gt; 关键词进行查询。&lt;/p&gt;
&lt;h2 id="回顾一下"&gt;回顾一下&lt;/h2&gt;
&lt;p&gt;本文着重去回答这么几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么要用 &lt;code&gt;noloc&lt;/code&gt;？&lt;/li&gt;
&lt;li&gt;为什么要改变隔离级别？&lt;/li&gt;
&lt;li&gt;为什么 MySQL 不需要做类似的事情？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然只凑足了三个 「为什么」 的排比， 但是聪明的读者仍然会发现，我是使用了著名的 &lt;a href="https://zh.wikipedia.org/wiki/%E4%BA%94%E4%B8%AA%E4%B8%BA%E4%BB%80%E4%B9%88"&gt;五个为什么&lt;/a&gt; 方法思考问题。 通过使用这个方法，我们最后不但打破了老旧的最佳实践，还了解了本质原理， 并找到了新的最佳实践。&lt;/p&gt;
&lt;p&gt;希望读者朋友在遇到困难时候，多问几个为什么，多抱着打破砂锅问到底的精神， 这样才能让每个困难成为我们成长的垫脚石。&lt;/p&gt;
&lt;h2 id="相关资料"&gt;相关资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-cn/%E4%BA%8B%E5%8B%99%E9%9A%94%E9%9B%A2"&gt;事务隔离 - 维基百科，自由的百科全书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/t-sql/queries/hints-transact-sql-table"&gt;Table Hints (Transact-SQL) | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/snapshot-isolation-in-sql-server"&gt;Snapshot Isolation in SQL Server | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql"&gt;sys.databases (Transact-SQL) | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-multi-versioning.html"&gt;MySQL :: MySQL 5.7 Reference Manual :: 15.3 InnoDB Multi-Versioning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2017/09/sql-server-nolock/"&gt;https://blog.alswl.com/2017/09/sql-server-nolock/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 19 Sep 2017 16:43:45 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2017-09-19:2017/09/sql-server-nolock/</guid><category>SQL Server</category><category>MySQL</category></item><item><title>当我们在聊监控，我们在聊什么？</title><link>https://blog.alswl.com/2017/06/monitoring-introducing/</link><description>&lt;p&gt;最近在团队中给大家做了一个分享，泛泛地聊了一些有关「监控」的话题。 其实做分享对分享者的作用往往大于参与者。 这是一次将自己知识的梳理的过程，于是我将这次分享整理成这篇文章。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201706/stock-exchange.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201706/stock-exchange.png"/&gt;&lt;figcaption&gt;201706/stock-exchange.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;!-- more --&gt;
&lt;h2 id="目的"&gt;目的 🎯&lt;/h2&gt;
&lt;p&gt;我们先来聊聊，什么是「监控」，以及我们期望通过「监控」完成哪些目的？&lt;/p&gt;
&lt;p&gt;传统意义上的监控，是指：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过一些手段和工具，关注运行中的&lt;strong&gt;硬件、软件、用户体验&lt;/strong&gt;的关键数据，将其暴露出来。 当关键数据出现异常时候发出警告，进行人工或者自动的响应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们平时看到的最常见的监控系统，比如 Zabbix，提供了丰富的模板， 可以监控服务器的 Load / CPU Usage / Alive 这些常规指标。 并在出现问题时候，对其进行报警通知。 随后运维工程师们会上线进行应急操作，case by case 的处理故障。&lt;/p&gt;
&lt;p&gt;我将上面的使用目的归纳为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;故障发生时提供数据报警&lt;/li&gt;
&lt;li&gt;提供历史数据以供分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;故事到这里似乎可以结束了，可监控真的是这么简单的么？ 当然没，随着时代的进步，用户对服务提出了更为严苛的要求， 同时我们也有能力进一步控制平均故障修复时间 （&lt;a href="https://en.wikipedia.org/wiki/Mean_time_between_failures"&gt;MTBF&lt;/a&gt;）， 上述描述的做法已经不能满足我们了。&lt;/p&gt;
&lt;p&gt;现在让我们切换一下视角，从传统的 OPS 的视角切换到 SRE （&lt;a href="https://en.wikipedia.org/wiki/Site_reliability_engineering"&gt;Site Reliability Engineering&lt;/a&gt;）的视角。 当我们在关注网站整体的可用性时，我们会发现： 故障警报处理当然很重要，但是我们根本上想减少甚至避免 MTBF。 我们有两种手段： 一种是去除单点故障，让问题自然发生，但是不对线上造成影响； 另一种是在问题出现的早期就发现并进行及时修复。 前者是高可用范畴，后者就是我们今天关注的「监控」了。&lt;/p&gt;
&lt;p&gt;监控的目的是要&lt;strong&gt;将灾难消灭在襁褓里；在灾难即将出现或者发生问题时， 给大家展示直接的原因&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那为了达成这两个目标，我们需要回到问题的本质，重新思考两个问题：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;监控哪些对象？&lt;/li&gt;
&lt;li&gt;如何识别故障？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="对象"&gt;对象 🐘🐘&lt;/h2&gt;
&lt;p&gt;我们说的监控对象，一般指的都是某个资源， 资源即持有某种其他方需要的某些属性的载体，包括硬件、软件。 除了资源这种类型，还有一种常见的监控对象是「体验」，即终端用户的访问感受， 这块内容我们暂时略去。&lt;/p&gt;
&lt;p&gt;让我们来先看一下常见的资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬件
&lt;ul&gt;
&lt;li&gt;服务器&lt;/li&gt;
&lt;li&gt;网络设备&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;软件
&lt;ul&gt;
&lt;li&gt;Application&lt;/li&gt;
&lt;li&gt;Infrastructure&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个分类是粗粒度的描述，为了落地地描述监控对象对象的健康状况， 我们还要进一步细化。以「服务器」为例，我们可以将其监控的内容细化为以下监控项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;li&gt;Network interface&lt;/li&gt;
&lt;li&gt;Storage devices&lt;/li&gt;
&lt;li&gt;Controllers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何评估这些监控项的健康状况？我们使用 &lt;a href="https://en.wikipedia.org/wiki/Service_level_indicator"&gt;SLI（Service Level Indicator）&lt;/a&gt;。 比如&lt;strong&gt;可用性&lt;/strong&gt;就是一个最容易理解的 SLI。 这里我将资源归为两类，面向用户提供服务的资源和面向存储的资源， 以下是针对这两类资源的常见 SLI：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User-facing Service
&lt;ul&gt;
&lt;li&gt;Availability&lt;/li&gt;
&lt;li&gt;Latency&lt;/li&gt;
&lt;li&gt;Throughput&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Storage System
&lt;ul&gt;
&lt;li&gt;Latency&lt;/li&gt;
&lt;li&gt;Throughput&lt;/li&gt;
&lt;li&gt;durability&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 SLI 建立的数字关键指标，称之为 &lt;a href="https://en.wikipedia.org/wiki/Service_level_objective"&gt;Service Level Objective&lt;/a&gt;。 SLO 往往是一组数字范围，比如 CPU 负载的 SLO 可以设置为 0.0-6.0（针对 8 核 CPU）。 不同的资源、不同的业务场景，会有不一样的 SLO 设计。&lt;/p&gt;
&lt;p&gt;看到这里，我们已经聊了要监控哪些指标，那么接下来我们聊聊如何用量化的思想， 帮助指标更易于识别、分析和决策。&lt;/p&gt;
&lt;h2 id="量化的思想"&gt;量化的思想 🔢&lt;/h2&gt;
&lt;p&gt;刚开始担任线上救火队成员时候，当有个系统出现问题时候，我经常听到这样的描述： 网站挂了、页面打不开了，CPU 出问题了，内存爆了，线程池炸了等等。 这样的表述虽然没错，但带来的可用价值太少，信息熵太低。 这样的说辞多了，就给人产生一种不靠谱，不科学的感觉。&lt;/p&gt;
&lt;p&gt;那怎样才能成为科学的描述？ 古希腊哲学家在思考宇宙的时候，提出了一种心智能力， 从而打开了科学的窗子，这就是 Reasonable，中文名叫理智，这成为了自然科学的基石。 使用 Reasonable 探讨意味着探讨要深入问题的本质，不停留在表象，挖掘出真正有价值的内容。&lt;/p&gt;
&lt;p&gt;但是光有 Reasonable 还不够，B站粉丝建了一个微博，每天会检查 &lt;a href="http://weibo.com/yamanasion?refer_flag=1001030201_&amp;amp;is_hot=1"&gt;今天B站炸了吗&lt;/a&gt;， 他只能告诉我们炸没炸，不能给工程师带来实际的用处。 在科学的发展历史上，我们可以发现在亚里士多德的著作里没有任何数据公式。 他对现象只有描述，只是定性分析，通过描述性状来阐述定理。 这个定性的研究方式到了伽利略那里才出现了突破。 这里我们可以引入第二个关键词是 Quantifier，量化。 伽利略率先使用定量分析的方法，并将其运用到动力学和天文学，从而开创了近代科学。&lt;/p&gt;
&lt;p&gt;如果我们以定量的方式来描述网站挂没挂，就会变成：网站的响应耗时在 30s，基本无法使用。 描述线程池出问题，就会变成：active 线程数量是 200，已经到达 maxCount 数量，无法进行分配。 你看，通过这样的描述，我们一下子就能发现问题出在哪里。&lt;/p&gt;
&lt;h2 id="use"&gt;USE 💡&lt;/h2&gt;
&lt;p&gt;现在我们已经了解了「监控哪些对象？」，以及尝试用「量化」这个法宝来「识别故障」。 那有没有一些最佳实践帮助大家高效的识别故障呢？这里我推荐 Brend Gregg 大神的 &lt;a href="http://www.brendangregg.com/usemethod.html"&gt;USE 方法&lt;/a&gt;。 Brend Gregg 是 Netflix 的首席 SRE，著有 &lt;a href="http://www.brendangregg.com/sysperfbook.html"&gt;Systems Performance Book&lt;/a&gt;， 目前已经出版中文版 &lt;a href="https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B0140I5WPK"&gt;性能之巅:洞悉系统、企业与云计算&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;USE 分别是三个单词的首字母缩写：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Utilization：使用率，CPU running percent，硬盘的 IO&lt;/li&gt;
&lt;li&gt;Saturation：饱和度，一般偏存储型资源，内存使用，硬盘使用&lt;/li&gt;
&lt;li&gt;Error：错误数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们可以为每个资源找到各自的 USE 度量指标，具体的 Check List 清单可以参考 &lt;a href="http://www.brendangregg.com/USEmethod/use-rosetta.html"&gt;USE Method: Rosetta Stone of Performance Checklists&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里举个例子，前段时间在设计 MySQL HA 方案时候，同时关注了 MySQL 的监控方案， 那么针对 MySQL，我们要做哪些监控呢？下面是使用 USE 方法设计出来的 SLI：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business
&lt;ul&gt;
&lt;li&gt;Questions：语句计总，Throughput&lt;/li&gt;
&lt;li&gt;Slow_queries：慢查询计总，Error&lt;/li&gt;
&lt;li&gt;Com_select：查询语句计总，Throughput&lt;/li&gt;
&lt;li&gt;Com_insert：插入语句计总，Throughput&lt;/li&gt;
&lt;li&gt;Com_update：更新语句计总，Throughput&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Threads &amp;amp; Connections
&lt;ul&gt;
&lt;li&gt;Threads_connected：当前连接数，Utilization&lt;/li&gt;
&lt;li&gt;Threads_running：当前使用中连接数，Utilization&lt;/li&gt;
&lt;li&gt;Aborted_connects：尝试连接失败数，Error&lt;/li&gt;
&lt;li&gt;Connection_errors_max_connections：由于连接数超标从而失败的连接数，Error&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Buffer
&lt;ul&gt;
&lt;li&gt;Innodb_buffer_pool_pages_total：内存使用页数，Utilization&lt;/li&gt;
&lt;li&gt;Innodb_buffer_pool_read_requests：读请求数计总，Utilization&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="完"&gt;完 🏁&lt;/h2&gt;
&lt;p&gt;如果你对我上面描述的还意犹未尽，建议你可以看 &lt;a href="https://book.douban.com/subject/19992841/"&gt;Effective Monitoring and Alerting&lt;/a&gt;。 虽然本书没有中文版，但是关于监控、报警的原理解析很到位，值得一看。 另外还有一本 &lt;a href="https://book.douban.com/subject/26875239/"&gt;SRE: Google运维解密&lt;/a&gt;， 里面有不少篇幅在讲「SLA」，也是和监控、报警息息相关的。&lt;/p&gt;
&lt;p&gt;这次讲了一些概念性的内容，期望对大家有帮助，下一次我再分享一篇文章，聊聊 Metrics。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2017/06/monitoring-introducing/"&gt;https://blog.alswl.com/2017/06/monitoring-introducing/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Thu, 08 Jun 2017 15:40:41 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2017-06-08:2017/06/monitoring-introducing/</guid><category>Monitoring</category></item><item><title>XSS 攻击的处理</title><link>https://blog.alswl.com/2017/05/xss/</link><description>&lt;p&gt;这是一年前写的项目笔记，一直在我的待办事项里等待做总结，今天偶然翻到，就整理成文章发出来。 谨以此文怀念 &lt;a href="http://wooyun.org/"&gt;乌云&lt;/a&gt;。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201705/wooyun.jpg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201705/wooyun.jpg"/&gt;&lt;figcaption&gt;201705/wooyun.jpg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;hr/&gt;
&lt;h2 id="事情缘由"&gt;事情缘由&lt;/h2&gt;
&lt;p&gt;春节前的某一天，收到一封来自乌云（国内知名白帽子团队）的邮件， 告知我厂网站上出现一例 XSS 漏洞。 因为以前对 XSS 输入做过防御，还以为是某个前端 DOM 上的 XSS 漏洞， 后来仔细一看，不妙，是个影响甚大的存储型 XSS 漏洞。&lt;/p&gt;
&lt;p&gt;这里简单科普一下 XSS &lt;a href="https://zh.wikipedia.org/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC"&gt;跨网站脚本 -维基百科，自由的百科全书&lt;/a&gt; 中介绍到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跨网站脚本（Cross-site scripting，通常简称为XSS或跨站脚本或跨站脚本攻击）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。 它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;XSS 攻击可以分成两种，反射性 XSS / 存储型 XSS。前者是需要用户触发的 XSS， 针对当前用户的攻击行为。而后者存储型 XSS 则更为严重，一旦攻击代码被保存， 所有访问被攻击的页面，都会触发用户被攻击行为。&lt;/p&gt;
&lt;p&gt;这次爆出的问题就是最严重的存储型 XSS，意味着每个访问到有问题页面的用户都会中招。 时间紧迫，问题必须被解决。&lt;/p&gt;
&lt;h2 id="xss-实现手段"&gt;XSS 实现手段&lt;/h2&gt;
&lt;p&gt;在解决问题之前，需要对这个问题有必要的基础认识。 我们先看看 XSS 攻击是如何工作的，以及攻击者的目的是什么。&lt;/p&gt;
&lt;p&gt;XSS 的原理是通过构造特殊的数据，并通过传递参数或者保存表单数据的方式， 让这些构建的数据破坏 DOM 结构，从而让自己预先构造数据中的 JS 脚本被执行。&lt;/p&gt;
&lt;p&gt;检查存储型 XSS 漏洞的方法，可以在对应的 input field 里放入一些构造的数据，如果保存后可以被执行，就说明存在 XSS 漏洞。&lt;/p&gt;
&lt;p&gt;常见的检测方法（来自&amp;nbsp;&lt;a href="https://zh.wikipedia.org/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC#.E6.A3.80.E6.B5.8B.E6.96.B9.E6.B3.95"&gt;跨网站脚本 - 维基百科，自由的百科全书&lt;/a&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;
='&amp;gt;&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;
"&amp;gt;&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;alert (vulnerable)&amp;lt;/script&amp;gt;
%3Cscript%3Ealert('XSS')%3C/script%3E
&amp;lt;script&amp;gt;alert('XSS')&amp;lt;/script&amp;gt;
&amp;lt;img src="javascript:alert('XSS')"&amp;gt;
&amp;lt;img src="http://xxx.com/yyy.png" onerror="alert('XSS')"&amp;gt;
（这个仅限IE有效）&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;攻击者通过 XSS 可以窃取用户的相关信息，如果用户是管理员，那么影响更大。 通过这些身份信息，攻击者可以进一步篡改信息或者进行诈骗，后果不堪设想。 PS：一个有效粗暴的方式，是将对公、对内系统的域名分离，对内部系统进行物理级别隔离。&lt;/p&gt;
&lt;h2 id="我厂历史上的处理方案"&gt;我厂历史上的处理方案&lt;/h2&gt;
&lt;p&gt;XSS 问题又来已久，咱厂子开了这么久，历史上如何防御的呢？ 答案是用了两个策略：第一个是使用&amp;nbsp;&lt;a href="https://www.owasp.org/index.php/Main_Page"&gt;OWASP&lt;/a&gt; 提供的库进行内容过滤，第二个是在存储数据时，存储了转义后的数据。&lt;/p&gt;
&lt;p&gt;在技术上处理 XSS，有两种态度可以选择：第一种是前置过滤，即将用户所有数据都进行转义， 在输出时候在前端（模板渲染）层面直接输出。 第二种是用户输入的数据不经过转义就直接存储起来，前端在使用时候保证对数据进行转义。&lt;/p&gt;
&lt;p&gt;我厂历史上使用的方案的前者，优点是在于前端不需要在每个地方转义， 避免某个地方忘记了转义，从而导致漏洞。缺点则是在输出内容到非 Web 客户端时候，比如 APP，需要进行额外的数据处理过程， 否则 HTMLEncode 的内容，在 APP 上面无法正确输出。&lt;/p&gt;
&lt;p&gt;这个处理方案是稳妥的，那么为什么最近又暴露出问题了？ 排查之后发现，原来最近有若干个服务迁移到了一个新系统， 而新系统在安全上面没有全局处理，所以爆出了漏洞。&lt;/p&gt;
&lt;h2 id="本次处理方案"&gt;本次处理方案&lt;/h2&gt;
&lt;p&gt;知道了原因，那么可以快速解决问题了。在这次处理过程中，我们讨论了在当前移动平台增长迅速，Web 平台增长缓慢的大势下，能否直接存储用户原始数据？ 而且由于规范制定不严格，目前系统内有些地方存储转码后数据，有些地方存储转码前数据。 导致在一些特殊的字符（颜文字）处理上不一致，从而导致在处理 &lt;code&gt;br&lt;/code&gt; / &lt;code&gt;&amp;lt;&lt;/code&gt; 这类特殊字符时，表现不同。&lt;/p&gt;
&lt;p&gt;由于 DB 中有部分数据转义处理，部分数据原文存储，所以先处理输出后敏感信息，在模板层面启用全局 encode。 将有危险的数据转移为在 HTML 文本。&lt;/p&gt;
&lt;p&gt;PS：现代 Web 框架的模板渲染引擎，一般会默认开启 HTMLEncode，而 Freemarker 居然在 2.3.24-rc01 才支持，现在都没有发布，唉&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;处理方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启全局 HTML 输出 Encode，有一个&amp;nbsp;&lt;a href="http://watchitlater.com/blog/2011/10/default-html-escape-using-freemarker/"&gt;Default HTML-escape using Freemarker&lt;/a&gt;&amp;nbsp;方案，可以默认开启 Html Encode，在这个处理方案中，需要注意有些地方真的需要输出原始 html，需要&amp;nbsp;&lt;code&gt;noescape&lt;/code&gt;&amp;nbsp;特殊处理&lt;/li&gt;
&lt;li&gt;检查所有前端操作，禁止字符串拼接，使用框架支持的模板进行渲染，拖小菊的福，新系统在这块工作完成度一直比较好&lt;/li&gt;
&lt;li&gt;将&amp;nbsp;&lt;a href="https://www.owasp.org/index.php/Main_Page"&gt;OWASP&lt;/a&gt;&amp;nbsp;方案强制开启&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="其他-tips"&gt;其他 Tips&lt;/h2&gt;
&lt;p&gt;OWASP 有一个很长的 &lt;a href="https://www.owasp.org/index.php/SS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet"&gt;列表&lt;/a&gt;，教导如何避免 XSS，里面提到了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为何以及如何进行「积极防御」，对立面是仅仅输出时候转义内容本身&lt;/li&gt;
&lt;li&gt;几条对抗 XSS 的规则
&lt;ul&gt;
&lt;li&gt;尽量不在特定地方输出不可信变量：script / comment / attribute / tag / style， 因为逃脱 HTMl 规则的字符串太多了。&lt;/li&gt;
&lt;li&gt;将不可信变量输出到 div / body / attribute / javascript tag / style 之前，对&amp;nbsp;&lt;code&gt;&amp;amp; &amp;lt; &amp;gt; " ' /&lt;/code&gt;&amp;nbsp;进行转义&lt;/li&gt;
&lt;li&gt;将不可信变量输出 URL 参数之前，进行 URLEncode&lt;/li&gt;
&lt;li&gt;使用合适的 HTML 过滤库进行过滤&lt;/li&gt;
&lt;li&gt;预防 DOM-based XSS，见&amp;nbsp;&lt;a href="https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet"&gt;DOM based XSS Prevention Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;开启 HTTPOnly cookie，让浏览器接触不到 cookie&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;p&gt;最后送上一个 XSS 攻击工具&amp;nbsp;&lt;a class="uri" href="http://webxss.net/"&gt;http://webxss.net/&lt;/a&gt;，知己知彼，百战不殆。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2017/05/xss/"&gt;https://blog.alswl.com/2017/05/xss/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Wed, 31 May 2017 22:04:00 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2017-05-31:2017/05/xss/</guid><category>security</category></item><item><title>👁️ 预测未来？</title><link>https://blog.alswl.com/2017/01/prophecy/</link><description>&lt;figure&gt;
&lt;img alt="201702/clock.jpg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201702/clock.jpg"/&gt;&lt;figcaption&gt;201702/clock.jpg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="拉普拉斯之妖"&gt;拉普拉斯之妖&lt;/h2&gt;
&lt;p&gt;未来是可以被预测的么？&lt;/p&gt;
&lt;p&gt;专家在预测股票趋势变化，天气预报员可以预测未来一周甚至更长时间的天气。 如果给他们更多的信息和参数，是否可以将未来预测的更准确？ 如果精确的粒度可以达到基本粒子级别，同时给一个计算力超群的计算器，能否精确的推衍未来变化？&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;这些想法在我刚接触经典力学时浮现，学习了牛顿三定律之后，异常激动。 感觉人类可以凭借技术的进步，逐步对未来精确预测。彼时可以解决人类即将遇到的任何问题了，化问题于无形。&lt;/p&gt;
&lt;p&gt;这想法其实在 200 年前就出现了。法国伟大的数学家拉普拉斯（Laplace）在他的著作「概率论」里面， 提出了这样的观点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们可以把宇宙现在的状态视为其过去的果以及未来的因。假若一位智者会知道在某一时刻所有促使自然运动的力和所有组构自然的物体的位置，假若他也能够对这些数据进行分析，则在宇宙里，从最大的物体到最小的粒子，它们的运动都包含在一条简单公式里。对于这位智者来说，没有任何事物会是含糊的，并且未来只会像过去般出现在他眼前。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;「根据当前已知即可预测未来」，这种决定论，就是拉普拉斯之妖。&lt;/p&gt;
&lt;h2 id="打破"&gt;打破&lt;/h2&gt;
&lt;p&gt;除了拉普拉斯的决定论，这个世纪末还发生了另外一件事情。 开尔文男爵在 19 世纪的最后一天，发表了「物理大厦已经落成，所剩只是一些装饰性工作」的言论。 然而，在随后的岁月里，经典物理大厦却开始被量子力学逐步击破，轰然倒地。&lt;/p&gt;
&lt;p&gt;在决定论这个方面，根据海森堡的不确定性理论，粒子的位置与动量不可同时被确定。 这个结论说明目前技术下面，无法精准测量粒子的状态。 既然无法准确测量粒子的状态，就失去了演算未来可能性的基础，更无法预测未来了。&lt;/p&gt;
&lt;p&gt;那既然是无法预测，是否表示，预测未来这件事情是无稽之谈，未来是不成规律的？&lt;/p&gt;
&lt;h2 id="混沌被理解错误的蝴蝶效应"&gt;混沌：被理解错误的「蝴蝶效应」&lt;/h2&gt;
&lt;p&gt;针对未来的预测，动力系统中，有相当多的研究和思考，其中比较注明的一项是：蝴蝶效应。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201702/chaos-butterfly.png" src="https://4ocf5n.dijingchao.com/upload_dropbox/201702/chaos-butterfly_400.png"/&gt;&lt;figcaption&gt;201702/chaos-butterfly.png&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;关于「蝴蝶效应」，不用过多解释。命名的来源据说是发现者 Edward Lorenz 觉得图形像是蝴蝶。 而有另一种另一说法是，Edward 的一个比喻「巴西蝴蝶煽动，引起德克萨斯的龙卷风」。&lt;/p&gt;
&lt;p&gt;事实上这种说法是不精准的。Edward 在预测天气模型中，发现起始数据的微小差异， 会导致数日之后计算结果的巨大差异。 从点在于在预测模型上，忽略了一个蝴蝶煽动引起的力量，即起始条件的设定，会导致结果的巨大差异。 而不是表名龙卷风是蝴蝶煽动产生的。&lt;/p&gt;
&lt;p&gt;如果蝴蝶煽动能够产生龙卷风。那么一个普通人的呼吸，也可以造成同样的效果。😂&lt;/p&gt;
&lt;h2 id="分形和混沌"&gt;分形和混沌&lt;/h2&gt;
&lt;p&gt;和混沌相关的，还有一个重要概念「分形」：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个粗糙或零碎的几何形状，可以分成数个部分，且每一部分都（至少近似地）是整体缩小后的形状&amp;rdquo;[2]，即具有自相似的性质。分形的核心是自相似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随机从这种自相似的图形中提取样本，样本集表现出不可预测的特性。&lt;/p&gt;
&lt;p&gt;混沌的定义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;非线性系统在一定参数条件下展现分岔（bifurcation）、周期运动与非周期运动相互纠缠，以至于通向某种非周期有序运动。这种运动是不可预测，呈现出失序的状态。三体问题，即是一例混沌的场景。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为什么混沌和分形是具有相关性的呢？这里有一个重要概念 IFS。 IFS（Iterated Function System）是迭代函数系统，即在数学上被认为一个完全向量空间上收缩映射的有限集。 分形的图案，部分可以抽象出 IFS 公式。&lt;/p&gt;
&lt;p&gt;这个公式的奇妙之处是在于，在公式渐进推算过程之中，初始看到的结果是混沌无序的，而在逐步运算之后，可以看出分形的特征。&lt;/p&gt;
&lt;p&gt;下图是根据一个 IFS 公式，逐步构造出一个分形图片的过程：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201702/chaosgame.gif" src="https://4ocf5n.dijingchao.com/upload_dropbox/201702/chaosgame.gif"/&gt;&lt;figcaption&gt;201702/chaosgame.gif&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;图片来自 Wikipedia &lt;a href="https://en.wikipedia.org/wiki/Iterated_function_system"&gt;https://en.wikipedia.org/wiki/Iterated_function_system&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这种由初期混沌，逐渐表现为分形的情况，被学者总结为：「混沌在（生成）时间上是分形的；而分形的在空间（展示）上是混沌的。」 混沌中可以找到有序，在非线性中找到理性，混沌中可以演化出非规则，也可以演化出在规则中混沌。&lt;/p&gt;
&lt;h2 id="哲学上的象征"&gt;哲学上的象征&lt;/h2&gt;
&lt;p&gt;感谢你迷迷糊糊的读到这里，混沌不仅仅在数学和物理上面，吸引着一代代人的探索。 在哲学生活指导方面，也有重大的意义。早在古人说「分久必合，合久必分」， 就是一种稳定线性的表现，具有预测性的表现。 而「一生二、二生三，三生万物」则体现了古人对分形的理解。 经典的「马蹄毁了一场战争」故事，讲的是混沌理论。&lt;/p&gt;
&lt;p&gt;这些对未来预测能力的渴望，表现了对生活的掌控欲望，对未来可行性的探索， 在低谷期可以带来希望，大跃进时期可以带来警醒。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;对于我个人而言，虽然失去了能够预测未来的理论基础而略感遗憾。 但是反过来想想，如果真的发明了一台机器，能够精确预言到未来， 那么在发明实现的当天，就能够推衍出未来所有出现的科学理论、文学、艺术创作， 那给后人创造了一个多么再无新事物的未来，这该是一个多么无趣的世界啊。&lt;/p&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2017/01/prophecy/"&gt;https://blog.alswl.com/2017/01/prophecy/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 31 Jan 2017 11:12:43 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2017-01-31:2017/01/prophecy/</guid><category>Math</category></item><item><title>👷如何做年前大扫除</title><link>https://blog.alswl.com/2017/01/spring-cleaning/</link><description>&lt;p&gt;今年过年特别早，离春节只剩下二十多天了。 为期 7 天的春节里，工程师们不上班，那万一线上业务出现了故障怎么办？ 大公司的朋友们会安排专门的人进行值班（此处心疼一下那些需要大年三十还要值班保证高峰的工程师们）， 而作为创业团队人少，难做到在线值守，就需要对线上进行一些整理盘点，找出潜在问题，为春节长假做一些准备。&lt;/p&gt;
&lt;p&gt;我们称之为年前大扫除。&lt;/p&gt;
&lt;p&gt;大扫除需要做些什么呢，且听我一一道来。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201701/saber.jpeg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201701/saber.jpeg"/&gt;&lt;figcaption&gt;201701/saber.jpeg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;PS: 冷知识，大扫除英文是 spring cleaning，所以春节大扫除是 Spring Festival spring cleaning。&lt;/p&gt;
&lt;h2 id="大扫除的内容"&gt;大扫除的内容&lt;/h2&gt;
&lt;p&gt;大扫除其实是一个查漏补缺+囤积粮草的事情。&lt;/p&gt;
&lt;p&gt;查漏补缺，即找出潜在的问题。这些问题平时可能不会特意去查看， 借助大扫除这个运动，恰好进行盘点。 计算机的世界里，有一个方法论非常好使，在极多场景可以见到其身影：分层。 TCP 的七层模型，架构设计的 N 层 模型，都是对分层思想的使用。 查漏补缺也不例外，我们可以按照业务访问流程，将需要排查的问题拆分为：业务、应用、中间件、网络、物理、存储 etc。&lt;/p&gt;
&lt;p&gt;通过分层，不仅仅完成了自上而下地遍历整个技术栈，也同时将不同模块的内容交给不同的责任方， 确保任务的分割。&lt;/p&gt;
&lt;p&gt;分完模块，还要告知大家如何具体查找问题。 这里我介绍一个通用的方法：USE&lt;a class="footnote-ref" href="#fn1" id="fnref1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For every resource, check Utilization, Saturation, and Errors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;USE 方法是从 Brend Gregg 那里学来的。 在技术设施的领域里，Resource 即是指各种类型的资源，比如 CPU、磁盘、网络、内存， Utilization 指的是使用率，可以简单分为百分制和非百分制。 Saturation 是指饱和率，支持 queue 的资源，就会有这个指标。 Error 即错误，可以从错误统计和日志得知。&lt;a class="footnote-ref" href="#fn2" id="fnref2"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;业务领域里面，USE 也有相对应的含义。以审核系统举例， 对应的 USE 可以理解为「审核应用实例跑的 CPU 占用如何，任务队列是否塞满，业务日志是否有异常」。&lt;/p&gt;
&lt;p&gt;除了 USE 里面提到的指标，还有几个指标特别重要： TPS 、Latency 和 Capacity。 这几个指标对性能敏感的尤为重要。 检查 USE 的同时，我们必须关注一下这三个指标， 确保 TPS / Latency 是否满足我们预期的 SLA。 哦？压根没有制定 SLA，不要慌，和历史数据对比，先制定一个粗糙的 SLA。 哦？连历史数据都没有？那只能找你 Leader 让他考量一下了。&lt;/p&gt;
&lt;p&gt;负责每个子系统的同学，记得检查时候将这些收集到的数据列下来。 在 Metric 做的还不够完善时候，这些数据也是很宝贵的。&lt;/p&gt;
&lt;p&gt;在我看来，检查 USE / TPS / Latency ，&lt;strong&gt;&lt;strong&gt;最大的作用是将抽象的可用性指标描述为几个易于理解的数值进行量化。 一旦能够量化，就可以对比、观测、监控，并且 Review 起来也异常轻松&lt;/strong&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id="应对方案"&gt;应对方案&lt;/h2&gt;
&lt;p&gt;检查出问题之后，就要考虑应对了。时间急任务多，我们的应对方案是是囤积粮草 / 写救命笔记。&lt;/p&gt;
&lt;p&gt;囤积粮草比较好理解，&lt;strong&gt;&lt;strong&gt;基于已有的容量预估，为容易出问题的系统提供一份冗余&lt;/strong&gt;&lt;/strong&gt;。 有些团队平时做基础设施就比较，做 Scale 就是小轻松。 那平时 Scalable 做的不好的朋友，就只能将应用实例多开一些，以避免临时出现的流量波动。&lt;/p&gt;
&lt;p&gt;无状态的服务好搞，有状态的 DB 就很难在短时间内做 Scale。 检查这些服务的容量，如果重点资源临近阈值，比如 DB 的硬盘资源，缓存的内存容量。 核心服务的余量在检查中真的发现问题的话，那也只能短期内做扩容了。&lt;/p&gt;
&lt;p&gt;对于小团队来说，春节长假的特殊性在于响应会变慢甚至是联系不上。 一旦线上有异常，可能找不到合适的人员来进行处理。 所以第二条写救命笔记则更为重要。 「Google SRE」里面有个小段子，一个绝对不能被按的按钮， 这个按钮会清空内存数据，在飞行过程中被宇航员按了。幸亏美女工程师（下图）写了相关的救命手册， 专门写了针对这种情况的操作，救了这些宇航员的命。&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201701/sre.jpeg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201701/sre.jpeg"/&gt;&lt;figcaption&gt;201701/sre.jpeg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;图片来自 「Google SRE」&lt;/p&gt;
&lt;p&gt;从这个故事里面可以看到，一个紧急操作手册是多么重要。 &lt;strong&gt;&lt;strong&gt;所以在大扫除期间，我们还要补一补平时的文档，将一些常见问题 / 常规操作记录下来。&lt;/strong&gt;&lt;/strong&gt; 步骤需要细致到能让让每个远程值班的同学做到 step by step 操作。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;啰嗦了这么多，相信大家对大扫除要做些什么已经有所印象了，祝大家过个好年，流量涨涨涨，还能平平安安的。&lt;/p&gt;
&lt;section class="footnotes"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;[The USE Method] &lt;a href="http://www.brendangregg.com/usemethod.html"&gt;http://www.brendangregg.com/usemethod.html&lt;/a&gt;&lt;a class="footnote-back" href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn2"&gt;&lt;p&gt;[USE Method: Linux Performance Checklist] &lt;a href="http://www.brendangregg.com/USEmethod/use-linux.html"&gt;http://www.brendangregg.com/USEmethod/use-linux.html&lt;/a&gt;&lt;a class="footnote-back" href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2017/01/spring-cleaning/"&gt;https://blog.alswl.com/2017/01/spring-cleaning/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Tue, 03 Jan 2017 23:20:50 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2017-01-03:2017/01/spring-cleaning/</guid><category>Infrastructure</category><category>DevOps</category></item><item><title>🔑 也谈 HTTPS - 如何内测</title><link>https://blog.alswl.com/2016/12/https-2/</link><description>&lt;p&gt;&lt;img alt="201612/mouse.jpeg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201612/mouse.jpeg"/&gt; (图片来自 &lt;a href="https://www.duitang.com/blog/?id=48013745"&gt;茶杯中的可爱小白鼠 壁纸 - 2560x1920－堆糖，美好生活研究所&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;在上篇文章 &lt;a href="https://blog.alswl.com/2016/11/https-1/"&gt;🔒 也谈 HTTPS - HTTPDNS + HTTPS&lt;/a&gt; 中， 我们谈了如何基于 HTTPDNS 来部署无坚不摧的 HTTPS 通信环境， 这次我们讨论另外一个比较头疼的问题：部署。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;小站点部署 HTTPS 相对成本低，改改前端代码，就可以上线了。 但作为业务有一定复杂度的大网站，就没办法这么暴力上线了。&lt;/p&gt;
&lt;p&gt;前端在基础库中调整 Scheme 之后，仍然可能存在很多边边角角没有覆盖到。 比如 JS 里面写死了 HTTP，那在 HTTPS 下请求 HTTP XHR 的话， 浏览器会将请求拦截掉。 一旦出现这种故障，用户就无法正常使用业务，小白用户往往也不懂得自己将 &lt;code&gt;https://&lt;/code&gt; 换成 &lt;code&gt;http://&lt;/code&gt; 使用。&lt;/p&gt;
&lt;p&gt;解决的思路是足够的内测，找一群人帮我在 HTTPS 环境下使用足够长时间。 让他们当小白鼠，提前发现问题并解决。 于是，我把目光转向了身边的一大大群小白鼠，整个办公室的同事~😄&lt;/p&gt;
&lt;p&gt;没错，&lt;strong&gt;&lt;strong&gt;我要强制所有同事使用 HTTPS 的公司网站&lt;/strong&gt;&lt;/strong&gt;，从而靠他们帮我发现问题。&lt;/p&gt;
&lt;p&gt;靠发邮件、QQ 广播呼吁大家使用 HTTPS 站点的方法，估计是不行的。 没有利益驱动，推动力是不足的，我必须想点强制的手段让他们使用 HTTPS。&lt;/p&gt;
&lt;p&gt;有三种方法来达到这个效果：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;业务系统内入口判断用户身份，是雇员的话，切换到 HTTPS&lt;/li&gt;
&lt;li&gt;Nginx 入口系统判断 IP 来源，办公室 IP 则切换到 HTTPS&lt;/li&gt;
&lt;li&gt;改造办公室网络，访问站点时候，自动切换到 HTTPS&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了避免对线上业务系统、基础设施造成影响，我采用了第三条方案。&lt;/p&gt;
&lt;p&gt;说干就干，直接对公司网络出口设备是 ROS&lt;a href="http://wiki.mikrotik.com/wiki/Main_Page"&gt;via&lt;/a&gt; 动起刀子。&lt;/p&gt;
&lt;p&gt;实现的原理如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A：办公室网络的 🐁 们请求站点 http://www.duitang.com&lt;/li&gt;
&lt;li&gt;B：操作 RouterOS 的防火墙，将 dst 为 www.duitang.com IP 的 TCP 请求都 dst-nat 到新的一台 Nginx 服务器 proxy.duitang.com&lt;/li&gt;
&lt;li&gt;C：这台 proxy.duitang.com 做过特别定制，将所有针对 *.duitang.com 请做一次 302 请求，将 http://www.duitang.com 请求都转发到 https://www.duitang.com&lt;/li&gt;
&lt;li&gt;D：Client 收到 302 请求，重新请求 https://www.duitang.com&lt;/li&gt;
&lt;li&gt;E：同 B&lt;/li&gt;
&lt;li&gt;F：proxy.duitang.com 将请求转发到真正的 www.duitang.com 服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS：这里要小心的是，需要配置 proxy.duitang.com 的 &lt;code&gt;resolver&lt;/code&gt; 避免 Nginx 内部请求。&lt;/p&gt;
&lt;p&gt;流程图：&lt;/p&gt;
&lt;figure&gt;
&lt;img alt="201612/https_ros_process.jpg" src="https://4ocf5n.dijingchao.com/upload_dropbox/201612/https_ros_process.jpg"/&gt;&lt;figcaption&gt;201612/https_ros_process.jpg&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这样操作之后，在办公室网络下，所有访问公司网站的 HTTP 流量都会跳转到 HTTPS。&lt;/p&gt;
&lt;p&gt;PS：我原始方案想使用 ROS 的 L7 防火墙 直接抓 HTTP 包，match HTTP 头数据， 再修改返回的 TCP 包。 但测试下来发现 ROS L7 Firewall 不支持写 TCP 数据。 所以我最后只能使用中间跳转的方案。&lt;/p&gt;
&lt;p&gt;如果不是使用 ROS 的朋友也不用担心，原理和流程已经讲清楚了， 无非是使用 Cisco / Huawei 网络设备的防火墙命令实现需要的功能。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;上篇文章发完之后，好几个朋友问我 IP 证书供应商的事情。我就简单说一下我了解的情况。&lt;/p&gt;
&lt;p&gt;国内 SSL 证书供应商们会给他们兜售的产品起各种各样花里胡哨的名字， 什么超真、超强、超安、超快，国外有些企业也会搞什么 Pro / Super / Premium / Essential， 其实 SSL 证书的区分，笼统来说就三种类型：DV / OV / EV， Domain Validation / Orgnization Validation / Extented Validation。 他们区别除了字面意思，就是所有权审核流程一个比一个麻烦。&lt;/p&gt;
&lt;p&gt;想基于 IP 直接搞所有权审核，要看对应供应商的证书是否支持。 去年年底我做了一个调查，支持 IP 证书的厂家如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rapid SSL 不支持 ip&lt;/li&gt;
&lt;li&gt;wosign OV 级别支持
&lt;ul&gt;
&lt;li&gt;OV 需要验证 需要验证申请单位的营业执照、等其他证明文件&lt;/li&gt;
&lt;li&gt;浏览器支持情况
&lt;ul&gt;
&lt;li&gt;Firefox 32 &lt;a href="https://mozillacaprogram.secure.force.com/CA/IncludedCACertificateReport"&gt;https://mozillacaprogram.secure.force.com/CA/IncludedCACertificateReport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;交叉认证了 Startcom 的证书，可以支持老版本&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GlobalSign OV 支持
&lt;ul&gt;
&lt;li&gt;$349 * 6 * 8 = 16752&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.globalsign.com/customer/portal/articles/1216536-securing-a-public-ip-address---ssl-certificates"&gt;https://support.globalsign.com/customer/portal/articles/1216536-securing-a-public-ip-address&amp;mdash;ssl-certificates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;需要认证 RIPE ip， &lt;a href="https://apps.db.ripe.net/search/query.html?searchtext=221.228.82.178#resultsAnchor"&gt;https://apps.db.ripe.net/search/query.html?searchtext=221.228.82.178#resultsAnchor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Geotrust 明确表示不支持 https://www.geocerts.com/faq#Q47&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在 Wosign 爆了丑闻，于是支持 IP SSL 又少了一家。 只剩下 GlobalSign 了，但是 GlobalSign OV 又贵审核又麻烦， 不知道看到此文的大神们有没有更好的推荐。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://serverfault.com/questions/193775/ssl-certificate-for-a-public-ip-address"&gt;domain name - SSL certificate for a public IP address? - Server Fault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.mikrotik.com/wiki/Manual:IP/Firewall/Filter"&gt;ROS Filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.mikrotik.com/wiki/Manual:IP/Firewall/NAT"&gt;ROS NAT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.mikrotik.com/wiki/Manual:IP/Firewall/L7"&gt;ROS Firewall L7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.mikrotik.com/viewtopic.php?f=13&amp;amp;t=62152"&gt;How to block and redirect website - MikroTik RouterOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.mikrotik.com/viewtopic.php?t=39837"&gt;Mikrotik IP REDIRECT using firewall - MikroTik RouterOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://forum.mikrotik.com/viewtopic.php?t=88049"&gt;Redirect all traffic from a spesific ip number to a web page - MikroTik RouterOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;div class="panel"&gt;
&lt;div class="panel-body"&gt;
   &lt;small&gt;原文链接: &lt;a href="https://blog.alswl.com/2016/12/https-2/"&gt;https://blog.alswl.com/2016/12/https-2/&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;3a1ff193cee606bd1e2ea554a16353ee&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;欢迎关注我的微信公众号：&lt;a href="http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzIyNTIwMTU3MQ==#wechat_webview_type=1&amp;wechat_redirect"&gt;窥豹&lt;/a&gt;&lt;/small&gt;&lt;br&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/201605/qrcode_for_gh_17e2f9c2caa4_258.jpg"/&gt;&lt;/small&gt;
   &lt;small&gt;&lt;img src="https://4ocf5n.dijingchao.com/upload_dropbox/meta/wechat-pay-s-crop.png"/&gt;&lt;/small&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">alswl</dc:creator><pubDate>Thu, 08 Dec 2016 20:16:26 +0800</pubDate><guid isPermaLink="false">tag:blog.alswl.com,2016-12-08:2016/12/https-2/</guid><category>HTTPS</category><category>HTTPDNS</category><category>MikroTik</category></item></channel></rss>