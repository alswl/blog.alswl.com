<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>d3.js on Log4D</title>
    <link>https://blog.alswl.com/tags/d3.js/</link>
    <description>Recent content in d3.js on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Jun 2012 07:03:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/d3.js/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flotr2 - 我最喜欢的 Javascript 图形库[译文]</title>
      <link>https://blog.alswl.com/2012/06/flotr2/</link>
      <pubDate>Tue, 19 Jun 2012 07:03:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/06/flotr2/</guid>
      <description>原文地址：Flotr2 - my favorite javascript graph library
译者：alswl
我研究了很久，得到的终极数据可视化方案是 javascript + html ，这是唯一像样又好用的。
Gnuplot 虽然看上去不错，但是不太漂亮。 一些基于 Python 的图形化工具也有同样的问题。 Mathematica 在我看来则太正式了，所以我不怎么用它。
基于 javascript 的图形化工具其中一个巨大优势是易于共享。 通过设置 Github Page、分享链接等方法，我们都可以很方便的获取最新图表数据， 甚至可以进行交互。
那些基于 javascript 的图形化工具 有很多 javascript 图形化库，从极简到复杂绚丽的风格，都极为丰富。
最流行的可能就是 d3.js 和 Raphael 了。 他们用起来相当麻烦，但却能实现绚丽到超越你想象的可视化效果。
Raphael 还一个 web 矢量库，外观同样很漂亮。
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} Raphael 中的分析图表
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} Raphael 中的气泡图
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} Raphael 中的钟表时间图
D3.js 的愿景是帮助人们轻松的完成数据可视化，可惜事与愿违， 它弄得太复杂了。
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} Hacker News 文章标题的可视化数据
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} 用 d3.</description>
    </item>
    
  </channel>
</rss>
