<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Twitter on Log4D</title>
    <link>https://blog.alswl.com/tags/twitter/</link>
    <description>Recent content in Twitter on Log4D</description>
    <generator>Hugo -- 0.125.3</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 15 May 2010 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/twitter/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>腾讯微博邀请3枚</title>
      <link>https://blog.alswl.com/2010/05/three-invitations-of-tencent-micro-blog/</link>
      <pubDate>Sat, 15 May 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/05/three-invitations-of-tencent-micro-blog/</guid>
      <description>很久之前通过laiwei_linjuly 获取腾讯微博的资格，之后一直没怎么用。 &amp;ldquo;alswl&amp;quot;这个用户名也没能抢到，倒霉孩子要我6个字母的用户名，只能alswlx顶上（恶感啊，被逼着换掉常用用户名） 腾讯的蒲公英种子终于到了，拿到3枚。 http://t.qq.com/invite/b68e3791318bf1c49023 http://t.qq.com/invite/ef775573f088d1a22853 http://t.qq.com/invite/359f89ba78883f45d241 需要的同学们拿去吧，我的腾讯微博是 @alswlx 有兴趣可以Follow me</description>
      <content:encoded><![CDATA[<p>很久之前通过<a href="http://baiduer.net/">laiwei_linjuly</a> 获取腾讯微博的资格，之后一直没怎么用。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201005/t_qq_logo.jpg" alt="image"  />


</p>
<p>&ldquo;alswl&quot;这个用户名也没能抢到，倒霉孩子要我6个字母的用户名，只能alswlx顶上（恶感啊，被逼着换掉常用用户名）</p>
<p>腾讯的蒲公英种子终于到了，拿到3枚。</p>
<p><a href="http://t.qq.com/invite/b68e3791318bf1c49023">http://t.qq.com/invite/b68e3791318bf1c49023</a></p>
<p><a href="http://t.qq.com/invite/ef775573f088d1a22853">http://t.qq.com/invite/ef775573f088d1a22853</a></p>
<p><a href="http://t.qq.com/invite/359f89ba78883f45d241">http://t.qq.com/invite/359f89ba78883f45d241</a></p>
<p>需要的同学们拿去吧，我的腾讯微博是 <a href="http://t.qq.com/alswlx">@alswlx</a> 有兴趣可以Follow me</p>
]]></content:encoded>
    </item>
    <item>
      <title>关于Twitter的idea</title>
      <link>https://blog.alswl.com/2009/11/the-idea-on-twitter/</link>
      <pubDate>Wed, 11 Nov 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/11/the-idea-on-twitter/</guid>
      <description>起因-同步是个麻烦事 这几天写了几篇博文，想自动同步博文url到各类SNS以及微博，但是发现一下子同步是很麻烦的事情。就我手头维护的话，需要更新Twitter、人人、新浪微博，如 果能同步一个内容就发布到所有网站，这该多好啊。 对了，关于同步，帮xDash打一个小广告：他建了一个站点，同步控，还是挺不错的。 现状-已有先行者 将一个状态发散式同步到其他SNS网站肯定不是我想出来的，已经有很多网站在运营着了。</description>
      <content:encoded><![CDATA[<h2 id="起因-同步是个麻烦事">起因-同步是个麻烦事</h2>
<p>这几天写了几篇博文，想自动同步博文url到各类SNS以及微博，但是发现一下子同步是很麻烦的事情。就我手头维护的话，需要更新Twitter、人人、新浪微博，如
果能同步一个内容就发布到所有网站，这该多好啊。</p>
<p>对了，关于同步，帮<a href="http://www.fanbing.net/">xDash</a>打一个小广告：他建了一个站点，<a href="http://www.syncoo.com/">同步控</a>，还是挺不错的。</p>
<h2 id="现状-已有先行者">现状-已有先行者</h2>
<p>将一个状态发散式同步到其他SNS网站肯定不是我想出来的，已经有很多网站在运营着了。比如…</p>
<p><a href="http://www.digusync.com/">嘀神</a>&ndash;自动把你的状态同步到人人、开心等所有社交网站！</p>
<p><a href="http://hellotxt.com/">HelloTxt</a>: 同时更新你的Twitter、饭否和Plurk…</p>
<p>嘀神的问题在于他是基于<a href="http://digu.com">嘀咕</a>的，在微博这一块，digu并不是最强，虽然推出了<strong>OpenCloud</strong>这个概念，但是似乎
开放API的程度成为诟病，可以看出，所谓<strong>火兔</strong>、<strong>打嘀</strong>、<strong>嘀神</strong>的一堆广播产品都是自家出品。业内曾经指出嘀咕的开放并不是真正的开放（当然，这
是目前中国IT普遍存在的，没有核心技术来保留用户群，只能用这种不开放API的手段）。嘀神能更新的也不多，<strong>Twitter</strong>就不在其中。</p>
<p>HelloTxt被墙了，我没有办法去仔细研究，依稀记得当时HelloTxt居然支持<strong>饭否</strong>，让我很惊讶他的同步群……</p>
<p>虽有先行者，势弱也~</p>
<h2 id="我的想法-更多交流">我的想法-更多交流</h2>
<p>光能扩散式更新还不够，我们要把所有的微博互动起来，省的一句话从Twitter同步到新浪围脖，围脖的人回复了却不知道，人家岂不是对着镜子讲话么（引用[Tim]
(<a href="http://xirang.us/">http://xirang.us/</a>)语）。所以我们必须能够跨平台回复、回推，甚至引入新功能（扩散回推）。</p>
<p>现在这个互动已经不仅仅是扩散发布，而应该是真正意义上的互相沟通，这在技术上只要有API的支持就不难实现。（在此鄙视那些伪开放API的SNS）</p>
<p>还有一个重要功能就是消息发布，可以通过RSS协议从<strong>这个站点</strong>获取所有微博的信息，而不用关注每个微博。</p>
<p>这个站点的适用人群是拥有很多微博，朋友分布在各个微博，都不肯统一。那么只能自己统一到这个平台进行处理，而不要奔波于各个网站。</p>
<p>不知道这样的站点现在有没有人实现，我觉得这是很有金的想法，毕竟这么一个平台将会架空Twitter以及其他微博，使自己成为一个<strong>唯一</strong>通行路口。应该可以形
成自己的运营模式。</p>
<h2 id="死穴-基本只能玩玩了">死穴-基本只能玩玩了</h2>
<p>想法总是好的，实施起来就比较难了。</p>
<p>在国外，人家盛行Twitter，用不到这个多博客更新，只有在国内才百花齐放（百花齐败？）。而在国内，这种Web2.0自由说话的地方肯定有风险，容易遭来「服务
器休整」。</p>
<p>怎么规避风险？嗯```用GAE开发，然后做成每个人单独的个人系统，就可以简单规避，只不过这样以来，就无法形成商业化的运营了。等我工作定下来，真想花时间在GA
E弄一个，然后作为毕业设计，哈哈。</p>
<p>如果可以，Google在Wave加上这个功能，那么就犀利了，应该可以主导微博市场了。</p>
<p>ps：想想而已，小的目光短浅，见识少，各位嘴下留情啊```</p>
]]></content:encoded>
    </item>
    <item>
      <title>Google App Engine搭建Twitter API Proxy教程</title>
      <link>https://blog.alswl.com/2009/10/google-app-engine-to-build-twitter-api-proxy-tutorial/</link>
      <pubDate>Wed, 14 Oct 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/10/google-app-engine-to-build-twitter-api-proxy-tutorial/</guid>
      <description>来源：Google App Engine搭建Twitter API Proxy教程 alswl:今天我本来想使用GAppProxy搭建自己的[服务器](http://j asontiproxy.appspot.com/fetch)，不过失败了，似乎客户端有些问题，也可能是我配置的问题。之后就正好看到月光大大的这篇文章，欣喜之 极，搭建了自己的Twitter birdnest服务器，并转载之。 本文将介绍如何通过Google</description>
      <content:encoded><![CDATA[<p>来源：<a href="http://www.williamlong.info/archives/1956.html">Google App Engine搭建Twitter API Proxy教程</a></p>
<p>alswl:今天我本来想使用<a href="http://gappproxy.googlecode.com/">GAppProxy</a>搭建自己的[服务器](http://j
asontiproxy.appspot.com/fetch)，不过失败了，似乎客户端有些问题，也可能是我配置的问题。之后就正好看到月光大大的这篇文章，欣喜之
极，搭建了<a href="http://jasontitwitter.appspot.com/api/">自己的Twitter birdnest服务器</a>，并转载之。</p>
<p>本文将介绍如何通过Google App Engine搭建基于Python
2.5的BirdNest环境，建好的BirdNest可以在TwitterFox或twhirl中使用。</p>
<h3 id="环境准备google-app-engine">环境准备：Google App Engine</h3>
<p>先要<a href="http://www.williamlong.info/archives/1357.html">注册Google App Engine</a>，注册地址
<a href="http://appengine.google.com/">http://appengine.google.com/</a> ，然后建立一个applicatio
n，目前第一次使用需要验证用户手机，输入手机号码就收验证码即可，之后，就可以用yourid.appspot.com来访问你的app应用。</p>
<p>此外，还需要下载安装Google APP Engine的开发环境，注意Python的版本，需要是2.5系列的，不能使用2.6或更高的版本，否则运行会出错。</p>
<p>Google App Engine SDK 下载地址 [http://code.google.com/intl/zh-CN/appengine/downloads.html](<a href="http://code.google.com/intl/zh-">http://code.google.com/intl/zh-</a>
CN/appengine/downloads.html)</p>
<p>Python 2.5.4 下载地址 [http://www.python.org/download/releases/2.5.4/](http://www.
python.org/download/releases/2.5.4/)</p>
<p>关于Google App Engine的详细使用说明请参见[这个地址](<a href="http://www.williamlong.info/archives/1880">http://www.williamlong.info/archives/1880</a>.
html)，这里我就不再累赘。</p>
<h3 id="环境准备birdnest">环境准备：BirdNest</h3>
<p>下载birdnest要注意是下载[分支branches/gae](<a href="http://birdnest.googlecode.com/svn/branches/g">http://birdnest.googlecode.com/svn/branches/g</a>
ae)，别下载主干trunk，否则更新到GAE上也不能用，会报错。可以使用一个SVN工具下载。例如[TortoiseSVN](<a href="http://www.will">http://www.will</a>
iamlong.info/archives/1878.html)等。将其放到一个目录中，进入目录，编辑app.yaml文件，将第一行的application
里的参数修改为自己的应用名。（alswl:我使用Eclipse获取了SVN的内容）</p>
<h3 id="发布应用到gae">发布应用到GAE</h3>
<p>准备好了上面的一切后，就可以发布这个应用到自己的Appspot上了，执行 appcfg.py update
目录名，中间会要求输入Gmail的用户名和密码，之后就可以使用了。你创建的API地址应该是yourid.appspot.com/api/ 。</p>
<h3 id="使用birdnest">使用BirdNest</h3>
<p>在twhirl里的使用方法是，打开账号管理Accounts manager，选择laconi.ca账户类型，输入：[你的twitter帐号名]@yourid
.appspot.com，密码为Twitter密码，即可使用。（alswl:我使用的是twhirl，需要安装Adobe AIR环境）</p>
<p>在twitterfox里的使用方法是，打开 C:Documents and SettingsAdministratorApplication
DataMozillaFirefoxProfiles 随机信息
.defaultextensionstwitternotifier@naan.netcomponents目录，编辑
nsTwitterFox.js文件，找不到的话直接在Documents and
Settings中搜索nsTwitterFox.js文件，编辑该文件的38行，将其修改为 var TWITTER_API_URL =
<a href="http://yourid.appspot.com/api/">http://yourid.appspot.com/api/</a> 即可。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
