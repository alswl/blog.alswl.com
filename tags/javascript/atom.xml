<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>javascript on Log4D</title>
    <link>https://blog.alswl.com/tags/javascript/</link>
    <description>Recent content in javascript on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2011 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/javascript/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jEmotion</title>
      <link>https://blog.alswl.com/2011/11/jemotion/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/11/jemotion/</guid>
      <description>重要通知：Log4D的域名由 http://dddspace.com 迁移到 http://log4d.com 。 订阅地址现在改为 http://log4d.com/feed 和 http://feeds.feedburner.com/dddspace 。（FeedBurner的地址未发生变化）
白天工作时候需要一个功能，我搜了一下Google，没有找到合适的，就花了半天时间写了一个jQuery插件jEmotion。
jEmotion的主要功能是用来给输入框加入转义之后的表情代码，然后在页面显示时候可以重新将表情代码转回表情图片。
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} jEmotion的代码托管在GitHub上，地址是 https://github.com/alswl/jEmotion 。
demo地址是 [http://lab.log4d.com/javascript/jEmotion/demo.html](http://lab.log4d. com/javascript/jEmotion/demo.html) 。
这是我写的第一个jQuery插件，写完还蛮兴奋的，哈哈。</description>
    </item>
    
    <item>
      <title>AzaAjaxChat笔记-实现</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</link>
      <pubDate>Sun, 22 Aug 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</guid>
      <description>唔，继续整理笔记，这些是在代码编写中遇到的问题和解决办法的总结，不是Turtial，问题有针对性，内容枯燥，路人可以直接忽略~
一、Comet服务器推技术 Comet推技术，一句话概括，就是形成一个不断开的连接，使得服务器能主动向客户端发送信息。这种技术在交互性强的Web产品中应用的非常多，比如GMail。Co met的实现方式有两种：基于 AJAX 的长轮询（long-polling）方式和基于 Iframe 及 htmlfile 的流（streaming）方式，具体两种实现方式可以参考Comet：基于 HTTP 长连接的&amp;quot;服务器推&amp;quot;技术。
我计划把这个技术引入，成为一个亮点，第二种Comet实现方式过于复杂（GMail使用的就是这种），我就尝试第一种。我在测试环境测试了基于 AJAX 的长轮询 （long-polling）方式。这种方式说白了就是在Ajax获取返回数据时候，在状态吗为4（数据传输完成）情况随后进行下次查询。进行循环的查询。
这种Long-polling的轮询方式有点伪Comet。相对于常见的定时查询，不同点是将&amp;quot;查询-&amp;gt;返回-&amp;gt;再查询&amp;quot;中间的一段断开时间进行重连接。最后因为技术 实现和开发时间，我决定放弃了Comet的实现。
PS：一个系统应该不仅仅是技术的堆积，也应该考虑其他的一些因素，是否有确实需求，开发效率问题。虽然我做了一些前期准备，最终还是没有加入Comet，蛮可惜的。
相关链接： 一步一步打造WebIM（1） - .net - dotnet - JavaEye论坛 （.net使用IHttpAsyncHandler的实现） Comet&amp;ndash;&amp;ldquo;服务器推&amp;quot;技术 - 搜狐UED（搜狐UED团队的一个小介绍） 二、用户状态的处理 开发时候遇到一个逻辑问题，具体描述如下：&amp;ldquo;一个用户登录长时间不活动（比如直接关闭浏览器），系统需要判定此用户为离线。&amp;ldquo;按照一般设计思路，这个动作应该由后台每 过一段时间自动（比如说5分钟）触发一次，如果用Java或.net实现，会考虑设计一个后台运行的进程进行管理。而现在用的PHP，我查了一下，似乎没有找到相应的 解决办法。
我尝试在系统中设定一个页面每隔几分钟触发一个动作，放置在index.php页面中，但是感觉这个设计有点鸡肋。
这个问题困惑我很久，最后参考了AJAX Chat的源码，它的思路是在一个新用户上线时候，进行检测所 有用户距离上次其活动的时间来判定每个用户的离线状态。这个也不是最优想法（万一长时间没有用户登录怎么办？），但是比上面那个定时页面要好多了。
如果有PHP达人看到这个，望不惜赐教。
三、RTMP RTPM是一个流媒体传输的协议，我在AzaAjaxChat中用它进行视频聊天画面和音频传输。这块内容可以洋洋洒洒的写一大篇日志，我在这里只是简单罗列一下我用 到的相关内容。
Real Time Messaging Protocol（实时消息传送协议协议)概述，实时消息传送协议是Adobe Systems公司为Flash播放器和服务器之间音频、视频和数据传输开发的私有协议。它有三种变种： 1)工作在TCP之上的明文协议，使用端口1935； 2)RTMPT封装在HTTP请求之中，可穿越防火墙； 3)RTMPS类似RTMPT，但使用的是HTTPS连接；
RTMP协议是被Flash用于对象，视频,音频的传输.该协议建立在TCP协议或者轮询 HTTP协议之上。
RTMP协议就像一个用来装数据包的容器，这些数据可以是AMF格式的数据，也可以是FLV中的视/音频数据。一个单一的连接可以通过不同的通道传输多路网络流。 这些通道中的包都是按照固定大小的包传输的。
我使用FMS作为RTPM容器，Adobe FMS（Flash Media Server）是一款能够提供出色的Flash Video流媒体播放功能的服务器软件。
FMS提供一个强大Script可定制脚本的服务器流媒体引擎，通过这个引擎，允许创建和交付面向互联网任何用户群体的交互媒体应用及服务。FMS还是Adobe公司 跨媒体解决方案中的一部分，针对诸如数据库连接访问、文件系统操作、服务访问等要求，可以同Adobe Flash Player与Adobe AIR一起来实现。
四、基于Flex的流媒体传输 4.1 官方Sample-Stratus AzaAjaxChat中最技术含量的地方在于语音视频聊天。Adobe官网在Flex子类中提供了一个Demo名叫[Stratus](http://labs.a dobe.com/technologies/stratus/samples/)，正是一个聊天系统。从教程上看，Adobe公司目前开放的Stratus是同时支 持视频和语音P2P的，同时，未来的FMS也可能会支持P2P。</description>
    </item>
    
    <item>
      <title>IE XML 缓存问题</title>
      <link>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</link>
      <pubDate>Wed, 02 Jun 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</guid>
      <description>明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。
PS:之前已经有过3篇相关毕设的文章：
[CakePHP的全局变量
](http://log4d.com/2010/05/cakephp-global-variables)
[FMS的80端口占用
](http://log4d.com/2010/05/fms-80-port-used)
[SWFObject 一款JavaScript的Flash检测与插入模块
](http://log4d.com/2010/05/swfobject)
&amp;mdash;- 正文开始 &amp;mdash;-
问题背景 系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即时生成的。当用FireFox或者Chro me请求时候都能获得正确的数据，而IE则常常出现无法获取实时的XML数据。
而如果在地址栏中填入 http://localhost/AzaAjaxChat/src/Chat/getXml?messageId=41 这个原始的XML文件地址，就可以获取正确的XML文件。并且在下次IE 的 HTTPRequest请求时候就正常了。看来问题出在IE自身的缓存上面。
解决方法 1.使用URL参数随机事件 在AJAX请求的页面后加个随机函数,我们可以使用随机时间函数，在javascript发送的URL后加上t=Math.random()。
当然，不是直接把t=Math.random()拷贝到URL后面,应该像这样:
url = url + &amp;quot;&amp;amp; amp;&amp;quot; + &amp;quot;t=&amp;quot; + Math.random(); 2.修改Header缓存时间 在XMLHttpRequest发送请求之前加上 XMLHttpRequest.setRequestHeader(&amp;ldquo;If-Modified- Since&amp;rdquo;,&amp;ldquo;0&amp;rdquo;)。一般情况下,这里的 XMLHttpRequest 不会直接使用。
你应该可以找到这样的代码
XXXXX.send(YYYYYY);
那么,就把它变成
XXXXX.setRequestHeader(&amp;ldquo;If-Modified-Since&amp;rdquo;,&amp;ldquo;0&amp;rdquo;);
XXXXX.send(YYYYYY);
a Sample 我选择的是第一种方法，我觉得这种更为直观。我的具体代码如下（使用jQuery）：
jQuery.get(&amp;quot;http://localhost/AzaAjaxChat/src/Chat/getXml&amp;quot;, { messageId: aacGlobal.currentMessageId, version: Math.random() }, getRemoteDataCallBack); </description>
    </item>
    
    <item>
      <title>SWFObject 一款JavaScript的Flash检测与插入模块</title>
      <link>https://blog.alswl.com/2010/05/swfobject/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/05/swfobject/</guid>
      <description>今天开始AzaAjaxChat的视频聊天模块，拖FMS的福，实现起来很轻松，不过后来在JavaScript和Flash的交互上遇到了问题。
Flash在各个浏览器中的实现始终是个麻烦的事情，什么Object Embed~，似乎没有什么标准的格式，一般都要做一些浏览器Hack，我对这些深痛恶绝，在 泡了一下午前端相关的论坛后，偶然发现一款JavaScript交互的神器。
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} SWFObject: 基于Javascript的Flash媒体版本检测与嵌入模块 SWFObject是一个用于在HTML中方面插入Adobe Flash媒体资源（*.swf文件）的独立、敏捷的JavaScript模块。该模块中的JavaS cript脚本能够自动检测PC、Mac机器上各种主流浏览器对Flash插件的支持情况。它使得插入Flash媒体资源尽量简捷、安全。而且它是非常符合搜索引擎优 化的原则的。此外，它能够避免您的 HTML、XHTML中出现object、embed等非标准标签，从而符合更加标准。
（即：通过text/html应答页面， 而非application/xhtml+xml）
官方在Google Project Host中，下载的代码包中有一个简单的Example，也包含了SWFObject的源码，感兴趣的同学可以研究一下。
相关链接：
[swfobject - Project Hosting on Google Code
](http://code.google.com/p/swfobject)
[SWFObject中文的帮助文档
](http://www.awflasher.com/flash/articles/swfobj.htm)
如果你也像我这样为Flash发愁，不妨试试这个小巧的js~</description>
    </item>
    
    <item>
      <title>开发跨浏览器JavaScript时要注意的问题</title>
      <link>https://blog.alswl.com/2010/01/development-of-cross-browser-javascript-should-pay-attention-to-the-problem/</link>
      <pubDate>Sat, 30 Jan 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/01/development-of-cross-browser-javascript-should-pay-attention-to-the-problem/</guid>
      <description>最近在做系统的B/S部分，用DWR做Ajax处理，期间遇到一些浏览器兼容的问题，table.insertRow()和row.insertCell() 在IE下没有问题，但在FireFox下无效。同事说不用考虑FireFox的兼容，客户使用的环境就是IE。我偏执的认为就算不在所有浏览器下通过，至少在我的Fi reFox下需要正常运行。
晚上花了一点时间稍微研究了一下跨浏览器开发JavaScript时要注意的问题，的确好多学问。我对JavaScript的认识还太浅，得花时间做一些功课了。
顺便推荐一本JavaScript书《JavaScript语言精粹 》，是大名鼎鼎的&amp;quot;O&amp;rsquo;Reilly&amp;quot;系列，我只看了试读的第一章节，斗胆推荐
在随网之舞的《JavaScript语言精粹》 @ 随网之舞有更详细的介绍。
{# https://medium.com/@ardianta/writing-using-typora-on-hugo-based-blog-a1be8500774a #} 传送门：
购买《JavaScript语言精粹 》via China-Pub
评论 《JavaScript语言精粹》via 豆瓣
样章阅读：第一章. 精华 第十章. 优美的特性
以下文章没有URL出处，作者 liqun，来源：www.comecode.com（连接已失效）
××××××××××想回家的分割线××××××××××
1、向表中追加行 定义table时使用tbody元素，以保证包括IE在内的所有浏览器可用
例：定义如下一个空表
&amp;amp;n bsp_place_holder; 向这个表中增加行的正确做法是，把行增加到表体，而不是增加到表。
Var cell = document.createElement(&amp;ldquo;td&amp;rdquo;).appendChild(document.createTextNode(&amp;ldquo;foo&amp;rdquo;));
Var row = document.createElement(&amp;ldquo;tr&amp;rdquo;).appendChild(cell);
Document.getElementById(&amp;ldquo;myTableBody&amp;rdquo;).appendChild(row);
*IE中需要先创建行，再创建列，再创建内容
2、设置元素的样式 Var spanElement = document.getElementById(&amp;ldquo;mySpan&amp;rdquo;);
//下面写法保证出IE外，所有浏览器可用
spanElement.setAttribute(&amp;ldquo;style&amp;rdquo;,&amp;ldquo;font-weight:bold;color:red;&amp;rdquo;);
//下面的写法保证IE可用
spanElement.style.cssText=&amp;ldquo;font-weight:bold;color:red;&amp;rdquo;;
3、设置元素的class属性 Var element = document.getElementById(&amp;ldquo;myElement&amp;rdquo;);
//下面的写法保证除IE外，所有浏览器可用
Element.setAttribute(&amp;ldquo;class&amp;rdquo;,&amp;ldquo;styleClass&amp;rdquo;);
//下面写法保证IE可用
Element.setAttribute(&amp;ldquo;className&amp;rdquo;,&amp;ldquo;styleClass&amp;rdquo;);
4、创建输入元素 Var button = document.createElement(&amp;ldquo;input&amp;rdquo;);
//单行文本框、复选框、单选框、单选钮、按钮需要此属性区别
Button.setAttribute(&amp;ldquo;type&amp;rdquo;,&amp;ldquo;button&amp;rdquo;);
Document.getElementById(&amp;ldquo;formElement&amp;rdquo;).appendChild(button);
5、向输入元素增加事件处理程序 Var formElement=document.</description>
    </item>
    
    <item>
      <title>jQuery图片圈人功能在ASP.NET下的改进</title>
      <link>https://blog.alswl.com/2009/09/jquery-to-achieve-the-school-network-image-circle-of-people-function-results/</link>
      <pubDate>Wed, 02 Sep 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/09/jquery-to-achieve-the-school-network-image-circle-of-people-function-results/</guid>
      <description>项目中需要一个类似于校内圈人效果的js控件，找了一下基本没有直接能用的，只有一些未完成，我只能自己动手了。 基本框架参照这篇文章《JS实现校内网&amp;quot;图片圈人 &amp;ldquo;功能效果》（强烈推荐这篇 文章，这段代码写的很帅气） 我把代码摘录如下，不过还是建议大家去看原文的一些分析。
原始Code: 运行环境： 1.jQuery支持 2.DragResize类（czy1121作者写的一个js类，更多信息可以参照《Javascript Resize和Drag类,基于jQuery》 ）
样式： #enclose-wrapper { position: relative; z-index: 0; border: 4px solid #DDD; background-color: #FFF; } #form-add-tag { margin-left: 8px; position: absolute; padding: 5px 3px; border: 1px solid #005EAC; float: left; display: inline; background-color: #FFF; } #select-area-box { position: absolute; border: 5px solid #D8DFEA; float: left; } #select-area { position: relative; padding: 0; border: 2px solid #005EAC; z-index: 15; cursor: move; background: url(spacer.</description>
    </item>
    
    <item>
      <title>关于禁用Javascript的讨论</title>
      <link>https://blog.alswl.com/2009/05/discussion-on-javascript-disabled/</link>
      <pubDate>Sat, 23 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/discussion-on-javascript-disabled/</guid>
      <description>做用户验证时候，在为客户端和服务器端各自的验证发愁，这时候我想到一个问题，现在这么多网站依赖javascript来表现页面，那么如果禁用了会怎么样呢。
Google了一下，找到一篇06年的帖子。当客户端把Javascript禁用后，[猛击这里打开](http://bbs.blueidea.com/archi ver/tid-2694115.html)
最让我吃惊的是这篇神奇的帖子从06年被讨论到09年，从挖坟N次，好狠&amp;hellip;
摘录部分语句如下：
所以我会做一个纯HTML的首页，告诉人家不要屏蔽javascript，不要屏蔽ActiveX，不要&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;:( :(
看看Gmail怎么做的。我觉得那就是答案（的一种）。
禁止JS上在功能的使用上致少不该受到影响，但是国内的许多网站不去考虑这个。　只是盲目的跟风，　什么AJAX、什么体验，很多都是建立在JS上的，一旦使用的浏览 器不支持JS，就什么都没了。google做得不错，可是国内一些所谓的门户网站，像sinasohu163yahoo或多或少都存在一定的问题，这些站的首页或许没 什么问题，但看看其它的页面就知道。　既然浏览器提供了禁用JS、禁用COOKIE的功能，那我们就不得不考虑禁用后对我们的影响。
CJJ 老是走极端。
什么网站能满足１００％的用户需要？
GOOGLE搜索，只能说第一页的排序满足８０％的人的需要。
所以，做一个检查，低于１０％的人没有打开JS，就不用专为他们搞一个版本了。
什么用户都想抓住，往往什么用户都抓不住。
当你的消耗和价值不相等的时候，选择放弃，是最好的解决方案。
很多事，不是人们不想做。而是在商业环境下，不允许这样去做。
当然，追求完美是我们的目标，如果能在条件许可的情况下，可以做这样的工作。
但现在网站，往往都没有这样的许可。
我支持蓝色。
我认为是这样的：
一个运营网站为主导思想的人（比如蓝色）不应该赞同这个问题，关闭JS 和 Cookies的人实在太少，缺了这个东西，说明他们不在乎用户体验，他在网上寸步难行。
而一个以技术为主导思想的人（比如技术总监），就必须考虑一下这个问题。
而最关键的问题是： [color=Blue]他是你的目标客户吗？[/color]
从技术角度讲，解决这个问题不难。现在争论的焦点是：是否有必要去做。
答案很简单： 如果你的人力成本允许，并且你在乎这部分变态的人，就去改善把～
Google这么做就是考虑到这个因素。总体来说这个问题不是一个问题，而是一个普遍问题：
如果用户关闭JS怎么办？
如果用户不支持Cookies怎么办？
如果用户没有安装flashpleyer怎么办？
如果用户使用的是 IE5怎么办？
如果用户是 800*600分辨率怎么办？
如果用户是 FF或者OP或者其他浏览器怎么办？
如果用户视力障碍怎么办？
如果用户没有耳机或音箱怎么办？
哦&amp;hellip;&amp;hellip;你去死把～～天哪～
呵呵，现在有多少网站用的em呢，我想大多是px吧，那些中老年人只有戴老花镜上网咯。。。。
说用户体验性，我想还是要针对人群来说，大家都在这里谈论什么js，css。可是你的最终用户会谈论什么呢？处于这个领域，懂这些技术，你会去说，会去讨论，可用户不 会关心这些吧，一些普通的网民谁会自己主动去把js禁用掉，他们就不知道这些。也许他们关注的只是我要找的信息好不好找，你这页面我看舒服不舒服，你这里速度是不是很 快&amp;hellip;&amp;hellip;
如果像某些同志那样的要考虑没有css，js，flash等等该怎么去做网页，那可以假想一下做出来的东西会是什么样子的，我说不好，也没尝试过。
现在的这技术，那技术是为了什么而出现的呢，某位同学比喻的很好：某天砍掉自己的脚，会问我怎么不会走路了呢&amp;hellip;&amp;hellip;.
话又说回来，做web开发本来就是个敏捷性要求很高的开发，我们把过多的精力放在那些边边角角的问题上，会得不偿失。
针对你的用户去处理问题&amp;hellip;.
=====注意时间！！！====
ujam 发表于 2009-2-18 17:38
js很重要，现在js正在越来越受重视中，开源库jquery,prototype这些都是随着时代的变化而产生的，打个比方js版星际争霸，都比软件版的小,占用空 间小，跨平台，所以我觉得以后的软件会网页化。
网页化还可以减少成本</description>
    </item>
    
  </channel>
</rss>
