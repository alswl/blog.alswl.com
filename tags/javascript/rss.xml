<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Javascript on Log4D</title>
    <link>https://blog.alswl.com/tags/javascript/</link>
    <description>Recent content in Javascript on Log4D</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 04 Nov 2011 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/javascript/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jEmotion</title>
      <link>https://blog.alswl.com/2011/11/jemotion/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/11/jemotion/</guid>
      <description>&lt;p&gt;重要通知：Log4D的域名由 &lt;a href=&#34;http://dddspace.com&#34;&gt;http://dddspace.com&lt;/a&gt; 迁移到
&lt;a href=&#34;http://log4d.com&#34;&gt;http://log4d.com&lt;/a&gt; 。 订阅地址现在改为
&lt;a href=&#34;http://log4d.com/feed&#34;&gt;http://log4d.com/feed&lt;/a&gt; 和
&lt;a href=&#34;http://feeds.feedburner.com/dddspace&#34;&gt;http://feeds.feedburner.com/dddspace&lt;/a&gt;
。（FeedBurner的地址未发生变化）&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;白天工作时候需要一个功能，我搜了一下Google，没有找到合适的，就花了半天时间写了一个jQuery插件jEmotion。&lt;/p&gt;
&lt;p&gt;jEmotion的主要功能是用来给输入框加入转义之后的表情代码，然后在页面显示时候可以重新将表情代码转回表情图片。&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201111/jemotion.png&#34; alt=&#34;image&#34;  /&gt;


&lt;/p&gt;
&lt;p&gt;jEmotion的代码托管在GitHub上，地址是
&lt;a href=&#34;https://github.com/alswl/jEmotion&#34;&gt;https://github.com/alswl/jEmotion&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;demo地址是 [http://lab.log4d.com/javascript/jEmotion/demo.html](&lt;a href=&#34;http://lab.log&#34;&gt;http://lab.log&lt;/a&gt;4d.
com/javascript/jEmotion/demo.html) 。&lt;/p&gt;
&lt;p&gt;这是我写的第一个jQuery插件，写完还蛮兴奋的，哈哈。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>重要通知：Log4D的域名由 <a href="http://dddspace.com">http://dddspace.com</a> 迁移到
<a href="http://log4d.com">http://log4d.com</a> 。 订阅地址现在改为
<a href="http://log4d.com/feed">http://log4d.com/feed</a> 和
<a href="http://feeds.feedburner.com/dddspace">http://feeds.feedburner.com/dddspace</a>
。（FeedBurner的地址未发生变化）</p>
<hr />
<p>白天工作时候需要一个功能，我搜了一下Google，没有找到合适的，就花了半天时间写了一个jQuery插件jEmotion。</p>
<p>jEmotion的主要功能是用来给输入框加入转义之后的表情代码，然后在页面显示时候可以重新将表情代码转回表情图片。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201111/jemotion.png" alt="image"  />


</p>
<p>jEmotion的代码托管在GitHub上，地址是
<a href="https://github.com/alswl/jEmotion">https://github.com/alswl/jEmotion</a> 。</p>
<p>demo地址是 [http://lab.log4d.com/javascript/jEmotion/demo.html](<a href="http://lab.log">http://lab.log</a>4d.
com/javascript/jEmotion/demo.html) 。</p>
<p>这是我写的第一个jQuery插件，写完还蛮兴奋的，哈哈。</p>
]]></content:encoded>
    </item>
    <item>
      <title>AzaAjaxChat笔记-实现</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</link>
      <pubDate>Sun, 22 Aug 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</guid>
      <description>&lt;p&gt;唔，继续整理笔记，这些是在代码编写中遇到的问题和解决办法的总结，不是 Turtial，问题有针对性，内容枯燥，路人可以直接忽略~&lt;/p&gt;
&lt;h2 id=&#34;一comet-服务器推技术&#34;&gt;一、Comet 服务器推技术&lt;/h2&gt;
&lt;p&gt;Comet 推技术，一句话概括，就是形成一个不断开的连接，使得服务器能主动向客户端发送信息。这种技术在交互性强的 Web 产品中应用的非常多，比如 GMail。Co
met 的实现方式有两种：基于 AJAX 的长轮询（long-polling）方式和基于 Iframe 及 htmlfile
的流（streaming）方式，具体两种实现方式可以参考&lt;a href=&#34;http://www.ibm.com/developerworks/cn/web/wa-lo-comet/&#34;&gt;Comet：基于 HTTP 长连接的&amp;quot;服务器推&amp;quot;技术&lt;/a&gt;。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>唔，继续整理笔记，这些是在代码编写中遇到的问题和解决办法的总结，不是 Turtial，问题有针对性，内容枯燥，路人可以直接忽略~</p>
<h2 id="一comet-服务器推技术">一、Comet 服务器推技术</h2>
<p>Comet 推技术，一句话概括，就是形成一个不断开的连接，使得服务器能主动向客户端发送信息。这种技术在交互性强的 Web 产品中应用的非常多，比如 GMail。Co
met 的实现方式有两种：基于 AJAX 的长轮询（long-polling）方式和基于 Iframe 及 htmlfile
的流（streaming）方式，具体两种实现方式可以参考<a href="http://www.ibm.com/developerworks/cn/web/wa-lo-comet/">Comet：基于 HTTP 长连接的&quot;服务器推&quot;技术</a>。</p>
<p>我计划把这个技术引入，成为一个亮点，第二种 Comet 实现方式过于复杂（GMail 使用的就是这种），我就尝试第一种。我在测试环境测试了基于 AJAX 的长轮询
（long-polling）方式。这种方式说白了就是在 Ajax 获取返回数据时候，在状态吗为 4（数据传输完成）情况随后进行下次查询。进行循环的查询。</p>
<p>这种 Long-polling 的轮询方式有点伪 Comet。相对于常见的定时查询，不同点是将&quot;查询-&gt;返回-&gt;再查询&quot;中间的一段断开时间进行重连接。最后因为技术
实现和开发时间，我决定放弃了 Comet 的实现。</p>
<p>PS：一个系统应该不仅仅是技术的堆积，也应该考虑其他的一些因素，是否有确实需求，开发效率问题。虽然我做了一些前期准备，最终还是没有加入 Comet，蛮可惜的。</p>
<h3 id="相关链接">相关链接：</h3>
<ul>
<li><a href="http://www.javaeye.com/topic/652949">一步一步打造 WebIM（1） - .net - dotnet - JavaEye 论坛 </a>（.net 使用 IHttpAsyncHandler 的实现）</li>
<li><a href="http://ued.sohu.com/article/118/comment-page-1">Comet&ndash;&ldquo;服务器推&quot;技术 - 搜狐 UED</a>（搜狐 UED 团队的一个小介绍）</li>
</ul>
<h2 id="二用户状态的处理">二、用户状态的处理</h2>
<p>开发时候遇到一个逻辑问题，具体描述如下：&ldquo;一个用户登录长时间不活动（比如直接关闭浏览器），系统需要判定此用户为离线。&ldquo;按照一般设计思路，这个动作应该由后台每
过一段时间自动（比如说 5 分钟）触发一次，如果用 Java 或.net 实现，会考虑设计一个后台运行的进程进行管理。而现在用的 PHP，我查了一下，似乎没有找到相应的
解决办法。</p>
<p>我尝试在系统中设定一个页面每隔几分钟触发一个动作，放置在 index.php 页面中，但是感觉这个设计有点鸡肋。</p>
<p>这个问题困惑我很久，最后参考了<a href="https://blueimp.net/ajax/">AJAX Chat</a>的源码，它的思路是在一个新用户上线时候，进行检测所
有用户距离上次其活动的时间来判定每个用户的离线状态。这个也不是最优想法（万一长时间没有用户登录怎么办？），但是比上面那个定时页面要好多了。</p>
<p>如果有 PHP 达人看到这个，望不惜赐教。</p>
<h2 id="三rtmp">三、RTMP</h2>
<p>RTPM 是一个流媒体传输的协议，我在 AzaAjaxChat 中用它进行视频聊天画面和音频传输。这块内容可以洋洋洒洒的写一大篇日志，我在这里只是简单罗列一下我用
到的相关内容。</p>
<blockquote>
<p>Real Time Messaging Protocol（实时消息传送协议协议）概述，实时消息传送协议是 Adobe
Systems 公司为 Flash 播放器和服务器之间音频、视频和数据传输开发的私有协议。它有三种变种： 1)工作在 TCP 之上的明文协议，使用端口 1935；
2)RTMPT 封装在 HTTP 请求之中，可穿越防火墙； 3)RTMPS 类似 RTMPT，但使用的是 HTTPS 连接；</p>
<p>RTMP 协议是被 Flash 用于对象，视频，音频的传输.该协议建立在 TCP 协议或者轮询 HTTP 协议之上。</p>
<p>RTMP 协议就像一个用来装数据包的容器，这些数据可以是 AMF 格式的数据，也可以是 FLV 中的视/音频数据。一个单一的连接可以通过不同的通道传输多路网络流。
这些通道中的包都是按照固定大小的包传输的。</p></blockquote>
<p>我使用 FMS 作为 RTPM 容器，Adobe FMS（Flash Media Server）是一款能够提供出色的 Flash
Video 流媒体播放功能的服务器软件。</p>
<p>FMS 提供一个强大 Script 可定制脚本的服务器流媒体引擎，通过这个引擎，允许创建和交付面向互联网任何用户群体的交互媒体应用及服务。FMS 还是 Adobe 公司
跨媒体解决方案中的一部分，针对诸如数据库连接访问、文件系统操作、服务访问等要求，可以同 Adobe Flash Player 与 Adobe AIR 一起来实现。</p>
<h2 id="四基于-flex-的流媒体传输">四、基于 Flex 的流媒体传输</h2>
<h3 id="41-官方-sample-stratus">4.1 官方 Sample-Stratus</h3>
<p>AzaAjaxChat 中最技术含量的地方在于语音视频聊天。Adobe 官网在 Flex 子类中提供了一个 Demo 名叫<a href="http://labs.adobe.com/technologies/stratus/samples/">Stratus</a>，正是一个聊天系统。从教程上看，Adobe 公司目前开放的 Stratus 是同时支
持视频和语音 P2P 的，同时，未来的 FMS 也可能会支持 P2P。</p>
<p>Adobe 的某个专家博客还针对 Stratus 有一篇相当详细的讲解，原文在此<a href="http://www.adobe.com/devnet/flashplayer/articles/rtmfp_stratus_app.html">Stratus service for developing end-to- end applications using RTMFP in Flash Player 10 | Adobe Developer Connection</a>，文中分析了
RTMFP（比 RTMP 更高阶的流媒体传输协议，支持 P2P）和 Stratus 的相关核心代码。我本想把这篇文章翻译，完成 10%之后，意外发现已经有人翻译了，地址
在此【通过 Stratus 服务器在 Flash Player 中使用 RTMFP 开发 点对点应用（一） &ndash; Windows Live】(<a href="http://snowyrock.spaces.live.com/Blog/cns!B8CBEB7169880B1D!1279.entry?wa=wsignin1.0&amp;sa=18">http://snowyrock.spaces.live.com/Blog/cns!B8CBEB7169880B1D!1279.entry?wa=wsignin1.0&amp;sa=18</a>
3740112)，<a href="http://snowyrock.spaces.live.com/blog/cns!B8CBEB7169880B1D!1278.entry?_c=BlogPart">通过 Stratus 服务器在 Flash Player 中使用 RTMFP 开发 点对点应用（二） &ndash; Windows Live</a>
。</p>
<p>同时可以参考其他例子<a href="http://www.cnblogs.com/beniao/archive/2009/04/28/1444159.html">FMS3 系列（五）：通过 FMS 实现时时视频聊天（Flash|Flex） - Bēniaǒ成长笔记 - 博客园</a>。</p>
<h3 id="42-azaajaxchat-视频语音核心代码">4.2 AzaAjaxChat 视频语音核心代码</h3>
<p>下面是核心代码。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">function</span> <span class="nf">starChat</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nx">MouseEvent</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//同时开始监听
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">doReceive</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//初始化一个网络连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">publicNc</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetConnection</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//开始连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">publicNc</span><span class="o">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">rtmpUrl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//为这个连接添加事件，这个事件有返回连接状态
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">publicNc</span><span class="o">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">NetStatusEvent</span><span class="o">.</span><span class="nx">NET_STATUS</span><span class="p">,</span><span class="nx">onPublishNetStatusHandler</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nx">microphone</span> <span class="o">=</span> <span class="nx">Microphone</span><span class="o">.</span><span class="nx">getMicrophone</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="nx">camera</span> <span class="o">=</span> <span class="nx">Camera</span><span class="o">.</span><span class="nx">getCamera</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">camera</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Alert</span><span class="o">.</span><span class="nx">show</span><span class="p">(</span><span class="s1">&#39;没有开启摄像头或者没有安装摄像头&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="nx">videoPublish</span><span class="o">.</span><span class="nx">attachCamera</span><span class="p">(</span><span class="nx">camera</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">function</span> <span class="nf">onPublishNetStatusHandler</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nx">NetStatusEvent</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//根据连接返回的状态信息判断是滞连接成功
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span><span class="p">(</span><span class="nx">event</span><span class="o">.</span><span class="nx">info</span><span class="o">.</span><span class="nx">code</span><span class="o">==</span><span class="s2">&#34;NetConnection.Connect.Success&#34;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="nx">appMessage</span><span class="o">.</span><span class="nx">text</span> <span class="o">+=</span> <span class="s2">&#34;n 发布连接建立成功&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetStream</span><span class="p">(</span><span class="nx">publicNc</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">attachAudio</span><span class="p">(</span><span class="nx">microphone</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">attachCamera</span><span class="p">(</span><span class="nx">camera</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">client</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">publish</span><span class="p">(</span><span class="nx">publicName</span><span class="p">,</span><span class="s2">&#34;live&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">function</span> <span class="nf">doReceive</span><span class="p">()</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">receiveNc</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetConnection</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//开始连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">receiveNc</span><span class="o">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">rtmpUrl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//为这个连接添加事件，这个事件有返回连接状态
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">receiveNc</span><span class="o">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">NetStatusEvent</span><span class="o">.</span><span class="nx">NET_STATUS</span><span class="p">,</span><span class="nx">onReceiveNetStatusHandler</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">function</span> <span class="nf">onReceiveNetStatusHandler</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nx">NetStatusEvent</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//根据连接返回的状态信息判断是滞连接成功
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span><span class="p">(</span><span class="nx">event</span><span class="o">.</span><span class="nx">info</span><span class="o">.</span><span class="nx">code</span><span class="o">==</span><span class="s2">&#34;NetConnection.Connect.Success&#34;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="nx">appMessage</span><span class="o">.</span><span class="nx">text</span> <span class="o">+=</span> <span class="s2">&#34;n 接受连接建立成功&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">receiveNs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetStream</span><span class="p">(</span><span class="nx">publicNc</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Video</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span><span class="o">.</span><span class="nx">width</span> <span class="o">=</span> <span class="mi">230</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span><span class="o">.</span><span class="nx">height</span> <span class="o">=</span> <span class="mi">173</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span><span class="o">.</span><span class="nx">attachNetStream</span><span class="p">(</span><span class="nx">receiveNs</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="nx">videoReceive</span><span class="o">.</span><span class="nx">addChild</span><span class="p">(</span><span class="nx">video</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">receiveNs</span><span class="o">.</span><span class="nx">play</span><span class="p">(</span><span class="nx">receiveName</span><span class="p">,</span><span class="s2">&#34;live&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">appMessage</span><span class="o">.</span><span class="nx">text</span> <span class="o">+=</span> <span class="s2">&#34;n&#34;</span> <span class="o">+</span>　<span class="nx">event</span><span class="o">.</span><span class="nx">info</span><span class="o">.</span><span class="nx">code</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><h3 id="43-管道-netconnectionconnect">4.3 管道 NetConnection.connect()</h3>
<p>Flex 流媒体传输通过通道传输，在 NetConnection 之上建立连接，由于 RTMP 和 FMS 的存在，我们可以很方便的在网络流上写入和读取流媒体信息。Net
Connection.connect()支持 FMS 流媒体和本地文件，官方解释如下。</p>
<blockquote>
<p>在 Flash Player 或 AIR AIR 应用程序和 Flash Media Server 应用程序之间创建双向连接，NetConnection
对象如同客户端与服务器之间的管道。</p>
<p>如果未使用 Flash Media Server，请调用 NetConnection.connect()，以便从本地文件系统或 Web</p></blockquote>
<p>服务器中播放视频和 MP3 文件。有关支持的编解码器和文件格式的信息，请参阅 <a href="http://www.adobe.com/go/hardware_scaling_cn">http://www.adobe.com/go/hardware_scali ng_cn</a>。</p>
<h3 id="44-flashnetnetconnection-上找不到属性-onbwdone">4.4 flash.net.NetConnection 上找不到属性 onBWDone</h3>
<p>这个问题参考<a href="http://blog.csdn.net/xiang08/archive/2009/07/13/4343551.aspx">在 flash.net.NetConnection 上找不到属性 onBWDone，且没有默认值。解决办法。 - Xiang - CSDN 博客</a>，解决如下。</p>
<blockquote>
<p>在 flash.net.NetConnection 上找不到属性 onBWDone，且没有默认值。</p>
<pre tabindex="0"><code>_nc = new NetConnection();
c.addEventListener(NetStatusEvent.NET_STATUS,netStatusHandler);
c.client = this;
c.objectEncoding = ObjectEncoding.AMF0;
c.connect(&#34;rtmp://localhost/oflaDemo&#34;);
</code></pre><p>首先添加_nc.client = this.</p>
<p>然后新建一个方法：<code>public function onBWDone():void{}</code></p>
<p>问题解决。</p></blockquote>
<h2 id="五javascript-和-flex-的交互">五、JavaScript 和 Flex 的交互</h2>
<p>页面上的 Flex 必须响应页面 JavaScript 的触发事件，Adboe 在设计 Flex 时候，预留了相互调用的端口 ExternalInterface，详情可以 Google 之，类似代码如下。</p>
<pre tabindex="0"><code>if (ExternalInterface.available) {
    ExternalInterface.addCallback(&#34;initParams&#34;, initParams);
    ExternalInterface.addCallback(&#34;playSound&#34;, playSound);
} else {
    this.appMessage.text += &#34;nJS 无法调用 Flash，请检查 Flash 环境&#34;;
}
</code></pre><p>但是这种调用方法存在着一个致命的问题：创建一个 swf 的 Object，当对这个 swf 做隐藏/显示的时候(display:none,display:block)
的时候，swf 的所有的注册的 javascritp 函数都会被干掉（ExternalInterface.addCall 方法）。这个是 Flex 的一个 BUG，现在也
还没有解决。</p>
<p>相关讨论可以参见<a href="http://rwl6813021.javaeye.com/blog/236344">Javascript 无法访问 Flex 问题~ - rwl6813021 - JavaEye 技术网站</a>，文中详细讨论了这个问题，并给出一个解决方案。</p>
<p>有一个折中的方案：即通过 LocationConnection（本地通讯，利用两个 swf 来进行交互）来处理，初始化一个调用的 client
swf，负责调用被隐藏的 swf 中的方法，这样就避开了直接通过 javascript 调用被隐藏的 swf 中的方法。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="c1">//1：client 发送端：</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">private</span><span class="w"> </span><span class="kd">var</span><span class="w"> </span><span class="n">ucallswfconn</span><span class="p">:</span><span class="n">LocalConnection</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="n">function</span><span class="w"> </span><span class="nf">init</span><span class="p">():</span><span class="kt">void</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">ucallswfconn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">LocalConnection</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">//注册 Javascritp 方法，网页调用该 flex 的方法，通过该方法中转，调用另外一个 flex 的方法</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">ExternalInterface</span><span class="p">.</span><span class="na">addCallback</span><span class="p">(</span><span class="s">&#34;selectCallControl&#34;</span><span class="p">,</span><span class="n">flexSelectCallControl</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="n">function</span><span class="w"> </span><span class="nf">flexSelectCallControl</span><span class="p">(</span><span class="n">method</span><span class="p">:</span><span class="n">String</span><span class="p">,</span><span class="n">param</span><span class="p">:</span><span class="n">String</span><span class="p">):</span><span class="kt">void</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">//Alert.show(method+param);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">//调用另外一端 swf 中的方法，参数：1:receiver 端监听的服务名称 2:方法名称 3:参数</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">ucallswfconn</span><span class="p">.</span><span class="na">send</span><span class="p">(</span><span class="s">&#34;ucallexternconn&#34;</span><span class="p">,</span><span class="s">&#34;&#34;</span><span class="o">+</span><span class="n">method</span><span class="p">,</span><span class="s">&#34;&#34;</span><span class="o">+</span><span class="n">param</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">//2：receiver 接收端：</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">//add by polarbear, 2008.09.04, 本地通讯</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">this</span><span class="p">.</span><span class="na">ucallexternConn</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">LocalConnection</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">this</span><span class="p">.</span><span class="na">ucallexternConn</span><span class="p">.</span><span class="na">allowDomain</span><span class="p">(</span><span class="s">&#34;*&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">ucallexternConn</span><span class="p">.</span><span class="na">client</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">this</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">try</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">this</span><span class="p">.</span><span class="na">ucallexternConn</span><span class="p">.</span><span class="na">connect</span><span class="p">(</span><span class="s">&#34;ucallexternconn&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w"> </span><span class="k">catch</span><span class="w"> </span><span class="p">(</span><span class="n">error</span><span class="p">:</span><span class="n">ArgumentError</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">trace</span><span class="p">(</span><span class="s">&#34;连接失败&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>注意被调用的函数必须是 public 的。</p>
<p>我使用这个方法并没有成功，最后我采用的是将视频画面直接放在界面上（很丑，不得已为之）。上文的解决方案只是给出一个思路，感兴趣的话可以自己试试。</p>
<h2 id="六last">六、Last</h2>
<p>其实还有很多细节地方可以讲讲，我就不一一展开了。整理的文章就是这样，也没什么花样和娱乐，我都懒得加图片了~</p>
<p>祝大家周末愉快，最近我睡眠很不好，每天 6 点就醒了，中午补个觉去……</p>
]]></content:encoded>
    </item>
    <item>
      <title>IE XML 缓存问题</title>
      <link>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</link>
      <pubDate>Wed, 02 Jun 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</guid>
      <description>&lt;p&gt;明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。&lt;/p&gt;
&lt;p&gt;PS:之前已经有过3篇相关毕设的文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://log4d.com/2010/05/cakephp-global-variables&#34;&gt;CakePHP的全局变量&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://log4d.com/2010/05/fms-80-port-used&#34;&gt;FMS的80端口占用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://log4d.com/2010/05/swfobject&#34;&gt;SWFObject 一款JavaScript的Flash检测与插入模块&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;mdash;- 正文开始 &amp;mdash;-&lt;/p&gt;
&lt;h2 id=&#34;问题背景&#34;&gt;问题背景&lt;/h2&gt;
&lt;p&gt;系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即时生成的。当用FireFox或者Chro
me请求时候都能获得正确的数据，而IE则常常出现无法获取实时的XML数据。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。</p>
<p>PS:之前已经有过3篇相关毕设的文章：</p>
<p><a href="http://log4d.com/2010/05/cakephp-global-variables">CakePHP的全局变量</a></p>
<p><a href="http://log4d.com/2010/05/fms-80-port-used">FMS的80端口占用</a></p>
<p><a href="http://log4d.com/2010/05/swfobject">SWFObject 一款JavaScript的Flash检测与插入模块</a></p>
<p>&mdash;- 正文开始 &mdash;-</p>
<h2 id="问题背景">问题背景</h2>
<p>系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即时生成的。当用FireFox或者Chro
me请求时候都能获得正确的数据，而IE则常常出现无法获取实时的XML数据。</p>
<p>而如果在地址栏中填入 http://localhost/AzaAjaxChat/src/Chat/getXml?messageId=41
这个原始的XML文件地址，就可以获取正确的XML文件。并且在下次IE 的 HTTPRequest请求时候就正常了。看来问题出在IE自身的缓存上面。</p>
<h2 id="解决方法">解决方法</h2>
<h3 id="1使用url参数随机事件">1.使用URL参数随机事件</h3>
<p>在AJAX请求的页面后加个随机函数,我们可以使用随机时间函数，在javascript发送的URL后加上t=Math.random()。</p>
<p>当然，不是直接把t=Math.random()拷贝到URL后面,应该像这样:</p>
<pre><code>url = url + &quot;&amp; amp;&quot; + &quot;t=&quot; + Math.random();
</code></pre>
<h3 id="2修改header缓存时间">2.修改Header缓存时间</h3>
<p>在XMLHttpRequest发送请求之前加上 XMLHttpRequest.setRequestHeader(&ldquo;If-Modified-
Since&rdquo;,&ldquo;0&rdquo;)。一般情况下,这里的 XMLHttpRequest 不会直接使用。</p>
<p>你应该可以找到这样的代码</p>
<p>XXXXX.send(YYYYYY);</p>
<p>那么,就把它变成</p>
<p>XXXXX.setRequestHeader(&ldquo;If-Modified-Since&rdquo;,&ldquo;0&rdquo;);</p>
<p>XXXXX.send(YYYYYY);</p>
<h2 id="a-sample">a Sample</h2>
<p>我选择的是第一种方法，我觉得这种更为直观。我的具体代码如下（使用jQuery）：</p>
<pre><code>jQuery.get(&quot;http://localhost/AzaAjaxChat/src/Chat/getXml&quot;, {
	messageId: aacGlobal.currentMessageId,
	version: Math.random()
}, getRemoteDataCallBack);
</code></pre>
]]></content:encoded>
    </item>
    <item>
      <title>SWFObject 一款JavaScript的Flash检测与插入模块</title>
      <link>https://blog.alswl.com/2010/05/swfobject/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/05/swfobject/</guid>
      <description>&lt;p&gt;今天开始AzaAjaxChat的视频聊天模块，拖FMS的福，实现起来很轻松，不过后来在JavaScript和Flash的交互上遇到了问题。&lt;/p&gt;
&lt;p&gt;Flash在各个浏览器中的实现始终是个麻烦的事情，什么Object Embed~，似乎没有什么标准的格式，一般都要做一些浏览器Hack，我对这些深痛恶绝，在
泡了一下午前端相关的论坛后，偶然发现一款JavaScript交互的神器。&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201005/swfobject_logo.gif&#34; alt=&#34;image&#34;  /&gt;


&lt;/p&gt;
&lt;h2 id=&#34;swfobject-基于javascript的flash媒体版本检测与嵌入模块&#34;&gt;SWFObject: 基于Javascript的Flash媒体版本检测与嵌入模块&lt;/h2&gt;
&lt;p&gt;SWFObject是一个用于在HTML中方面插入Adobe Flash媒体资源（*.swf文件）的独立、敏捷的JavaScript模块。该模块中的JavaS
cript脚本能够自动检测PC、Mac机器上各种主流浏览器对Flash插件的支持情况。它使得插入Flash媒体资源尽量简捷、安全。而且它是非常符合搜索引擎优
化的原则的。此外，它能够避免您的 HTML、XHTML中出现object、embed等非标准标签，从而符合更加标准。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>今天开始AzaAjaxChat的视频聊天模块，拖FMS的福，实现起来很轻松，不过后来在JavaScript和Flash的交互上遇到了问题。</p>
<p>Flash在各个浏览器中的实现始终是个麻烦的事情，什么Object Embed~，似乎没有什么标准的格式，一般都要做一些浏览器Hack，我对这些深痛恶绝，在
泡了一下午前端相关的论坛后，偶然发现一款JavaScript交互的神器。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201005/swfobject_logo.gif" alt="image"  />


</p>
<h2 id="swfobject-基于javascript的flash媒体版本检测与嵌入模块">SWFObject: 基于Javascript的Flash媒体版本检测与嵌入模块</h2>
<p>SWFObject是一个用于在HTML中方面插入Adobe Flash媒体资源（*.swf文件）的独立、敏捷的JavaScript模块。该模块中的JavaS
cript脚本能够自动检测PC、Mac机器上各种主流浏览器对Flash插件的支持情况。它使得插入Flash媒体资源尽量简捷、安全。而且它是非常符合搜索引擎优
化的原则的。此外，它能够避免您的 HTML、XHTML中出现object、embed等非标准标签，从而符合更加标准。</p>
<p>（即：通过text/html应答页面， 而非application/xhtml+xml）</p>
<p>官方在Google Project Host中，下载的代码包中有一个简单的Example，也包含了SWFObject的源码，感兴趣的同学可以研究一下。</p>
<p>相关链接：</p>
<p><a href="http://code.google.com/p/swfobject">swfobject - Project Hosting on Google Code</a></p>
<p><a href="http://www.awflasher.com/flash/articles/swfobj.htm">SWFObject中文的帮助文档</a></p>
<p>如果你也像我这样为Flash发愁，不妨试试这个小巧的js~</p>
]]></content:encoded>
    </item>
    <item>
      <title>开发跨浏览器JavaScript时要注意的问题</title>
      <link>https://blog.alswl.com/2010/01/development-of-cross-browser-javascript-should-pay-attention-to-the-problem/</link>
      <pubDate>Sat, 30 Jan 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/01/development-of-cross-browser-javascript-should-pay-attention-to-the-problem/</guid>
      <description>&lt;p&gt;最近在做系统的B/S部分，用DWR做Ajax处理，期间遇到一些浏览器兼容的问题，&lt;code&gt;table.insertRow()&lt;/code&gt;和&lt;code&gt;row.insertCell()&lt;/code&gt;
在IE下没有问题，但在FireFox下无效。同事说不用考虑FireFox的兼容，客户使用的环境就是IE。我偏执的认为就算不在所有浏览器下通过，至少在我的Fi
reFox下需要正常运行。&lt;/p&gt;
&lt;p&gt;晚上花了一点时间稍微研究了一下跨浏览器开发JavaScript时要注意的问题，的确好多学问。我对JavaScript的认识还太浅，得花时间做一些功课了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>最近在做系统的B/S部分，用DWR做Ajax处理，期间遇到一些浏览器兼容的问题，<code>table.insertRow()</code>和<code>row.insertCell()</code>
在IE下没有问题，但在FireFox下无效。同事说不用考虑FireFox的兼容，客户使用的环境就是IE。我偏执的认为就算不在所有浏览器下通过，至少在我的Fi
reFox下需要正常运行。</p>
<p>晚上花了一点时间稍微研究了一下跨浏览器开发JavaScript时要注意的问题，的确好多学问。我对JavaScript的认识还太浅，得花时间做一些功课了。</p>
<p>顺便推荐一本JavaScript书《<strong>JavaScript语言精粹</strong> 》，是大名鼎鼎的&quot;O&rsquo;Reilly&quot;系列，我只看了试读的第一章节，斗胆推荐</p>
<p>在<a href="http://dancewithnet.com">随网之舞</a>的<a href="http://dancewithnet.com/2009/04/02/javascript-the-good-parts/">《JavaScript语言精粹》 @ 随网之舞</a>有更详细的介绍。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201001/s3651235.jpg" alt="image"  />


</p>
<p>传送门：</p>
<p><a href="http://www.china-pub.com/195292">购买</a>《JavaScript语言精粹 》via China-Pub</p>
<p><a href="http://www.douban.com/subject/3590768/">评论</a> 《JavaScript语言精粹》via 豆瓣</p>
<p><strong>样章阅读</strong>：<a href="http://images.china-pub.com/ebook195001-200000/195292/ch01.pdf">第一章. 精华</a> <a href="http://images.china-pub.com/ebook195001-200000/195292/ch10.pdf">第十章. 优美的特性</a></p>
<p>以下文章没有URL出处，作者 liqun，来源：<strike><a href="https://www.comecode.com">www.comecode.com</a></strike>（连接已失效）</p>
<p>××××××××××想回家的分割线××××××××××</p>
<h2 id="1向表中追加行">1、向表中追加行</h2>
<p>定义table时使用tbody元素，以保证包括IE在内的所有浏览器可用</p>
<p>例：定义如下一个空表</p>
<table id="myTable">
<p>&amp;n
bsp_place_holder; <tbody id="myTableBody"></tbody></p>
</table>
<p>向这个表中增加行的正确做法是，把行增加到表体，而不是增加到表。</p>
<p>Var cell =
document.createElement(&ldquo;td&rdquo;).appendChild(document.createTextNode(&ldquo;foo&rdquo;));</p>
<p>Var row = document.createElement(&ldquo;tr&rdquo;).appendChild(cell);</p>
<p>Document.getElementById(&ldquo;myTableBody&rdquo;).appendChild(row);</p>
<p>*IE中需要先创建行，再创建列，再创建内容</p>
<h2 id="2设置元素的样式">2、设置元素的样式</h2>
<p>Var spanElement = document.getElementById(&ldquo;mySpan&rdquo;);</p>
<p>//下面写法保证出IE外，所有浏览器可用</p>
<p>spanElement.setAttribute(&ldquo;style&rdquo;,&ldquo;font-weight:bold;color:red;&rdquo;);</p>
<p>//下面的写法保证IE可用</p>
<p>spanElement.style.cssText=&ldquo;font-weight:bold;color:red;&rdquo;;</p>
<h2 id="3设置元素的class属性">3、设置元素的class属性</h2>
<p>Var element = document.getElementById(&ldquo;myElement&rdquo;);</p>
<p>//下面的写法保证除IE外，所有浏览器可用</p>
<p>Element.setAttribute(&ldquo;class&rdquo;,&ldquo;styleClass&rdquo;);</p>
<p>//下面写法保证IE可用</p>
<p>Element.setAttribute(&ldquo;className&rdquo;,&ldquo;styleClass&rdquo;);</p>
<h2 id="4创建输入元素">4、创建输入元素</h2>
<p>Var button = document.createElement(&ldquo;input&rdquo;);</p>
<p>//单行文本框、复选框、单选框、单选钮、按钮需要此属性区别</p>
<p>Button.setAttribute(&ldquo;type&rdquo;,&ldquo;button&rdquo;);</p>
<p>Document.getElementById(&ldquo;formElement&rdquo;).appendChild(button);</p>
<h2 id="5向输入元素增加事件处理程序">5、向输入元素增加事件处理程序</h2>
<p>Var formElement=document.getElementById(&ldquo;formElement&rdquo;);</p>
<p>//所有浏览器可用</p>
<p>formElement.onclick=function(){doFoo();};</p>
<p>//除IE外，所有浏览器可用</p>
<p>formElement.setAttribute(&ldquo;onclick&rdquo;,&ldquo;doFoo();&rdquo;);</p>
<h2 id="6创建单选钮">6、创建单选钮</h2>
<p>If(document.uniqueID){</p>
<p>&amp;n
bsp_place_holder; //Internet Explorer</p>
<p>&amp;n
bsp_place_holder; Var radioButton=document.createElement(&quot;<input type='radio'
name='radioButton' value='checked'>&quot;);</p>
<p>}else{</p>
<p>&amp;n
bsp_place_holder; //Standards Compliant</p>
<p>&amp;n
bsp_place_holder; Var radioButton=document.createElement(&ldquo;input&rdquo;);</p>
<p>&amp;n
bsp_place_holder; radioButton.setAttribute(&ldquo;type&rdquo;,&ldquo;radio&rdquo;);</p>
<p>&amp;n
bsp_place_holder; radioButton.setAttribute(&ldquo;name&rdquo;,&ldquo;radioButton&rdquo;);</p>
<p>&amp;n
bsp_place_holder; radioButton.setAttribute(&ldquo;value&rdquo;,&ldquo;checked&rdquo;);</p>
<p>}</p>
<h2 id="7insertrowinsertcelldeleterow">7、insertRow,insertCell,deleteRow</h2>
<p>在IE中，table.insertRow()如果没有指定参数，则在表格后面添加行，默认参数位-1；如果在Firefox中，则一定要加参数，如：insertR
ow(-1)。</p>
]]></content:encoded>
    </item>
    <item>
      <title>jQuery图片圈人功能在ASP.NET下的改进</title>
      <link>https://blog.alswl.com/2009/09/jquery-to-achieve-the-school-network-image-circle-of-people-function-results/</link>
      <pubDate>Wed, 02 Sep 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/09/jquery-to-achieve-the-school-network-image-circle-of-people-function-results/</guid>
      <description>&lt;p&gt;项目中需要一个类似于校内圈人效果的js控件，找了一下基本没有直接能用的，只有一些未完成，我只能自己动手了。 基本框架参照这篇文章《&lt;a href=&#34;http://www.cnblogs.com/czy1121/archive/2009/03/03/1402105.html&#34;&gt;JS实现校内网&amp;quot;图片圈人 &amp;ldquo;功能效果&lt;/a&gt;》（强烈推荐这篇
文章，这段代码写的很帅气） 我把代码摘录如下，不过还是建议大家去看原文的一些分析。&lt;/p&gt;
&lt;h2 id=&#34;原始code&#34;&gt;原始Code:&lt;/h2&gt;
&lt;p&gt;运行环境： 1.jQuery支持 2.DragResize类（czy1121作者写的一个js类，更多信息可以参照《&lt;a href=&#34;http://www.cnblogs.com/czy1121/archive/2009/02/26/1398971.html&#34;&gt;Javascript Resize和Drag类,基于jQuery&lt;/a&gt;》）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>项目中需要一个类似于校内圈人效果的js控件，找了一下基本没有直接能用的，只有一些未完成，我只能自己动手了。 基本框架参照这篇文章《<a href="http://www.cnblogs.com/czy1121/archive/2009/03/03/1402105.html">JS实现校内网&quot;图片圈人 &ldquo;功能效果</a>》（强烈推荐这篇
文章，这段代码写的很帅气） 我把代码摘录如下，不过还是建议大家去看原文的一些分析。</p>
<h2 id="原始code">原始Code:</h2>
<p>运行环境： 1.jQuery支持 2.DragResize类（czy1121作者写的一个js类，更多信息可以参照《<a href="http://www.cnblogs.com/czy1121/archive/2009/02/26/1398971.html">Javascript Resize和Drag类,基于jQuery</a>》）</p>
<h3 id="样式">样式：</h3>
<p>​ <br />
#enclose-wrapper {
position: relative;
z-index: 0;
border: 4px solid #DDD;
background-color: #FFF;
}
#form-add-tag {
margin-left: 8px;
position: absolute;
padding: 5px 3px;
border: 1px solid #005EAC;
float: left;
display: inline;
background-color: #FFF;
}
#select-area-box {
position: absolute;
border: 5px solid #D8DFEA;
float: left;
}
#select-area {
position: relative;
padding: 0;
border: 2px solid #005EAC;
z-index: 15;
cursor: move;
background: url(spacer.gif) no-repeat -1px -1px;
}
#select-area-box span {
position: absolute;
border: 1px solid #005EAC;
width: 8px;
height: 8px;
background-color: #FFF;
font-size: 0;
z-index: 18;
}
#select-area-box span.north-west-resize {
cursor: nw-resize;
left: 0;
top: 0;
margin-left: -1px;
margin-top: -1px;
}
#select-area-box span.north-east-resize {
cursor: ne-resize;
right: 0;
top: 0;
margin-right: -1px;
margin-top: -1px;
}
#select-area-box span.south-west-resize {
cursor: sw-resize;
left: 0;
bottom: 0;
margin-left: -1px;
margin-bottom: -1px;
}
#select-area-box span.south-east-resize {
cursor: se-resize;
right: 0;
bottom: 0;
margin-right: -1px;
margin-bottom: -1px;
}
#enclose-wrapper ul#tag-list {
list-style: none;
margin: 0;
padding: 0;
font-size: 13px;
float: left;
}
#enclose-wrapper ul#tag-list li {
list-style: none;
float: left;
}
#enclose-wrapper ul#tag-list li a {
color: #F60;
}</p>
<h3 id="js实现代码">js实现代码：</h3>
<p>​ <br />
var photoTag = {
show: function(left, top, width, height, show_resize_square) {
$(&rsquo;#select-area-box&rsquo;).css({
&rsquo;left&rsquo;: left - 7,
&rsquo;top&rsquo;: top - 7
})
$(&rsquo;#select-area-box&rsquo;).width(width + 4).height(height + 4).show();
$(&rsquo;#select-area&rsquo;).width(width).height(height);
if (show_resize_square) $(&rsquo;#select-area-box span&rsquo;).show();
else $(&rsquo;#select-area-box span&rsquo;).hide();
},
hide: function() {
$(&rsquo;#select-area-box&rsquo;).hide();
},
add: function(tag_name, tag_value, left, top, width, height) {
var json = {
id: Math.floor(Math.random() * 10000)
};
var args = left + &lsquo;,&rsquo; + top + &lsquo;,&rsquo; + width + &lsquo;,&rsquo; + height;
var li = '</p>
<pre><code>  * ';         li += '';         li += '([删除](javascript:;))';         li += '';         li += '
';
        $('#tag-list').append(li);
    },
    remove: function(id, li) {
        li.parentNode.removeChild(li);
    }
};
$(function() {
    var is_started = false;
    // 选区左上角,和高宽
    var info = {
        'left': 0,
        'top': 0,
        'width': 0,
        'height': 0
    };
    var origin = {
        x: $('#enclose-wrapper').offset().left + (parseInt($('#enclose-wrapper').css('border-left-width')) || 0),
        y: $('#enclose-wrapper').offset().top + (parseInt($('#enclose-wrapper').css('border-top-width')) || 0)
    };
    var dnr = new DragResize($('#select-area-box')[0], {
        minWidth: 20,
        minHeight: 20,
        bound: {
            left: 0,
            top: 0,
            right: 9999,
            bottom: 9999
        },
        callback: function(i) {
            // 7为左(上)边两个边框的宽度的和, 4为左右(上下)篮色边框宽度的和
            info = {
                'left': i.left + 7,
                'top': i.top + 7,
                'width': i.width - 4,
                'height': i.height - 4
            };
            $('#select-area').width(info.width).height(info.height);
            // 将添加标签的表单定位在选区的右边
            $('#form-add-tag').css({
                'left': i.left + i.width + 10,
                'top': i.top
            });
        }
    });
    // 拖动选区
    $('#select-area').mousedown(function(e) {
        dnr.drag(e);
    });
    // 调整选区大小
    $('#select-area-box span').mousedown(function(e) {
        dnr.resize(e, this.className.replace('-resize', ''));
    });
    // 在图片上点击一下,开始获取选区
    $('#photo-wrapper img').mousedown(function(e) {
        if (is_started) return;
        is_started = true;
        var left = e.pageX - origin.x - 50 - 7;
        var top = e.pageY - origin.y - 50 - 7;
        info = {
            'left': left + 7,
            'top': top + 7,
            'width': 100,
            'height': 100
        };
        photoTag.show(info.left, info.top, info.width, info.height, true);
        $('#form-add-tag').show().css({
            'left': left + 100 + 4 + 10,
            'top': top
        });
    });
    // 鼠标进入图片内时,显示选区
    $('#photo-wrapper img').bind('mouseenter',
    function(e) {
        if (!is_started) return;
        photoTag.show(info.left, info.top, info.width, info.height, true);
    });
    // 确定添加一个标签,或取消
    $('#btn-add-tag, #btn-cancel').click(function(e) {
        if (this.id == 'btn-cancel') {
            $('#form-add-tag, #select-area-box').hide();
            is_started = false;
            return false;
        }
        if (!$('#tag-name').val()) {
            alert('标签名不能为空！');
            return false;
        }
        // 添加标签
        photoTag.add($('#tag-name').val(), $('#tag-value').val(), info.left, info.top, info.width, info.height);
        // 隐藏选区和表单
        $('#form-add-tag, #select-area-box').hide();
        is_started = false;
    });
    photoTag.hide();
});
</code></pre>
<h3 id="html代码">Html代码</h3>
<p>​ <br />
<div id="enclose-wrapper">
<div id="photo-wrapper" style="margin:15px auto;text-align:center;"> <img id="photo" src="heroes_s3_peter.jpg" /> </div>
<div>
<ul id="tag-list">
<li>相片中：</li>
<li> <span onmouseover="photoTag.show(0,0,85,66);" onmouseout="photoTag.hide();">aaa</span> (<a href="javascript:;" onclick="photoTag.remove('342',this.parentNode);" onmouseover="photoTag.show(0,0,85,66);" onmouseout="photoTag.hide();">删除</a>) </li>
</ul>
</div>
<div id="select-area-box">
<div id="select-area"></div>
<span></span><span></span> <span></span><span></span> </div>
<div id="form-add-tag" style="display:none;"> 输入标签：</p>
<input id="tag-name" name="tag-name" type="text" />
<p><button id="btn-add-tag" type="button">确认</button></p>
<p><button id="btn-cancel" type="button">取消</button></p>
</div>
</div>
<h2 id="改进">改进</h2>
<p>在Asp.NET下这段代码存在几个问题（毕竟这段代码应该只能算是Demo）：1.无法和服务器进行数据交互。2.无法在ASP.NET环境下获取相关id。3.只
能提交到服务器一个&quot;标签&rdquo;，不足以完成需求。</p>
<h3 id="修改后js">修改后js:</h3>
<p>​ <br />
var photoTag = {
show: function(left, top, width, height, show_resize_square) {
$(&rsquo;#select-area-box&rsquo;).css({
&rsquo;left&rsquo;: left - 7,
&rsquo;top&rsquo;: top - 7
})
$(&rsquo;#select-area-box&rsquo;).width(width + 4).height(height + 4).show();
$(&rsquo;#select-area&rsquo;).width(width).height(height);
if (show_resize_square) $(&rsquo;#select-area-box span&rsquo;).show();
else $(&rsquo;#select-area-box span&rsquo;).hide();
},
hide: function() {
$(&rsquo;#select-area-box&rsquo;).hide();
},
add: function(tag_name, tag_value, left, top, width, height) {
var json = {
id: Math.floor(Math.random() * 10000)
};
//$.getJSON(&lsquo;add_tag.php&rsquo;, {&rsquo;name&rsquo;:tag_name,&rsquo;left&rsquo;:left,&rsquo;top&rsquo;:top,&lsquo;width&rsquo;:width,&lsquo;height&rsquo;:height}, function(json) {
//reflesh tag list
//    if(json.message) alert(json.message);
//    if(json.error == 0) {
var args = left + &lsquo;,&rsquo; + top + &lsquo;,&rsquo; + width + &lsquo;,&rsquo; + height;
var li = '</p>
<pre><code>  * ';         li += '';         li += '([删除](javascript:;))';         li += '';         li += '
';
        $('#tag-list').append(li);
        //    }
        //});
    },
    remove: function(id, li) {
        //$.getJSON('remove_tag.php', {'tag_id':id}, function(json) {
        //reflesh tag list
        //    if(json.message) alert(json.message);
        //    if(json.error == 0)
        li.parentNode.removeChild(li);
        //});
    }
};
$(function() {
    var is_started = false;
    // 选区左上角,和高宽
    var info = {
        'left': 0,
        'top': 0,
        'width': 0,
        'height': 0
    };
    var origin = {
        x: $('#enclose-wrapper').offset().left + (parseInt($('#enclose-wrapper').css('border-left-width')) || 0),
        y: $('#enclose-wrapper').offset().top + (parseInt($('#enclose-wrapper').css('border-top-width')) || 0)
    };
    var dnr = new DragResize($('#select-area-box')[0], {
        minWidth: 20,
        minHeight: 20,
        bound: {
            left: 0,
            top: 0,
            right: 9999,
            bottom: 9999
        },
        callback: function(i) {
            // 7为左(上)边两个边框的宽度的和, 4为左右(上下)篮色边框宽度的和
            info = {
                'left': i.left + 7,
                'top': i.top + 7,
                'width': i.width - 4,
                'height': i.height - 4
            };
            $('#select-area').width(info.width).height(info.height);
            // 将添加标签的表单定位在选区的右边
            $('#form-add-tag').css({
                'left': i.left + i.width + 10,
                'top': i.top
            });
        }
    });
    // 拖动选区
    $('#select-area').mousedown(function(e) {
        dnr.drag(e);
    });
    // 调整选区大小
    $('#select-area-box span').mousedown(function(e) {
        dnr.resize(e, this.className.replace('-resize', ''));
    });
    // 在图片上点击一下,开始获取选区
    $('#photo-wrapper img').mousedown(function(e) {
        if (is_started) return;
        is_started = true;
        var left = e.pageX - origin.x - 50 - 7;
        var top = e.pageY - origin.y - 50 - 7;
        info = {
            'left': left + 7,
            'top': top + 7,
            'width': 100,
            'height': 100
        };
        photoTag.show(info.left, info.top, info.width, info.height, true);
        $('#form-add-tag').show().css({
            'left': left + 100 + 4 + 10,
            'top': top
        });
    });
    // 鼠标进入图片内时,显示选区
    $('#photo-wrapper img').bind('mouseenter',
    function(e) {
        if (!is_started) return;
        photoTag.show(info.left, info.top, info.width, info.height, true);
    });
    // 确定添加一个标签,或取消
    $('#btn-add-tag, #btn-cancel').click(function(e) {
        if (this.id == 'btn-cancel') {
            $('#form-add-tag, #select-area-box').hide();
            is_started = false;
            return false;
        }
        if (!$('#tag-name').val()) {
            alert('标签名不能为空！');
            return false;
        }
        // 添加标签
        photoTag.add($('#tag-name').val(), $('#tag-value').val(), info.left, info.top, info.width, info.height);
        // 隐藏选区和表单
        $('#form-add-tag, #select-area-box').hide();
        is_started = false;
    });
    photoTag.hide();
});
</code></pre>
<h3 id="html代码-1">Html代码：</h3>
<p>​ <br />
<div id="enclose-wrapper">
<div id="photo-wrapper">
&lt;asp:Image ID=&ldquo;ImgPhoto&rdquo; Visible=&ldquo;false&rdquo; runat=&ldquo;server&rdquo; /&gt;
</div>
<div>
<ul id="tag-list">
</ul>
</div>
<div id="select-area-box">
<div id="select-area"> </div>
<span></span><span></span><span></span><span></span> </div>
<div id="form-add-tag" style="display: none;"> 名称：
<input id="tag-name" name="tag-name" type="text" /></p>
<p>数值：</p>
<input id="tag-value" name="tag-value" type="text" />
<p><button id="btn-add-tag" type="button"> 确认</button></p>
<p><button id="btn-cancel" type="button"> 取消</button></p>
</div>
</div>
<p>这边的主要修改在于把框子的右边的内容增加为名称和数值，方便数据的识别。</p>
<h3 id="后台aspnet文件读取">后台ASP.NET文件读取</h3>
<p>​ <br />
string[] fields = Request.Params.GetValues(&ldquo;photoField&rdquo;);</p>
<p>这里呢，由于上传的元素<code>name</code>相同，都是<code>photoField</code>，所以通过<code>Params.GetValues()</code>就可以取出<code>string</code>数组，这样就
能获取所有数据了。数据格式是&quot;<code>ddl:小楠,x:98.88333129882812,y:146,width:100,height:100</code>&ldquo;这种形式，依靠
&ldquo;,&ldquo;分割。</p>
<h3 id="相关下载">相关下载</h3>
<p><a href="../../static/images/upload_dropbox/200909/DragResize.js">DragResize.js</a>
<a href="../../static/images/upload_dropbox/200909/template.js">template.js</a>
<a href="../../static/images/upload_dropbox/200909/css.css">css.css</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>关于禁用Javascript的讨论</title>
      <link>https://blog.alswl.com/2009/05/discussion-on-javascript-disabled/</link>
      <pubDate>Sat, 23 May 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/05/discussion-on-javascript-disabled/</guid>
      <description>&lt;p&gt;做用户验证时候，在为客户端和服务器端各自的验证发愁，这时候我想到一个问题，现在这么多网站依赖javascript来表现页面，那么如果禁用了会怎么样呢。&lt;/p&gt;
&lt;p&gt;Google了一下，找到一篇06年的帖子。当客户端把Javascript禁用后，[猛击这里打开](&lt;a href=&#34;http://bbs.blueidea.com/archi&#34;&gt;http://bbs.blueidea.com/archi&lt;/a&gt;
ver/tid-2694115.html)&lt;/p&gt;
&lt;p&gt;最让我吃惊的是这篇神奇的帖子从06年被讨论到09年，从挖坟N次，好狠&amp;hellip;&lt;/p&gt;
&lt;p&gt;摘录部分语句如下：&lt;/p&gt;
&lt;p&gt;所以我会做一个纯HTML的首页，告诉人家不要屏蔽javascript，不要屏蔽ActiveX，不要&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;:( :(&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>做用户验证时候，在为客户端和服务器端各自的验证发愁，这时候我想到一个问题，现在这么多网站依赖javascript来表现页面，那么如果禁用了会怎么样呢。</p>
<p>Google了一下，找到一篇06年的帖子。当客户端把Javascript禁用后，[猛击这里打开](<a href="http://bbs.blueidea.com/archi">http://bbs.blueidea.com/archi</a>
ver/tid-2694115.html)</p>
<p>最让我吃惊的是这篇神奇的帖子从06年被讨论到09年，从挖坟N次，好狠&hellip;</p>
<p>摘录部分语句如下：</p>
<p>所以我会做一个纯HTML的首页，告诉人家不要屏蔽javascript，不要屏蔽ActiveX，不要&hellip;&hellip;&hellip;&hellip;:( :(</p>
<p>看看Gmail怎么做的。我觉得那就是答案（的一种）。</p>
<p>禁止JS上在功能的使用上致少不该受到影响，但是国内的许多网站不去考虑这个。　只是盲目的跟风，　什么AJAX、什么体验，很多都是建立在JS上的，一旦使用的浏览
器不支持JS，就什么都没了。google做得不错，可是国内一些所谓的门户网站，像sinasohu163yahoo或多或少都存在一定的问题，这些站的首页或许没
什么问题，但看看其它的页面就知道。　既然浏览器提供了禁用JS、禁用COOKIE的功能，那我们就不得不考虑禁用后对我们的影响。</p>
<p>CJJ 老是走极端。</p>
<p>什么网站能满足１００％的用户需要？</p>
<p>GOOGLE搜索，只能说第一页的排序满足８０％的人的需要。</p>
<p>所以，做一个检查，低于１０％的人没有打开JS，就不用专为他们搞一个版本了。</p>
<p>什么用户都想抓住，往往什么用户都抓不住。</p>
<p>当你的消耗和价值不相等的时候，选择放弃，是最好的解决方案。</p>
<p>很多事，不是人们不想做。而是在商业环境下，不允许这样去做。</p>
<p>当然，追求完美是我们的目标，如果能在条件许可的情况下，可以做这样的工作。</p>
<p>但现在网站，往往都没有这样的许可。</p>
<p>我支持蓝色。</p>
<p>我认为是这样的：</p>
<p>一个运营网站为主导思想的人（比如蓝色）不应该赞同这个问题，关闭JS 和 Cookies的人实在太少，缺了这个东西，说明他们不在乎用户体验，他在网上寸步难行。</p>
<p>而一个以技术为主导思想的人（比如技术总监），就必须考虑一下这个问题。</p>
<p>而最关键的问题是： [color=Blue]他是你的目标客户吗？[/color]</p>
<p>从技术角度讲，解决这个问题不难。现在争论的焦点是：是否有必要去做。</p>
<p>答案很简单： 如果你的人力成本允许，并且你在乎这部分变态的人，就去改善把～</p>
<p>Google这么做就是考虑到这个因素。总体来说这个问题不是一个问题，而是一个普遍问题：</p>
<p>如果用户关闭JS怎么办？</p>
<p>如果用户不支持Cookies怎么办？</p>
<p>如果用户没有安装flashpleyer怎么办？</p>
<p>如果用户使用的是 IE5怎么办？</p>
<p>如果用户是 800*600分辨率怎么办？</p>
<p>如果用户是 FF或者OP或者其他浏览器怎么办？</p>
<p>如果用户视力障碍怎么办？</p>
<p>如果用户没有耳机或音箱怎么办？</p>
<p>哦&hellip;&hellip;你去死把～～天哪～</p>
<p>呵呵，现在有多少网站用的em呢，我想大多是px吧，那些中老年人只有戴老花镜上网咯。。。。</p>
<p>说用户体验性，我想还是要针对人群来说，大家都在这里谈论什么js，css。可是你的最终用户会谈论什么呢？处于这个领域，懂这些技术，你会去说，会去讨论，可用户不
会关心这些吧，一些普通的网民谁会自己主动去把js禁用掉，他们就不知道这些。也许他们关注的只是我要找的信息好不好找，你这页面我看舒服不舒服，你这里速度是不是很
快&hellip;&hellip;</p>
<p>如果像某些同志那样的要考虑没有css，js，flash等等该怎么去做网页，那可以假想一下做出来的东西会是什么样子的，我说不好，也没尝试过。</p>
<p>现在的这技术，那技术是为了什么而出现的呢，某位同学比喻的很好：某天砍掉自己的脚，会问我怎么不会走路了呢&hellip;&hellip;.</p>
<p>话又说回来，做web开发本来就是个敏捷性要求很高的开发，我们把过多的精力放在那些边边角角的问题上，会得不偿失。</p>
<p>针对你的用户去处理问题&hellip;.</p>
<p>=====注意时间！！！====</p>
<p>ujam 发表于 2009-2-18 17:38</p>
<p>js很重要，现在js正在越来越受重视中，开源库jquery,prototype这些都是随着时代的变化而产生的，打个比方js版星际争霸，都比软件版的小,占用空
间小，跨平台，所以我觉得以后的软件会网页化。</p>
<p>网页化还可以减少成本</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
