<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>frontend on Log4D</title>
    <link>https://blog.alswl.com/tags/frontend/</link>
    <description>Recent content in frontend on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Oct 2022 00:08:31 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/frontend/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>私有化在线协同画图平台 Excalidraw</title>
      <link>https://blog.alswl.com/2022/10/self-hosted-excalidraw/</link>
      <pubDate>Mon, 17 Oct 2022 00:08:31 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2022/10/self-hosted-excalidraw/</guid>
      <description>首先感谢岳父岳母带家中神兽去过暑假了，我才能有周末的时间来改这个系统。
另外感谢老婆，周末我两天都搞自己的事情，也没批评我。
最后感谢公司团建，提供酒店住，花了一个晚上时间搞定了中文手写体。
注：这是魔改私有化 excalidraw 开源版本，感谢社区
#1 Excalidraw 介绍一下 Excalidraw，产品特性
什么是 Excalidraw，这（可能）是最强的在线协同画图工具 ，你可以访问 Excalidraw 试试看。
如果你觉得打开来都是空白，那么也可以访问这个公共面板 Excalidraw 参与一起创作。
Excalidraw 非常好用，我总结几个点：
手写风格（Hand Writing）避免了强迫症，什么一像素差异，都没了躺平到底 无延迟在线协作，非常适合后疫情时代的沟通协作 产品素质过硬，快捷键、对象连接粘滞、选定文件直接存储到本地等细节都有，挑不出毛病 这个产品我们经内部同学内部安利之后，大家迅速的喜欢上了，在 Excalidraw 上面了好多图，但也引来一个问题。
「公有 SaaS 服务存在数据安全隐患」 怎么办？我要把他私有化部署！ #2 部署之前，先来了解一下 Excalidraw 的工作原理 Excalidraw 工作原理和私有化原理：
那私有化的核心难点是什么：
解决 excalidraw-storage 的数据存储问题，即替换掉 Google Cloud Platform 的 firebase 服务。
#3 私有化尝试 事有不顺反求诸己
- 孟子
求与诸己，不如求于 GayHub
- alswl
让我们先先研究 Excalidraw 的存储系统。 Firebase 是 Google 的 Serverless 服务，以前是独立公司（还挺火），后来给 GCP 收购了。
我一开始想法是替换 Firebase，找了一个社区服务 Supabase（意外发现还有免费的 SaaS 服务，良心啊）</description>
    </item>
    
    <item>
      <title>漫谈前后端天花板</title>
      <link>https://blog.alswl.com/2019/07/frontend-backend-ceiling/</link>
      <pubDate>Thu, 04 Jul 2019 19:58:28 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2019/07/frontend-backend-ceiling/</guid>
      <description>在阿里，我们不得不承认一个事实：前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。 在阿里，虽然前端的工作已 经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。
- 玉伯 2013 年 阿里前端的困局与突围
image from Abbey Arches Architecture - Free photo on Pixabay
和 G 总论道 前几天和某大厂前端负责人 G 聊职业生涯发展，聊着聊着就谈到了前端和后端职业天花板。 我表达了自己观点：后端职业天花板更高，这是由职能细分决定。
后端（服务端）概念比较宽泛，常见分类可以有应用开发工程师、中间件工程师、甚至可以包含运维、数据工程师、算法工程师。 本文我只将后端工程师限定在应用开发工程师以及衍生的框架、库开发工程师。 前端这边由于引入大前端概念，概念也比较广，包含：Web 前端、移动端（iOS + Android 客户端）、桌面端（PC 端）。 我们也限定在这几个方向的应用开发。
有些同学可能不服气，现在基于 Node.js 也能写后端应用，并且已经有越来越多成熟产品。 单页应用推动了 React / React Native / Vue 等技术发展，这类前端框架也需要基于 MVC / MVVM 设计模式管理复杂数据流。 在端场景，Hybrid 应用愈发成熟，并且在一些特定领域比如 AI，iOS 也引入 Core ML 技术。 这样天花板还不够高么？
是的，尽管前端近年发展迅猛，探索出多种新技术，从更广泛端技术来看，Android / iOS 也迎来爆炸式发展， 几乎隐隐有势头盖过后端趋势。 随着业务复杂度提升， Web Frontend / Android / iOS 开发困难度愈发提升；随着科技普惠云计算发展， 技术门槛会进一步降低，当前前端工程师会有更宽阔空间。 但是仍然认为后端是更难掌握，职业天花板更高。</description>
    </item>
    
  </channel>
</rss>
