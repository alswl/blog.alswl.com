<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>azaajaxchat on Log4D</title>
    <link>https://blog.alswl.com/tags/azaajaxchat/</link>
    <description>Recent content in azaajaxchat on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 22 Aug 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/azaajaxchat/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AzaAjaxChat笔记-实现</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</link>
      <pubDate>Sun, 22 Aug 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</guid>
      <description>唔，继续整理笔记，这些是在代码编写中遇到的问题和解决办法的总结，不是Turtial，问题有针对性，内容枯燥，路人可以直接忽略~
一、Comet服务器推技术 Comet推技术，一句话概括，就是形成一个不断开的连接，使得服务器能主动向客户端发送信息。这种技术在交互性强的Web产品中应用的非常多，比如GMail。Co met的实现方式有两种：基于 AJAX 的长轮询（long-polling）方式和基于 Iframe 及 htmlfile 的流（streaming）方式，具体两种实现方式可以参考Comet：基于 HTTP 长连接的&amp;quot;服务器推&amp;quot;技术。
我计划把这个技术引入，成为一个亮点，第二种Comet实现方式过于复杂（GMail使用的就是这种），我就尝试第一种。我在测试环境测试了基于 AJAX 的长轮询 （long-polling）方式。这种方式说白了就是在Ajax获取返回数据时候，在状态吗为4（数据传输完成）情况随后进行下次查询。进行循环的查询。
这种Long-polling的轮询方式有点伪Comet。相对于常见的定时查询，不同点是将&amp;quot;查询-&amp;gt;返回-&amp;gt;再查询&amp;quot;中间的一段断开时间进行重连接。最后因为技术 实现和开发时间，我决定放弃了Comet的实现。
PS：一个系统应该不仅仅是技术的堆积，也应该考虑其他的一些因素，是否有确实需求，开发效率问题。虽然我做了一些前期准备，最终还是没有加入Comet，蛮可惜的。
相关链接： 一步一步打造WebIM（1） - .net - dotnet - JavaEye论坛 （.net使用IHttpAsyncHandler的实现） Comet&amp;ndash;&amp;ldquo;服务器推&amp;quot;技术 - 搜狐UED（搜狐UED团队的一个小介绍） 二、用户状态的处理 开发时候遇到一个逻辑问题，具体描述如下：&amp;ldquo;一个用户登录长时间不活动（比如直接关闭浏览器），系统需要判定此用户为离线。&amp;ldquo;按照一般设计思路，这个动作应该由后台每 过一段时间自动（比如说5分钟）触发一次，如果用Java或.net实现，会考虑设计一个后台运行的进程进行管理。而现在用的PHP，我查了一下，似乎没有找到相应的 解决办法。
我尝试在系统中设定一个页面每隔几分钟触发一个动作，放置在index.php页面中，但是感觉这个设计有点鸡肋。
这个问题困惑我很久，最后参考了AJAX Chat的源码，它的思路是在一个新用户上线时候，进行检测所 有用户距离上次其活动的时间来判定每个用户的离线状态。这个也不是最优想法（万一长时间没有用户登录怎么办？），但是比上面那个定时页面要好多了。
如果有PHP达人看到这个，望不惜赐教。
三、RTMP RTPM是一个流媒体传输的协议，我在AzaAjaxChat中用它进行视频聊天画面和音频传输。这块内容可以洋洋洒洒的写一大篇日志，我在这里只是简单罗列一下我用 到的相关内容。
Real Time Messaging Protocol（实时消息传送协议协议)概述，实时消息传送协议是Adobe Systems公司为Flash播放器和服务器之间音频、视频和数据传输开发的私有协议。它有三种变种： 1)工作在TCP之上的明文协议，使用端口1935； 2)RTMPT封装在HTTP请求之中，可穿越防火墙； 3)RTMPS类似RTMPT，但使用的是HTTPS连接；
RTMP协议是被Flash用于对象，视频,音频的传输.该协议建立在TCP协议或者轮询 HTTP协议之上。
RTMP协议就像一个用来装数据包的容器，这些数据可以是AMF格式的数据，也可以是FLV中的视/音频数据。一个单一的连接可以通过不同的通道传输多路网络流。 这些通道中的包都是按照固定大小的包传输的。
我使用FMS作为RTPM容器，Adobe FMS（Flash Media Server）是一款能够提供出色的Flash Video流媒体播放功能的服务器软件。
FMS提供一个强大Script可定制脚本的服务器流媒体引擎，通过这个引擎，允许创建和交付面向互联网任何用户群体的交互媒体应用及服务。FMS还是Adobe公司 跨媒体解决方案中的一部分，针对诸如数据库连接访问、文件系统操作、服务访问等要求，可以同Adobe Flash Player与Adobe AIR一起来实现。
四、基于Flex的流媒体传输 4.1 官方Sample-Stratus AzaAjaxChat中最技术含量的地方在于语音视频聊天。Adobe官网在Flex子类中提供了一个Demo名叫[Stratus](http://labs.a dobe.com/technologies/stratus/samples/)，正是一个聊天系统。从教程上看，Adobe公司目前开放的Stratus是同时支 持视频和语音P2P的，同时，未来的FMS也可能会支持P2P。</description>
    </item>
    
    <item>
      <title>AzaAjaxChat笔记-框架</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-frame/</link>
      <pubDate>Thu, 12 Aug 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-frame/</guid>
      <description>1个月没有动PHP了，新装的系统甚至还没有配置PHP环境，今天看到BooguNote上有一个boo是专门记录AzaAjaxChat开发时候遇到的问题和解决办 法。于是把一些东西整理记录一下。
1. 从ThinkPHP开始 最早的AzaAjaxChat是基于ThinkPHP的，我当时在OpenSouce上看到ThinkPHP的介绍，有很多优点，看的我很心动：MVC模型，Ajax 支持，详细的文档和案例，国人开发的框架。我作为一个PHP新人一下子就被他吸引住了，决定用ThinkPHP做框架。
随着系统开发的推进，我却感觉到一些不自在，遇到一些问题却找不好太好的解决办法。比如ThinkPHP的模块和分组两个概念，让我比较疑惑，花费了大量时间重组目录 结构，两种方法各有优劣，让我很难选择（有选择了反而难办了 ^_^）。
最让我恼火的是相对目录带来的路径混乱，在JSP开发中，静态内容习惯性放在webcontent文件夹中，而ThinkPHP的CSS、图片、JS引用让我很疑惑， 要区分App的和Model的静态文件。
在开发过程中，我也遇到过框架本身的Bug，让我对这个框架失去信心。在这里我没有贬低ThinkPHP或者ThinkPHP开发者的意思，他们的&amp;quot;大道至简、开发由 我&amp;quot;的理念很值得欣赏。只是作为初学者因为遇到的一些问题，带来了一定的开发难度，不得已放弃。
2. 选择CakePHP 在遇到数次挫折之后，我终于下定决心换框架。工作室之前有过一个项目是用CakePHP开发的，保存着一些资料，阿贵强烈推荐CakePHP。我Google了几篇框 架的评测文章后，考虑了一下AzaAjaxChat的规模，决定选择CakePHP。
CakePHP的脚手架(Scaffold)功能让我眼前一亮，让我脱离了大量CRUD繁琐的操作。而Cake Bake可以方便的根据数据库生成php代码，减少那 些没有逻辑意义的代码。AzaAjaxChat的定位是毕业设计，不是强健的产品，不会苛求太高的用户体验和安全特性，所以这个功能帮了我很多忙。
CakePHP能够处理关系型数据库之间的m-n关系，由于我的系统逻辑简单，并没复杂的多表操作，所以这里没有深究。从Cake Baker的生成代码菜单上应该能够看出CakePHP还是能够处理一定的多表关联问题。
CakePHP也不是那么十全十美，最麻烦的是文档少，我指的是中文文档，英文资源还是比较丰富的。其次是对Ajax的支持不如ThinkPHP那么原生，我一开始使 用JSON方案，后来使用XML方案实现Ajax数据序列化。
3. CakePHP &amp;amp; ThinkPHP 使用的框架最大的目的是提高效率，大幅度缩短工作时间，这两个框架都是为此而诞生的。我这里不说孰优孰劣，如果感兴趣，可以Google查看相关比较。这两个框架都使 用Ruby On Rails的Active Record理念进行开发，CakePHP更是被称为PHP版的RuR，我在编码中期还特意去图书馆查阅了RuR的相关资料，的确是高效的Web开发模型。
Active Record释义
ActiveRecord也属于ORM层，由Rails最早提出，遵循标准的ORM模型：表映射到记录，记录映射到对象，字段映射到对象属性。配合遵循的命名和配 置惯例，能够很大程度的快速实现模型的操作，而且简洁易懂。
我在答辩的PPT中写选择CakePHP的原因有三：一站式的MVC框架、约定优于配置、更少的代码，其实这也是RuR的优势。
4. 相关连接 Plod: [翻译]十款PHP开发框架横向比较 ChinaUnix一位网友写的CakePHP入门（我觉得比官方教材好上手） cakephp jquery ajax json_天知道_百度空间（CakePHP的Ajax操作方法） 老王的技术手册_博客_cakephp / zendframework_百度空间（挺多CakePHP相关资料） IBM developerWorks 中国 : 使用 CakePHP 快速打造 Web 站点（IBM的CakePHP教程） </description>
    </item>
    
    <item>
      <title>IE XML 缓存问题</title>
      <link>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</link>
      <pubDate>Wed, 02 Jun 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</guid>
      <description>明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。
PS:之前已经有过3篇相关毕设的文章：
[CakePHP的全局变量
](http://log4d.com/2010/05/cakephp-global-variables)
[FMS的80端口占用
](http://log4d.com/2010/05/fms-80-port-used)
[SWFObject 一款JavaScript的Flash检测与插入模块
](http://log4d.com/2010/05/swfobject)
&amp;mdash;- 正文开始 &amp;mdash;-
问题背景 系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即时生成的。当用FireFox或者Chro me请求时候都能获得正确的数据，而IE则常常出现无法获取实时的XML数据。
而如果在地址栏中填入 http://localhost/AzaAjaxChat/src/Chat/getXml?messageId=41 这个原始的XML文件地址，就可以获取正确的XML文件。并且在下次IE 的 HTTPRequest请求时候就正常了。看来问题出在IE自身的缓存上面。
解决方法 1.使用URL参数随机事件 在AJAX请求的页面后加个随机函数,我们可以使用随机时间函数，在javascript发送的URL后加上t=Math.random()。
当然，不是直接把t=Math.random()拷贝到URL后面,应该像这样:
url = url + &amp;quot;&amp;amp; amp;&amp;quot; + &amp;quot;t=&amp;quot; + Math.random(); 2.修改Header缓存时间 在XMLHttpRequest发送请求之前加上 XMLHttpRequest.setRequestHeader(&amp;ldquo;If-Modified- Since&amp;rdquo;,&amp;ldquo;0&amp;rdquo;)。一般情况下,这里的 XMLHttpRequest 不会直接使用。
你应该可以找到这样的代码
XXXXX.send(YYYYYY);
那么,就把它变成
XXXXX.setRequestHeader(&amp;ldquo;If-Modified-Since&amp;rdquo;,&amp;ldquo;0&amp;rdquo;);
XXXXX.send(YYYYYY);
a Sample 我选择的是第一种方法，我觉得这种更为直观。我的具体代码如下（使用jQuery）：
jQuery.get(&amp;quot;http://localhost/AzaAjaxChat/src/Chat/getXml&amp;quot;, { messageId: aacGlobal.currentMessageId, version: Math.random() }, getRemoteDataCallBack); </description>
    </item>
    
    <item>
      <title>SWFObject 一款JavaScript的Flash检测与插入模块</title>
      <link>https://blog.alswl.com/2010/05/swfobject/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/05/swfobject/</guid>
      <description>今天开始AzaAjaxChat的视频聊天模块，拖FMS的福，实现起来很轻松，不过后来在JavaScript和Flash的交互上遇到了问题。
Flash在各个浏览器中的实现始终是个麻烦的事情，什么Object Embed~，似乎没有什么标准的格式，一般都要做一些浏览器Hack，我对这些深痛恶绝，在 泡了一下午前端相关的论坛后，偶然发现一款JavaScript交互的神器。
SWFObject: 基于Javascript的Flash媒体版本检测与嵌入模块 SWFObject是一个用于在HTML中方面插入Adobe Flash媒体资源（*.swf文件）的独立、敏捷的JavaScript模块。该模块中的JavaS cript脚本能够自动检测PC、Mac机器上各种主流浏览器对Flash插件的支持情况。它使得插入Flash媒体资源尽量简捷、安全。而且它是非常符合搜索引擎优 化的原则的。此外，它能够避免您的 HTML、XHTML中出现object、embed等非标准标签，从而符合更加标准。
（即：通过text/html应答页面， 而非application/xhtml+xml）
官方在Google Project Host中，下载的代码包中有一个简单的Example，也包含了SWFObject的源码，感兴趣的同学可以研究一下。
相关链接：
[swfobject - Project Hosting on Google Code
](http://code.google.com/p/swfobject)
[SWFObject中文的帮助文档
](http://www.awflasher.com/flash/articles/swfobj.htm)
如果你也像我这样为Flash发愁，不妨试试这个小巧的js~</description>
    </item>
    
    <item>
      <title>CakePHP的全局变量</title>
      <link>https://blog.alswl.com/2010/05/cakephp-global-variables/</link>
      <pubDate>Mon, 17 May 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/05/cakephp-global-variables/</guid>
      <description>毕业设计AzaAjaxChat 中有一个功能，记录当前在线用户，直观的看，用Application对象就可以解决。
忙了一会发现，原来PHP没有Application对象这个概念，于是我想到了全局变量，噩梦便开始了。（Application 和全局变量其实完全不是同一个概念）
我使用的框架是CakePHP，查找资料后，找到了几种CakePHP中使用全局变量的方法。
一、使用bootstrap.php文件 在app/config 下面，有一个bootstrap文件，从名字就可以看出，这个是在控制器之前加载的文件，根据官方的描述，有下面几个用法。
定义方便的函数 注册全局常量 定义新增的控制器，视图，控制器路径 通过这个文件可以实现全局变量的声明。
if (!isset ($globalAAC)) { global $globalAAC; $globalAAC = array ( &#39;currentMessageId&#39; =&amp;gt; -1, &#39;onlineUsers&#39; =&amp;gt; array() ); } 在其他文件中就可以调用这个全局变量了。
二、通过Configure 类 Configure类是CakePHP用来进行配置文件的地方，通过write() 和read()方法，也能实现全局变量的读写操作。
Configure::write(&#39;Aac.currentMessageId&#39;, -1); Configure::read(&#39;Aac.currentMessageId&#39;); 其中，还有一个使用Configure的偏门方法，我从 [Need to share global variables throughout your app? » Debuggable Ltd](http://debuggable.com/posts/need-to-share-global- variables-throughout-your-app:480f4dd5-6f64-4c88-812d-46d5cbdd56cb) 看到的。
$config =&amp;amp; Configure::getInstance(); $config-&amp;gt;myVariable = &#39;Hello World&#39;; $config =&amp;amp; Configure::getInstance();
debug($config-&amp;gt;myVariable);
其实就是通过引用操作Configure 类内部的getInstance() 方法，看源码就能看出来。
三、关于类似Application 对象的全局变量 以上两种方法都没错，都可以操作全局变量，但是我却都操作失败了，为此我折腾了整整一天。
我甚至一度把错误归结到CakePHP，后来才发现，原来我冤枉它了。问题的根本是在于，这个全局变量根本不是我所想的那个Application 对象。</description>
    </item>
    
  </channel>
</rss>
