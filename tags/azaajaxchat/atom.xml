<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>azaajaxchat on Log4D</title>
    <link>https://blog.alswl.com/tags/azaajaxchat/</link>
    <description>Recent content in azaajaxchat on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 22 Aug 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/azaajaxchat/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AzaAjaxChat笔记-实现</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</link>
      <pubDate>Sun, 22 Aug 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-implementation/</guid>
      <description>唔，继续整理笔记，这些是在代码编写中遇到的问题和解决办法的总结，不是Turtial，问题有针对性，内容枯燥，路人可以直接忽略~ 一、Comet服务器推技术 Comet推技术，一句话概括，就是形成一个不断开的连接，使得服务器能主动向客户端发送信息。这种技术在交互性强的Web产品中应用的非常多，比如GMail。Co met的实现方式有两种：基于 AJAX 的长轮询（long-polling）方式和基于 Iframe 及 htmlfile 的流（st</description>
      <content:encoded><![CDATA[<p>唔，继续整理笔记，这些是在代码编写中遇到的问题和解决办法的总结，不是Turtial，问题有针对性，内容枯燥，路人可以直接忽略~</p>
<h3 id="一comet服务器推技术">一、Comet服务器推技术</h3>
<p>Comet推技术，一句话概括，就是形成一个不断开的连接，使得服务器能主动向客户端发送信息。这种技术在交互性强的Web产品中应用的非常多，比如GMail。Co
met的实现方式有两种：基于 AJAX 的长轮询（long-polling）方式和基于 Iframe 及 htmlfile
的流（streaming）方式，具体两种实现方式可以参考<a href="http://www.ibm.com/developerworks/cn/web/wa-lo-comet/">Comet：基于 HTTP 长连接的&quot;服务器推&quot;技术</a>。</p>
<p>我计划把这个技术引入，成为一个亮点，第二种Comet实现方式过于复杂（GMail使用的就是这种），我就尝试第一种。我在测试环境测试了基于 AJAX 的长轮询
（long-polling）方式。这种方式说白了就是在Ajax获取返回数据时候，在状态吗为4（数据传输完成）情况随后进行下次查询。进行循环的查询。</p>
<p>这种Long-polling的轮询方式有点伪Comet。相对于常见的定时查询，不同点是将&quot;查询-&gt;返回-&gt;再查询&quot;中间的一段断开时间进行重连接。最后因为技术
实现和开发时间，我决定放弃了Comet的实现。</p>
<p>PS：一个系统应该不仅仅是技术的堆积，也应该考虑其他的一些因素，是否有确实需求，开发效率问题。虽然我做了一些前期准备，最终还是没有加入Comet，蛮可惜的。</p>
<h4 id="相关链接">相关链接：</h4>
<ul>
<li><a href="http://www.javaeye.com/topic/652949">一步一步打造WebIM（1） - .net - dotnet - JavaEye论坛 </a>（.net使用IHttpAsyncHandler的实现）</li>
<li><a href="http://ued.sohu.com/article/118/comment-page-1">Comet&ndash;&ldquo;服务器推&quot;技术 - 搜狐UED</a>（搜狐UED团队的一个小介绍）</li>
</ul>
<h3 id="二用户状态的处理">二、用户状态的处理</h3>
<p>开发时候遇到一个逻辑问题，具体描述如下：&ldquo;一个用户登录长时间不活动（比如直接关闭浏览器），系统需要判定此用户为离线。&ldquo;按照一般设计思路，这个动作应该由后台每
过一段时间自动（比如说5分钟）触发一次，如果用Java或.net实现，会考虑设计一个后台运行的进程进行管理。而现在用的PHP，我查了一下，似乎没有找到相应的
解决办法。</p>
<p>我尝试在系统中设定一个页面每隔几分钟触发一个动作，放置在index.php页面中，但是感觉这个设计有点鸡肋。</p>
<p>这个问题困惑我很久，最后参考了<a href="https://blueimp.net/ajax/">AJAX Chat</a>的源码，它的思路是在一个新用户上线时候，进行检测所
有用户距离上次其活动的时间来判定每个用户的离线状态。这个也不是最优想法（万一长时间没有用户登录怎么办？），但是比上面那个定时页面要好多了。</p>
<p>如果有PHP达人看到这个，望不惜赐教。</p>
<h3 id="三rtmp">三、RTMP</h3>
<p>RTPM是一个流媒体传输的协议，我在AzaAjaxChat中用它进行视频聊天画面和音频传输。这块内容可以洋洋洒洒的写一大篇日志，我在这里只是简单罗列一下我用
到的相关内容。</p>
<blockquote>
<p>Real Time Messaging Protocol（实时消息传送协议协议)概述，实时消息传送协议是Adobe
Systems公司为Flash播放器和服务器之间音频、视频和数据传输开发的私有协议。它有三种变种： 1)工作在TCP之上的明文协议，使用端口1935；
2)RTMPT封装在HTTP请求之中，可穿越防火墙； 3)RTMPS类似RTMPT，但使用的是HTTPS连接；</p>
<p>RTMP协议是被Flash用于对象，视频,音频的传输.该协议建立在TCP协议或者轮询 HTTP协议之上。</p>
<p>RTMP协议就像一个用来装数据包的容器，这些数据可以是AMF格式的数据，也可以是FLV中的视/音频数据。一个单一的连接可以通过不同的通道传输多路网络流。
这些通道中的包都是按照固定大小的包传输的。</p>
</blockquote>
<p>我使用FMS作为RTPM容器，Adobe FMS（Flash Media Server）是一款能够提供出色的Flash
Video流媒体播放功能的服务器软件。</p>
<p>FMS提供一个强大Script可定制脚本的服务器流媒体引擎，通过这个引擎，允许创建和交付面向互联网任何用户群体的交互媒体应用及服务。FMS还是Adobe公司
跨媒体解决方案中的一部分，针对诸如数据库连接访问、文件系统操作、服务访问等要求，可以同Adobe Flash Player与Adobe AIR一起来实现。</p>
<h3 id="四基于flex的流媒体传输">四、基于Flex的流媒体传输</h3>
<h4 id="41-官方sample-stratus">4.1 官方Sample-Stratus</h4>
<p>AzaAjaxChat中最技术含量的地方在于语音视频聊天。Adobe官网在Flex子类中提供了一个Demo名叫[Stratus](<a href="http://labs.a">http://labs.a</a>
dobe.com/technologies/stratus/samples/)，正是一个聊天系统。从教程上看，Adobe公司目前开放的Stratus是同时支
持视频和语音P2P的，同时，未来的FMS也可能会支持P2P。</p>
<p>Adobe的某个专家博客还针对Stratus有一篇相当详细的讲解，原文在此<a href="http://www.adobe.com/devnet/flashplayer/articles/rtmfp_stratus_app.html">Stratus service for developing end-to- end applications using RTMFP in Flash Player 10 | Adobe Developer Connection</a>，文中分析了
RTMFP（比RTMP更高阶的流媒体传输协议，支持P2P）和Stratus的相关核心代码。我本想把这篇文章翻译，完成10%之后，意外发现已经有人翻译了，地址
在此[通过Stratus 服务器在Flash Player中使用RTMFP 开发 点对点应用(一) &ndash; Windows Live](<a href="http://snowyrock.spaces.live.com/Blog/cns!B8CBEB7169880B1D!1279.entry?wa=wsignin1.0&amp;sa=18">http://snowyrock.spaces.live.com/Blog/cns!B8CBEB7169880B1D!1279.entry?wa=wsignin1.0&amp;sa=18</a>
3740112)，<a href="http://snowyrock.spaces.live.com/blog/cns!B8CBEB7169880B1D!1278.entry?_c=BlogPart">通过Stratus 服务器在Flash Player中使用RTMFP 开发 点对点应用（二） &ndash; Windows Live</a>
。</p>
<p>同时可以参考其他例子<a href="http://www.cnblogs.com/beniao/archive/2009/04/28/1444159.html">FMS3系列(五)：通过FMS实现时时视频聊天（Flash|Flex） - Bēniaǒ成长笔记 - 博客园</a>。</p>
<h4 id="42-azaajaxchat视频语音核心代码">4.2 AzaAjaxChat视频语音核心代码</h4>
<p>下面是核心代码。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">function</span> <span class="nf">starChat</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nx">MouseEvent</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//同时开始监听
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">doReceive</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//初始化一个网络连接 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">publicNc</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetConnection</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//开始连接 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">publicNc</span><span class="o">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">rtmpUrl</span><span class="p">);</span> 
</span></span><span class="line"><span class="cl">	<span class="c1">//为这个连接添加事件,这个事件有返回连接状态 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">publicNc</span><span class="o">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">NetStatusEvent</span><span class="o">.</span><span class="nx">NET_STATUS</span><span class="p">,</span><span class="nx">onPublishNetStatusHandler</span><span class="p">);</span> 
</span></span><span class="line"><span class="cl">	<span class="nx">microphone</span> <span class="o">=</span> <span class="nx">Microphone</span><span class="o">.</span><span class="nx">getMicrophone</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="nx">camera</span> <span class="o">=</span> <span class="nx">Camera</span><span class="o">.</span><span class="nx">getCamera</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">camera</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Alert</span><span class="o">.</span><span class="nx">show</span><span class="p">(</span><span class="s1">&#39;没有开启摄像头或者没有安装摄像头&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="nx">videoPublish</span><span class="o">.</span><span class="nx">attachCamera</span><span class="p">(</span><span class="nx">camera</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">function</span> <span class="nf">onPublishNetStatusHandler</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nx">NetStatusEvent</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">//根据连接返回的状态信息判断是滞连接成功
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span><span class="p">(</span><span class="nx">event</span><span class="o">.</span><span class="nx">info</span><span class="o">.</span><span class="nx">code</span><span class="o">==</span><span class="s2">&#34;NetConnection.Connect.Success&#34;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="nx">appMessage</span><span class="o">.</span><span class="nx">text</span> <span class="o">+=</span> <span class="s2">&#34;n发布连接建立成功&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetStream</span><span class="p">(</span><span class="nx">publicNc</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">attachAudio</span><span class="p">(</span><span class="nx">microphone</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">attachCamera</span><span class="p">(</span><span class="nx">camera</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">client</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">publicNs</span><span class="o">.</span><span class="nx">publish</span><span class="p">(</span><span class="nx">publicName</span><span class="p">,</span><span class="s2">&#34;live&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">function</span> <span class="nf">doReceive</span><span class="p">()</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">receiveNc</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetConnection</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//开始连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">receiveNc</span><span class="o">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">rtmpUrl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//为这个连接添加事件,这个事件有返回连接状态
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">receiveNc</span><span class="o">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">NetStatusEvent</span><span class="o">.</span><span class="nx">NET_STATUS</span><span class="p">,</span><span class="nx">onReceiveNetStatusHandler</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">private</span> <span class="k">function</span> <span class="nf">onReceiveNetStatusHandler</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nx">NetStatusEvent</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//根据连接返回的状态信息判断是滞连接成功
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span><span class="p">(</span><span class="nx">event</span><span class="o">.</span><span class="nx">info</span><span class="o">.</span><span class="nx">code</span><span class="o">==</span><span class="s2">&#34;NetConnection.Connect.Success&#34;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="nx">appMessage</span><span class="o">.</span><span class="nx">text</span> <span class="o">+=</span> <span class="s2">&#34;n接受连接建立成功&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">receiveNs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">NetStream</span><span class="p">(</span><span class="nx">publicNc</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Video</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span><span class="o">.</span><span class="nx">width</span> <span class="o">=</span> <span class="mi">230</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span><span class="o">.</span><span class="nx">height</span> <span class="o">=</span> <span class="mi">173</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nx">video</span><span class="o">.</span><span class="nx">attachNetStream</span><span class="p">(</span><span class="nx">receiveNs</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="nx">videoReceive</span><span class="o">.</span><span class="nx">addChild</span><span class="p">(</span><span class="nx">video</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">receiveNs</span><span class="o">.</span><span class="nx">play</span><span class="p">(</span><span class="nx">receiveName</span><span class="p">,</span><span class="s2">&#34;live&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">appMessage</span><span class="o">.</span><span class="nx">text</span> <span class="o">+=</span> <span class="s2">&#34;n&#34;</span> <span class="o">+</span><span class="nx">　event</span><span class="o">.</span><span class="nx">info</span><span class="o">.</span><span class="nx">code</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">?&gt;</span><span class="err">
</span></span></span></code></pre></div><h4 id="43-管道netconnectionconnect">4.3 管道NetConnection.connect()</h4>
<p>Flex流媒体传输通过通道传输，在NetConnection之上建立连接，由于RTMP和FMS的存在，我们可以很方便的在网络流上写入和读取流媒体信息。Net
Connection.connect()支持FMS流媒体和本地文件，官方解释如下。</p>
<blockquote>
<p>在 Flash Player 或 AIR AIR 应用程序和 Flash Media Server 应用程序之间创建双向连接,NetConnection
对象如同客户端与服务器之间的管道。</p>
<p>如果未使用 Flash Media Server，请调用 NetConnection.connect()，以便从本地文件系统或 Web</p>
</blockquote>
<p>服务器中播放视频和 MP3 文件。有关支持的编解码器和文件格式的信息，请参阅 <a href="http://www.adobe.com/go/hardware_scaling_cn">http://www.adobe.com/go/hardware_scali ng_cn</a>。</p>
<h4 id="44-flashnetnetconnection-上找不到属性-onbwdone">4.4 flash.net.NetConnection 上找不到属性 onBWDone</h4>
<p>这个问题参考<a href="http://blog.csdn.net/xiang08/archive/2009/07/13/4343551.aspx">在 flash.net.NetConnection 上找不到属性 onBWDone，且没有默认值。解决办法。 - Xiang - CSDN博客</a>，解决如下。</p>
<blockquote>
<p>在 flash.net.NetConnection 上找不到属性 onBWDone，且没有默认值。</p>
<pre tabindex="0"><code>_nc = new NetConnection();
c.addEventListener(NetStatusEvent.NET_STATUS,netStatusHandler);
c.client = this;
c.objectEncoding = ObjectEncoding.AMF0;
c.connect(&#34;rtmp://localhost/oflaDemo&#34;);
</code></pre><p>首先添加_nc.client = this.</p>
<p>然后新建一个方法：public function onBWDone():void{}</p>
<p>问题解决。</p>
</blockquote>
<h3 id="五javascript和flex的交互">五、JavaScript和Flex的交互</h3>
<p>页面上的Flex必须响应页面JavaScript的触发事件，Adboe在设计Flex时候，预留了相互调用的端口ExternalInterface，详情可以Google之，类似代码如下。</p>
<pre tabindex="0"><code>if (ExternalInterface.available) {
    ExternalInterface.addCallback(&#34;initParams&#34;, initParams);
    ExternalInterface.addCallback(&#34;playSound&#34;, playSound);
} else {
    this.appMessage.text += &#34;nJS无法调用Flash，请检查Flash环境&#34;;
}
</code></pre><p>但是这种调用方法存在着一个致命的问题：创建一个swf的Object，当对这个swf做隐藏/显示的时候(display:none,display:block)
的时候，swf的所有的注册的javascritp函数都会被干掉(ExternalInterface.addCall方法)。这个是Flex的一个BUG，现在也
还没有解决。</p>
<p>相关讨论可以参见<a href="http://rwl6813021.javaeye.com/blog/236344">Javascript无法访问Flex问题~ - rwl6813021 - JavaEye技术网站</a>，文中详细讨论了这个问题，并给出一个解决方案。</p>
<p>有一个折中的方案：即通过LocationConnection(本地通讯,利用两个swf来进行交互)来处理，初始化一个调用的client
swf，负责调用被隐藏的swf中的方法，这样就避开了直接通过javascript调用被隐藏的swf中的方法。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="c1">//1：client 发送端:
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">private</span> <span class="n">var</span> <span class="n">ucallswfconn</span><span class="o">:</span><span class="n">LocalConnection</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">function</span> <span class="nf">init</span><span class="o">():</span><span class="kt">void</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">ucallswfconn</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LocalConnection</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//注册Javascritp方法，网页调用该flex的方法，通过该方法中转，调用另外一个flex的方法
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">ExternalInterface</span><span class="o">.</span><span class="na">addCallback</span><span class="o">(</span><span class="s">&#34;selectCallControl&#34;</span><span class="o">,</span><span class="n">flexSelectCallControl</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">function</span> <span class="nf">flexSelectCallControl</span><span class="o">(</span><span class="n">method</span><span class="o">:</span><span class="n">String</span><span class="o">,</span><span class="n">param</span><span class="o">:</span><span class="n">String</span><span class="o">):</span><span class="kt">void</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//Alert.show(method+param);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">//调用另外一端swf中的方法，参数：1:receiver端监听的服务名称 2:方法名称 3:参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">ucallswfconn</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="s">&#34;ucallexternconn&#34;</span><span class="o">,</span><span class="s">&#34;&#34;</span><span class="o">+</span><span class="n">method</span><span class="o">,</span><span class="s">&#34;&#34;</span><span class="o">+</span><span class="n">param</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//2：receiver 接收端：
</span></span></span><span class="line"><span class="cl"><span class="c1">//add by polarbear, 2008.09.04, 本地通讯
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="o">.</span><span class="na">ucallexternConn</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LocalConnection</span><span class="o">();</span>
</span></span><span class="line"><span class="cl"><span class="k">this</span><span class="o">.</span><span class="na">ucallexternConn</span><span class="o">.</span><span class="na">allowDomain</span><span class="o">(</span><span class="s">&#34;*&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="n">ucallexternConn</span><span class="o">.</span><span class="na">client</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="k">try</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">this</span><span class="o">.</span><span class="na">ucallexternConn</span><span class="o">.</span><span class="na">connect</span><span class="o">(</span><span class="s">&#34;ucallexternconn&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">error</span><span class="o">:</span><span class="n">ArgumentError</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">trace</span><span class="o">(</span><span class="s">&#34;连接失败&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><p>注意被调用的函数必须是public的。</p>
<p>我使用这个方法并没有成功，最后我采用的是将视频画面直接放在界面上（很丑，不得已为之）。上文的解决方案只是给出一个思路，感兴趣的话可以自己试试。</p>
<h3 id="六last">六、Last</h3>
<p>其实还有很多细节地方可以讲讲，我就不一一展开了。整理的文章就是这样，也没什么花样和娱乐，我都懒得加图片了~</p>
<p>祝大家周末愉快，最近我睡眠很不好，每天6点就醒了，中午补个觉去……</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>AzaAjaxChat笔记-框架</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-frame/</link>
      <pubDate>Thu, 12 Aug 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-frame/</guid>
      <description>1个月没有动PHP了，新装的系统甚至还没有配置PHP环境，今天看到BooguNote上有一个boo是专门记录AzaAjaxChat开发时候遇到的问题和解决办 法。于是把一些东西整理记录一下。 1. 从ThinkPHP开始 最早的AzaAjaxChat是基于ThinkPHP的，我当时在OpenSouce上看到ThinkPHP的介绍，有很多优点，看的我很心动：MVC模型，Ajax 支持，详细的文档和案例，国人开发</description>
      <content:encoded><![CDATA[<p>1个月没有动PHP了，新装的系统甚至还没有配置PHP环境，今天看到BooguNote上有一个boo是专门记录AzaAjaxChat开发时候遇到的问题和解决办
法。于是把一些东西整理记录一下。</p>
<h3 id="1-从thinkphp开始">1. 从ThinkPHP开始</h3>
<p>最早的AzaAjaxChat是基于ThinkPHP的，我当时在OpenSouce上看到ThinkPHP的介绍，有很多优点，看的我很心动：MVC模型，Ajax
支持，详细的文档和案例，国人开发的框架。我作为一个PHP新人一下子就被他吸引住了，决定用ThinkPHP做框架。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201008/thinkphp.png" alt="image"  />

</p>
<p>随着系统开发的推进，我却感觉到一些不自在，遇到一些问题却找不好太好的解决办法。比如ThinkPHP的模块和分组两个概念，让我比较疑惑，花费了大量时间重组目录
结构，两种方法各有优劣，让我很难选择（有选择了反而难办了 ^_^）。</p>
<p>最让我恼火的是相对目录带来的路径混乱，在JSP开发中，静态内容习惯性放在webcontent文件夹中，而ThinkPHP的CSS、图片、JS引用让我很疑惑，
要区分App的和Model的静态文件。</p>
<p>在开发过程中，我也遇到过框架本身的Bug，让我对这个框架失去信心。在这里我没有贬低ThinkPHP或者ThinkPHP开发者的意思，他们的&quot;大道至简、开发由
我&quot;的理念很值得欣赏。只是作为初学者因为遇到的一些问题，带来了一定的开发难度，不得已放弃。</p>
<h3 id="2-选择cakephp">2. 选择CakePHP</h3>
<p>在遇到数次挫折之后，我终于下定决心换框架。工作室之前有过一个项目是用CakePHP开发的，保存着一些资料，阿贵强烈推荐CakePHP。我Google了几篇框
架的评测文章后，考虑了一下AzaAjaxChat的规模，决定选择CakePHP。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201008/cakephp.png" alt="image"  />

</p>
<p>CakePHP的脚手架(Scaffold)功能让我眼前一亮，让我脱离了大量CRUD繁琐的操作。而Cake Bake可以方便的根据数据库生成php代码，减少那
些没有逻辑意义的代码。AzaAjaxChat的定位是毕业设计，不是强健的产品，不会苛求太高的用户体验和安全特性，所以这个功能帮了我很多忙。</p>
<p>CakePHP能够处理关系型数据库之间的m-n关系，由于我的系统逻辑简单，并没复杂的多表操作，所以这里没有深究。从Cake
Baker的生成代码菜单上应该能够看出CakePHP还是能够处理一定的多表关联问题。</p>
<p>CakePHP也不是那么十全十美，最麻烦的是文档少，我指的是中文文档，英文资源还是比较丰富的。其次是对Ajax的支持不如ThinkPHP那么原生，我一开始使
用JSON方案，后来使用XML方案实现Ajax数据序列化。</p>
<h3 id="3-cakephp--thinkphp">3. CakePHP &amp; ThinkPHP</h3>
<p>使用的框架最大的目的是提高效率，大幅度缩短工作时间，这两个框架都是为此而诞生的。我这里不说孰优孰劣，如果感兴趣，可以Google查看相关比较。这两个框架都使
用Ruby On Rails的Active
Record理念进行开发，CakePHP更是被称为PHP版的RuR，我在编码中期还特意去图书馆查阅了RuR的相关资料，的确是高效的Web开发模型。</p>
<p>Active Record释义</p>
<blockquote>
<p>ActiveRecord也属于ORM层，由Rails最早提出，遵循标准的ORM模型：表映射到记录，记录映射到对象，字段映射到对象属性。配合遵循的命名和配
置惯例，能够很大程度的快速实现模型的操作，而且简洁易懂。</p>
</blockquote>
<p>我在答辩的PPT中写选择CakePHP的原因有三：一站式的MVC框架、约定优于配置、更少的代码，其实这也是RuR的优势。</p>
<h3 id="4-相关连接">4. 相关连接</h3>
<ul>
<li>
<p><a href="http://plod.popoever.com/archives/001110.html">Plod: [翻译]十款PHP开发框架横向比较  </a></p>
</li>
<li>
<p><a href="http://blog.chinaunix.net/tag.php?q=CakePHP">ChinaUnix一位网友写的CakePHP入门（我觉得比官方教材好上手）  </a></p>
</li>
<li>
<p><a href="http://hi.baidu.com/zsj1029/blog/item/8fa55e19502e6e4e42a9ad8c.html">cakephp jquery ajax json_天知道_百度空间（CakePHP的Ajax操作方法）  </a></p>
</li>
<li>
<p><a href="http://hi.baidu.com/thinkinginlamp/blog/category/cakephp%20%26%2347%3B%20zendframework/index/0">老王的技术手册_博客_cakephp / zendframework_百度空间（挺多CakePHP相关资料）  </a></p>
</li>
<li>
<p><a href="http://www.ibm.com/developerworks/cn/opensource/os-php-cake/">IBM developerWorks 中国 : 使用 CakePHP 快速打造 Web 站点（IBM的CakePHP教程）  </a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>IE XML 缓存问题</title>
      <link>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</link>
      <pubDate>Wed, 02 Jun 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</guid>
      <description>明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。 PS:之前已经有过3篇相关毕设的文章： [CakePHP的全局变量 ](http://log4d.com/2010/05/cakephp-global-variables) [FMS的80端口占用 ](http://log4d.com/2010/05/fms-80-port-used) [SWFObject 一款JavaScript的Flash检测与插入模块 ](http://log4d.com/2010/05/swfobject) &amp;mdash;- 正文开始 &amp;mdash;- 问题背景 系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即</description>
      <content:encoded><![CDATA[<p>明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。</p>
<p>PS:之前已经有过3篇相关毕设的文章：</p>
<p>[CakePHP的全局变量</p>
<p>](<a href="http://log4d.com/2010/05/cakephp-global-variables">http://log4d.com/2010/05/cakephp-global-variables</a>)</p>
<p>[FMS的80端口占用</p>
<p>](<a href="http://log4d.com/2010/05/fms-80-port-used">http://log4d.com/2010/05/fms-80-port-used</a>)</p>
<p>[SWFObject 一款JavaScript的Flash检测与插入模块</p>
<p>](<a href="http://log4d.com/2010/05/swfobject">http://log4d.com/2010/05/swfobject</a>)</p>
<p>&mdash;- 正文开始 &mdash;-</p>
<h2 id="问题背景">问题背景</h2>
<p>系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即时生成的。当用FireFox或者Chro
me请求时候都能获得正确的数据，而IE则常常出现无法获取实时的XML数据。</p>
<p>而如果在地址栏中填入 http://localhost/AzaAjaxChat/src/Chat/getXml?messageId=41
这个原始的XML文件地址，就可以获取正确的XML文件。并且在下次IE 的 HTTPRequest请求时候就正常了。看来问题出在IE自身的缓存上面。</p>
<h2 id="解决方法">解决方法</h2>
<h3 id="1使用url参数随机事件">1.使用URL参数随机事件</h3>
<p>在AJAX请求的页面后加个随机函数,我们可以使用随机时间函数，在javascript发送的URL后加上t=Math.random()。</p>
<p>当然，不是直接把t=Math.random()拷贝到URL后面,应该像这样:</p>
<pre><code>url = url + &quot;&amp; amp;&quot; + &quot;t=&quot; + Math.random();
</code></pre>
<h3 id="2修改header缓存时间">2.修改Header缓存时间</h3>
<p>在XMLHttpRequest发送请求之前加上 XMLHttpRequest.setRequestHeader(&ldquo;If-Modified-
Since&rdquo;,&ldquo;0&rdquo;)。一般情况下,这里的 XMLHttpRequest 不会直接使用。</p>
<p>你应该可以找到这样的代码</p>
<p>XXXXX.send(YYYYYY);</p>
<p>那么,就把它变成</p>
<p>XXXXX.setRequestHeader(&ldquo;If-Modified-Since&rdquo;,&ldquo;0&rdquo;);</p>
<p>XXXXX.send(YYYYYY);</p>
<h2 id="a-sample">a Sample</h2>
<p>我选择的是第一种方法，我觉得这种更为直观。我的具体代码如下（使用jQuery）：</p>
<pre><code>jQuery.get(&quot;http://localhost/AzaAjaxChat/src/Chat/getXml&quot;, {
	messageId: aacGlobal.currentMessageId,
	version: Math.random()
}, getRemoteDataCallBack);
</code></pre>
]]></content:encoded>
    </item>
    
    <item>
      <title>SWFObject 一款JavaScript的Flash检测与插入模块</title>
      <link>https://blog.alswl.com/2010/05/swfobject/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/05/swfobject/</guid>
      <description>今天开始AzaAjaxChat的视频聊天模块，拖FMS的福，实现起来很轻松，不过后来在JavaScript和Flash的交互上遇到了问题。 Flash在各个浏览器中的实现始终是个麻烦的事情，什么Object Embed~，似乎没有什么标准的格式，一般都要做一些浏览器Hack，我对这些深痛恶绝，在 泡了一下午前端相关的论坛后，偶然发现一款JavaScript交互的神器。 SWFObject: 基于Javascript的Flas</description>
      <content:encoded><![CDATA[<p>今天开始AzaAjaxChat的视频聊天模块，拖FMS的福，实现起来很轻松，不过后来在JavaScript和Flash的交互上遇到了问题。</p>
<p>Flash在各个浏览器中的实现始终是个麻烦的事情，什么Object Embed~，似乎没有什么标准的格式，一般都要做一些浏览器Hack，我对这些深痛恶绝，在
泡了一下午前端相关的论坛后，偶然发现一款JavaScript交互的神器。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201005/swfobject_logo.gif" alt="image"  />

</p>
<h2 id="swfobject-基于javascript的flash媒体版本检测与嵌入模块">SWFObject: 基于Javascript的Flash媒体版本检测与嵌入模块</h2>
<p>SWFObject是一个用于在HTML中方面插入Adobe Flash媒体资源（*.swf文件）的独立、敏捷的JavaScript模块。该模块中的JavaS
cript脚本能够自动检测PC、Mac机器上各种主流浏览器对Flash插件的支持情况。它使得插入Flash媒体资源尽量简捷、安全。而且它是非常符合搜索引擎优
化的原则的。此外，它能够避免您的 HTML、XHTML中出现object、embed等非标准标签，从而符合更加标准。</p>
<p>（即：通过text/html应答页面， 而非application/xhtml+xml）</p>
<p>官方在Google Project Host中，下载的代码包中有一个简单的Example，也包含了SWFObject的源码，感兴趣的同学可以研究一下。</p>
<p>相关链接：</p>
<p>[swfobject - Project Hosting on Google Code</p>
<p>](<a href="http://code.google.com/p/swfobject">http://code.google.com/p/swfobject</a>)</p>
<p>[SWFObject中文的帮助文档</p>
<p>](<a href="http://www.awflasher.com/flash/articles/swfobj.htm">http://www.awflasher.com/flash/articles/swfobj.htm</a>)</p>
<p>如果你也像我这样为Flash发愁，不妨试试这个小巧的js~</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>CakePHP的全局变量</title>
      <link>https://blog.alswl.com/2010/05/cakephp-global-variables/</link>
      <pubDate>Mon, 17 May 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/05/cakephp-global-variables/</guid>
      <description>毕业设计AzaAjaxChat 中有一个功能，记录当前在线用户，直观的看，用Application对象就可以解决。 忙了一会发现，原来PHP没有Application对象这个概念，于是我想到了全局变量，噩梦便开始了。（Application 和全局变量其实完全不是同一个概念） 我使用的框架是CakePHP，查找资料后，找到了几种CakePHP中使用全局变量的方法。 一、使用bootstrap.php文件 在a</description>
      <content:encoded><![CDATA[<p>毕业设计AzaAjaxChat 中有一个功能，记录当前在线用户，直观的看，用Application对象就可以解决。</p>
<p>忙了一会发现，原来PHP没有Application对象这个概念，于是我想到了全局变量，噩梦便开始了。（Application
和全局变量其实完全不是同一个概念）</p>
<p>我使用的框架是CakePHP，查找资料后，找到了几种CakePHP中使用全局变量的方法。</p>
<h3 id="一使用bootstrapphp文件">一、使用bootstrap.php文件</h3>
<p>在app/config 下面，有一个bootstrap文件，从名字就可以看出，这个是在控制器之前加载的文件，根据官方的描述，有下面几个用法。</p>
<blockquote>
<ul>
<li>定义方便的函数</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>注册全局常量</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>定义新增的控制器，视图，控制器路径</li>
</ul>
</blockquote>
<p>通过这个文件可以实现全局变量的声明。</p>
<pre><code>if (!isset ($globalAAC)) {
	global $globalAAC;
	$globalAAC = array (
		'currentMessageId' =&gt; -1,
		'onlineUsers' =&gt; array()
	);
}
</code></pre>
<p>在其他文件中就可以调用这个全局变量了。</p>
<h3 id="二通过configure-类">二、通过Configure 类</h3>
<p>Configure类是CakePHP用来进行配置文件的地方，通过write() 和read()方法，也能实现全局变量的读写操作。</p>
<pre><code>Configure::write('Aac.currentMessageId', -1);
Configure::read('Aac.currentMessageId');
</code></pre>
<p>其中，还有一个使用Configure的偏门方法，我从 [Need to share global variables throughout your app? » Debuggable Ltd](<a href="http://debuggable.com/posts/need-to-share-global-">http://debuggable.com/posts/need-to-share-global-</a>
variables-throughout-your-app:480f4dd5-6f64-4c88-812d-46d5cbdd56cb) 看到的。</p>
<pre><code>$config =&amp; Configure::getInstance();
$config-&gt;myVariable = 'Hello World';
</code></pre>
<p>$config =&amp; Configure::getInstance();</p>
<p>debug($config-&gt;myVariable);</p>
<p>其实就是通过引用操作Configure 类内部的getInstance() 方法，看源码就能看出来。</p>
<h3 id="三关于类似application-对象的全局变量">三、关于类似Application 对象的全局变量</h3>
<p>以上两种方法都没错，都可以操作全局变量，但是我却都操作失败了，为此我折腾了整整一天。</p>
<p>我甚至一度把错误归结到CakePHP，后来才发现，原来我冤枉它了。问题的根本是在于，这个全局变量根本不是我所想的那个Application 对象。</p>
<p>什么是Application 对象？Application 对象用于存储和访问来自任何页面的变量，类似于 session
对象。不同之处在于，所有的用户分享一个 Application 对象，而 session 对象和用户的关系是一一对应的。</p>
<p>在翻阅PHP资料之后，我终于在ChinaUNIX找到一些蛛丝马迹 <a href="http://bbs.chinaunix.net/viewthread.php?tid=79537">全局变量，在多个页面的可以使用吗？ - Php - ChinaUnix.net</a>
。文中一位读者给了很肯定的回答&quot;php中没有基于整个网站的全局变量，一般用数据库什么的替代方案。&quot;。</p>
<p>我再检查一个基于PHP的聊天系统，果然是通过数据库的 online_users来实现在线用户的保存。</p>
<p>吃亏吃在用传统的Java思想做PHP，并且PHP接触时间太短，以后学习的时候必须多用用心了~</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
