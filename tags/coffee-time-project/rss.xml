<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Coffee-Time-Project on Log4D</title>
    <link>https://blog.alswl.com/tags/coffee-time-project/</link>
    <description>Recent content in Coffee-Time-Project on Log4D</description>
    <generator>Hugo -- 0.134.2</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 18 Nov 2012 22:31:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/coffee-time-project/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KuKu-一个 Weekend Project</title>
      <link>https://blog.alswl.com/2012/11/kuku/</link>
      <pubDate>Sun, 18 Nov 2012 22:31:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2012/11/kuku/</guid>
      <description>&lt;p&gt;一个小小的 Weekend Project，基于 &lt;a href=&#34;http://webpy.org/&#34;&gt;web.py&lt;/a&gt;。
代码在 &lt;a href=&#34;https://github.com/alswl/kuku&#34;&gt;alswl / kuku&lt;/a&gt; ，很简陋，属于差不多能用阶段。&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201211/kuku.png&#34; alt=&#34;Kuku&#34;  /&gt;


&lt;/p&gt;
&lt;p&gt;基于以下原因开发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;想把服务器去 PHP 化，以前的 &lt;a href=&#34;https://upload.log4d.com/&#34;&gt;upload.log4d.com&lt;/a&gt; 是基于 PHP 的，
详情请见 &lt;a href=&#34;http://log4d.com/2012/05/image-host/&#34;&gt;使用独立图床子域名&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;刚买的 &lt;a href=&#34;http://www.linode.com/?r=7e51a136a0eca06c5f6474373f616bbdaa2b5b6c&#34;&gt;Linode VPS&lt;/a&gt;，终于从 128MB 内存解放出来了，赶紧放个 Python 程序跑跑。&lt;/li&gt;
&lt;li&gt;想些 Python 了，手痒，想看看写这么简单的功能需要多长时间，
弥补上次没能参加黑客马拉松的遗憾。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KuKu 的发音是我家乡话的「看看」。&lt;/p&gt;
&lt;p&gt;KuKu 中比较有趣的地方是，用了 &lt;a href=&#34;http://foundation.zurb.com/&#34;&gt;Foundation&lt;/a&gt; 这个流式 Web 前端框架，
用了 &lt;a href=&#34;http://www.zurb.com/playground/foundation-icons&#34;&gt;Foundation Icons Fonts&lt;/a&gt;，将 js 库全部托管在 &lt;a href=&#34;https://developers.google.com/speed/libraries/&#34;&gt;Google Hosted Libaries&lt;/a&gt;
和 &lt;a href=&#34;http://cdnjs.com&#34;&gt;cdnjs&lt;/a&gt; 上。&lt;/p&gt;
&lt;p&gt;这篇文章我看着都觉得水。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>一个小小的 Weekend Project，基于 <a href="http://webpy.org/">web.py</a>。
代码在 <a href="https://github.com/alswl/kuku">alswl / kuku</a> ，很简陋，属于差不多能用阶段。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201211/kuku.png" alt="Kuku"  />


</p>
<p>基于以下原因开发：</p>
<ul>
<li>想把服务器去 PHP 化，以前的 <a href="https://upload.log4d.com/">upload.log4d.com</a> 是基于 PHP 的，
详情请见 <a href="http://log4d.com/2012/05/image-host/">使用独立图床子域名</a>。</li>
<li>刚买的 <a href="http://www.linode.com/?r=7e51a136a0eca06c5f6474373f616bbdaa2b5b6c">Linode VPS</a>，终于从 128MB 内存解放出来了，赶紧放个 Python 程序跑跑。</li>
<li>想些 Python 了，手痒，想看看写这么简单的功能需要多长时间，
弥补上次没能参加黑客马拉松的遗憾。</li>
</ul>
<p>KuKu 的发音是我家乡话的「看看」。</p>
<p>KuKu 中比较有趣的地方是，用了 <a href="http://foundation.zurb.com/">Foundation</a> 这个流式 Web 前端框架，
用了 <a href="http://www.zurb.com/playground/foundation-icons">Foundation Icons Fonts</a>，将 js 库全部托管在 <a href="https://developers.google.com/speed/libraries/">Google Hosted Libaries</a>
和 <a href="http://cdnjs.com">cdnjs</a> 上。</p>
<p>这篇文章我看着都觉得水。</p>
]]></content:encoded>
    </item>
    <item>
      <title>dbevent2gc v0.1发布</title>
      <link>https://blog.alswl.com/2011/11/dbevent2gc-v0-1-released/</link>
      <pubDate>Fri, 25 Nov 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/11/dbevent2gc-v0-1-released/</guid>
      <description>&lt;p&gt;重要通知：Log4D的域名由 &lt;a href=&#34;http://dddspace.com&#34;&gt;http://dddspace.com&lt;/a&gt; 迁移到
&lt;a href=&#34;http://log4d.com&#34;&gt;http://log4d.com&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;订阅地址现在改为 &lt;a href=&#34;http://log4d.com/feed&#34;&gt;http://log4d.com/feed&lt;/a&gt; 和
&lt;a href=&#34;http://feeds.feedburner.com/dddspace&#34;&gt;http://feeds.feedburner.com/dddspace&lt;/a&gt;
。（FeedBurner的地址未发生变化）&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;&lt;a href=&#34;http://feed.dddspace.com&#34;&gt;http://feed.dddspace.com&lt;/a&gt;&lt;/strike&gt; 弃用&lt;/p&gt;
&lt;p&gt;请订阅我博客的朋友更新一下订阅地址。&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201111/dbevent2gc.png&#34; alt=&#34;dbevent2gc&#34;  /&gt;


&lt;/p&gt;
&lt;h2 id=&#34;关于dbevent2gc&#34;&gt;关于dbevent2gc&lt;/h2&gt;
&lt;p&gt;A application to sync douban.com events to Google Calendar.&lt;/p&gt;
&lt;p&gt;dbevent2gc是一个GAE应用，它将豆瓣同城的活动同步到Google Calendar的日历， 允许用户订阅活动而知道最近几周周边将发生活动。&lt;/p&gt;
&lt;p&gt;dbevent2gc是基于Python/web.py/mako/iCalendar的，源代码地址在
&lt;a href=&#34;https://github.com/alswl/dbevent2gc&#34;&gt;https://github.com/alswl/dbevent2gc&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;p&gt;目前dbevent2gc运行在GAE上面，地址是 &lt;a href=&#34;http://dbevent2gc.appspot.com&#34;&gt;http://dbevent2gc.appspot.com&lt;/a&gt; （墙外）
&lt;a href=&#34;http://dbevent2gc.log4d.com/&#34;&gt;http://dbevent2gc.log4d.com/&lt;/a&gt; （我做的本地反向代理）
登录这个地址可以选择需要订阅的城市和活动类型，然后会生成一个按钮， 点击这个按钮可以直接将选择的活动订阅到Google日历。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>重要通知：Log4D的域名由 <a href="http://dddspace.com">http://dddspace.com</a> 迁移到
<a href="http://log4d.com">http://log4d.com</a> 。</p>
<p>订阅地址现在改为 <a href="http://log4d.com/feed">http://log4d.com/feed</a> 和
<a href="http://feeds.feedburner.com/dddspace">http://feeds.feedburner.com/dddspace</a>
。（FeedBurner的地址未发生变化）</p>
<p><strike><a href="http://feed.dddspace.com">http://feed.dddspace.com</a></strike> 弃用</p>
<p>请订阅我博客的朋友更新一下订阅地址。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201111/dbevent2gc.png" alt="dbevent2gc"  />


</p>
<h2 id="关于dbevent2gc">关于dbevent2gc</h2>
<p>A application to sync douban.com events to Google Calendar.</p>
<p>dbevent2gc是一个GAE应用，它将豆瓣同城的活动同步到Google Calendar的日历， 允许用户订阅活动而知道最近几周周边将发生活动。</p>
<p>dbevent2gc是基于Python/web.py/mako/iCalendar的，源代码地址在
<a href="https://github.com/alswl/dbevent2gc">https://github.com/alswl/dbevent2gc</a></p>
<h2 id="使用方法">使用方法</h2>
<p>目前dbevent2gc运行在GAE上面，地址是 <a href="http://dbevent2gc.appspot.com">http://dbevent2gc.appspot.com</a> （墙外）
<a href="http://dbevent2gc.log4d.com/">http://dbevent2gc.log4d.com/</a> （我做的本地反向代理）
登录这个地址可以选择需要订阅的城市和活动类型，然后会生成一个按钮， 点击这个按钮可以直接将选择的活动订阅到Google日历。</p>
<p>如果你无法翻墙，可以使用 [http://dbevent2gc.appspot.com/event/location/beijing?type=all](h
ttp://dbevent2gc.appspot.com/event/location/beijing?type=all) 这样的地址添加到你的Google
Calender里面。</p>
<p>接受的参数：</p>
<ul>
<li>城市（把最后的beijing替换成你想要的城市拼音， 更多城市拼音查看<a href="http://www.douban.com/location/world/?others=true">这里</a></li>
<li>活动类型 type，支持all, commonweal, drama, exhibition, film, music, others, party, salon, sports, travel. 可选参数,默认为all</li>
</ul>
<h2 id="安装方法">安装方法</h2>
<p>如果想自己搭建GAE应用，也很简单，直接使用 <code>git://github.com/alswl/dbevent2gc.git</code> 就可以获取最新代码，
然后嘛去GAE注册一个应用，上传即可运行了。</p>
<p>dbevent2gc看上去可以用了，我昨晚发布了v0.1版本。</p>
<p>感兴趣的同学可以试试，现在的问题是获取的活动可能太多了，<strike>我后期会加上过滤功能</strike>（update
2011-11-26，我已经添加了活动类型选择功能）。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
