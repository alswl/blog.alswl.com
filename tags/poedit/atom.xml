<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>poedit on Log4D</title><link>https://blog.alswl.com/tags/poedit/</link><description>Recent content in poedit on Log4D</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 03 Jun 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/poedit/atom.xml" rel="self" type="application/rss+xml"/><item><title>Cakephp的国际化和poEdit的使用</title><link>https://blog.alswl.com/2010/06/cakephp-localization-internationalization-and-usage-of-poedit/</link><pubDate>Thu, 03 Jun 2010 00:00:00 +0800</pubDate><guid>https://blog.alswl.com/2010/06/cakephp-localization-internationalization-and-usage-of-poedit/</guid><description>原文出处：在Cakephp中使用i18n本地化程序，并使用poedit编辑语言文件 | 程序如此灵动！
alswl: 官方的帮助手册都没有这篇文章来的详细，太赞了。这篇文章不仅介绍了CakePHP的使用，更多的介绍了PoEdit的使用，图文并茂，着实详细，感谢原作者苏南。
&amp;mdash;&amp;ndash; 以下为原文 &amp;mdash;&amp;ndash;
Cakephp的很强大的i18n功能就是用来实现本地化和国际化的。他通过使用语言配置文件使得程序能够很好的适应变化进行本地化。通过新建locale/chi/ LC_MESSAGES/default.po文件，并指定语言选项为&amp;quot;chi&amp;quot;实现。本文中说的就是如何实现这个本地化过程，当然本文中的poedit并不是必须的 ，但是他可以使得工作效率更高。
一、关于i18n和L10n 这2个东东其实头一次我看到的时候也是一头雾水，但是经过百度的一通搜索，得出的结论就是，不管是几个n，最终的目的就是实现程序本地化就好了，说白了，就是由很多的 语言配置文件，反正我是这么理解的。大家也可以去看看，[http://baike.baidu.com/view/372835.htm](http://baik e.baidu.com/view/372835.htm) 这里有很详细的说明。
二、在Cakephp里面，实现本地化的方法 目前为止，有2种配置方法。
2.1 方法一 在config/core.php中使用configure::write来制定语言文件。
Configure::write(&amp;lsquo;Config.language&amp;rsquo;,&amp;ldquo;chi&amp;rdquo;);
2.2 方法二 官方说明：http://book.cakephp.org/view/162/Localizing-Your- Application
貌似很复杂的说哦。
App::import('Core', 'l10n'); class TestsController extends AppController{ $name=&amp;quot;Tests&amp;quot;; function test_function(){ $this-&amp;gt;L10n-&amp;gt;new L10n(); $this-&amp;gt;L10n-&amp;gt;get(&amp;quot;chi&amp;quot;); ..... } } 2.3 做上边设置改动后需要做的： 当然在上面做修改后，还需要修改对应的ctp文件等哦，
所有的直接输出字符串，没有返回值的地方像这样：
__(``&amp;quot;english&amp;quot;``);
间接输出字符串，有返回的地方：
__(``&amp;quot;english&amp;quot;``,``true``);
还有input要加个label来使他出现中文。
(&amp;ldquo;english&amp;rdquo;);echo $form-&amp;gt;input(&amp;rsquo;name&amp;rsquo;,array(&amp;rsquo;label&amp;rsquo;=&amp;gt;(&amp;rsquo;name&amp;rsquo;,true)));
2.4 最最重要的一步 就是要编辑这个文件了，locale/chi/LC_MESSAGES/default.po。中间的chi就是语言文件的标志位了。这个文件的格式也很简单，
msgid &amp;ldquo;Chinese&amp;rdquo;
msgstr &amp;ldquo;中国话&amp;rdquo;
这个的简单重复就行了。
三、使用poedit 使用poedit不是必须的，但是可以使工作变得简单的多。官方网站是：[http://www.poedit.net/](http://www.poedit.n et/)
他的主要功用就是使得编辑语言配置文件更加方便和快捷。下面是使用poedit的一些简单的截图和说明。
3.1 头一次使用需要选择界面语言 3.2 新建一个配置文件，就是我们的目的文件po文件了 工程信息这里当然要选择好utf8格式了
路径这里的基本路径填写cakephp的目录，当然这里居然没有浏览功能，真是崩溃。</description></item><item><title>Fusion汉化Mo/Po文件beta</title><link>https://blog.alswl.com/2009/08/fusion-chinese-mo-po-document-beta/</link><pubDate>Sat, 01 Aug 2009 00:00:00 +0800</pubDate><guid>https://blog.alswl.com/2009/08/fusion-chinese-mo-po-document-beta/</guid><description>一直很喜欢Fusion这个主题，所以前段时间在对Fusion的文件做汉化。关于更多Top中文主题，《[WordPress的中文主题](http://log4 d.com/2009/07/chinese-theme-wordpress)》
Fusion: 汉化了82%，其他一些文字我不知道怎么表达，而且似乎界面上用的不多，基本上已经可以用了。
汉化文件： Fusion汉化文件
使用方法： 将下载的lang文件重的&amp;quot;zh_CN.mo&amp;quot;和&amp;quot;zh_CN.po&amp;quot;文件解压缩到Fusion主题的lang包中，启用主题即可。
关于Mo/Po文件： .mo文件是可以被WordPress直接读取的语言文件，但是不利于阅读，而.po文件可以用文本编辑器打开。通过一些软件可以讲.po文件编译成.mo文件，如果 po2mo，还有我使用的Poedit，保存po文件时候自动会编译为mo文件。
传送门：PoEdit下载</description></item></channel></rss>