<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>java on Log4D</title>
    <link>https://blog.alswl.com/tags/java/</link>
    <description>Recent content in java on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 22 Mar 2014 18:31:55 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/java/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 运行参数调整</title>
      <link>https://blog.alswl.com/2014/03/java-options/</link>
      <pubDate>Sat, 22 Mar 2014 18:31:55 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2014/03/java-options/</guid>
      <description>JVM 在线上运行的时候，可以调整一些运行参数，查看参数帮助如下： 运行 java -h 可以看到 Java 运行可调整的参数。 运行 java -X 可以查看 Java 支持的额外参数。 注意一些参数的默认开启在 JDK6 和 JDK7 之间会有差异，甚至在 JDK7 的不同 update 也会有差异，运行 java -XX:+PrintFlagsFinal 查看默认的参数配置。 参考： Java HotSpot VM Options The most complete list of -XX options for Java JVM Tuning JVM Garbage Collection for Production Deployments JVM -XX: 参数介绍 以下是一些经验调整： -d64 # 运行在 64 位数据模式下 -server # 选择 server VM -Xms1024m # 初始堆大小，直接固定到 Xmx -Xmx1024m # 最大堆大小，根据服务器</description>
    </item>
    
    <item>
      <title>Maven 下 Jetty 启动</title>
      <link>https://blog.alswl.com/2011/04/run-jetty-in-maven/</link>
      <pubDate>Mon, 04 Apr 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/04/run-jetty-in-maven/</guid>
      <description>部门最近开发的产品使用的开发服务器是 Jetty（挂载在 GWT 中），启动方法是通过 Eclipse 的 External Tool 执行。我对此表示很好奇，特意在自己电脑下面组建了一个 Jetty 开发环境，发现 Maven 和 Jetty 合作起来非常愉快，现在小记之。 准备 Maven 配置文件 我使用 Maven 推荐的标准 webapp 结构，结构如下，官方文档可以参考 Maven - Introduction to the Standard Directory Layout src/main/java Application/Library sources src/main/resources Application/Library resources src/main/filters Resource filter files src/main/assembly Assembly descriptors src/main/config Configuration files src/main/webapp Web application sources src/test/java Test sources src/test/resources Test resources src/test/filters Test resource filter files src/site Site LICENSE.txt Project&amp;rsquo;s license NOTICE.txt Notices and attributions required by libraries that the project depends on README.txt Project&amp;rsquo;s readme 使用的 pom.xml 主要添加了 build- plugins 的 Jetty 插</description>
    </item>
    
    <item>
      <title>在Eclipse中使用Maven</title>
      <link>https://blog.alswl.com/2011/03/maven-eclipse/</link>
      <pubDate>Fri, 18 Mar 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/03/maven-eclipse/</guid>
      <description>一提到Eclipse中使用Maven，都会想到m2eclipse这个插件。其实在Ecli pse下使用Maven不用插件也能完成，我们只需要使用bin/mvn下面的mvn即可。 3分钟Maven Maven官方提供了[Getting Started in 5 Minutes](http://maven.apache.org/guides /getting-started/maven-in-five-minutes.html)和[Getting Started in 30 Minutes](http://maven.apache.org/guides/getting- started/index.html)两种教程，我这</description>
    </item>
    
    <item>
      <title>最近在学的技术</title>
      <link>https://blog.alswl.com/2010/04/recent-study-technologys/</link>
      <pubDate>Sun, 18 Apr 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/04/recent-study-technologys/</guid>
      <description>根据这篇日志的题目，必然是一篇水文，我思量再三，还是把它放出来，这些技术的接触把我带入了另一个广阔的天堂。这是我学Java以来的第二个里程碑。 使用Java1年半，1年前开始JSP编程，一直是我和周围的朋友自己摸索，学校没有开Java课，也没有参加什么培训课程，面对庞大的Java开源分支，我一直摸索 ，不能登堂入室。 万分感谢倪经理这1个月来的教导，他给了我一个不一样的Java。 iBatis 如果说Hibernat</description>
    </item>
    
    <item>
      <title>管理WebLogic服务</title>
      <link>https://blog.alswl.com/2010/03/manage-weblogic-service/</link>
      <pubDate>Sat, 06 Mar 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/03/manage-weblogic-service/</guid>
      <description>注册WebLogic成 windows服务 1、执行Domain目录下的 installService.cmd [USER_NAME] [PASSWORD]命令，就会在windows服务中生成一个beasvc domainname_adminservername的服务启动类型为&amp;quot;自动&amp;quot;，手动将它设置为启动就可以每次开机自动启动了。 2、在创建新的域的时候有这个选项的，服务名字为beasvc domainname-servername。 删除WebL</description>
    </item>
    
    <item>
      <title>DWR2.0在JDK1.4下的配置</title>
      <link>https://blog.alswl.com/2010/03/dwr2-0-jdk1-4-configuration/</link>
      <pubDate>Mon, 01 Mar 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/03/dwr2-0-jdk1-4-configuration/</guid>
      <description>服务器的WebLogic版本是8.1，使用自带的JDK1.4 MyEclipse版本是6.6，项目文件的Compiler compliance level设置为1.4 MyEclipse自带Tomcat使用MyEclipse6.6自带的JDK5 开发时候系统运行无误。 部署到应用服务器之后，使用WebLogic自带的JDK1.4，登录之后的一些页面一旦访问，会导致服务器报错停止。我检查了一下错误信息。 &amp;ldquo;ListenThread.Default&amp;rdquo; listening on port 7001, ip address .&amp;gt; DWR Version 2.0.5 starting. Servlet</description>
    </item>
    
    <item>
      <title>Java笔记 使用反射来改进BaseDao</title>
      <link>https://blog.alswl.com/2009/11/note-the-use-of-java-reflection-to-improve-the-basedao/</link>
      <pubDate>Tue, 17 Nov 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/11/note-the-use-of-java-reflection-to-improve-the-basedao/</guid>
      <description>关于反射 反射的定义（via Wiki）：在计算机科学中，反射是指一种特定类型的计算机程序能够在运行时以一种依 赖于它的代码的抽象特性和它的运行时行为的方式被更改的特性。用比喻来说，那种程式能够&amp;quot;观察&amp;ldquo;并且修改自己的行为。 Java中的反射示例如下： package dddspace.job.exercise1116; public class Foo { public void fun(String str) { System.out.println(str); } } package dddspace.job.exercise1116; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; public class ReflectionDemo { public static void main(String[] args) throws SecurityException, NoSuchMethodException, ClassNotFoundException, InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException { // 不使用反射 Foo foo = new Foo(); foo.fun(&amp;ldquo;no reflection&amp;rdquo;); // 使用反射 String className = &amp;ldquo;dddspace.job.exercise1116.Foo&amp;rdquo;; String funName = &amp;ldquo;fun&amp;rdquo;; // 获取类</description>
    </item>
    
    <item>
      <title>Java入门好书《Java JDK6学习笔记》</title>
      <link>https://blog.alswl.com/2009/11/getting-started-with-java-books-java-jdk6-study-notes/</link>
      <pubDate>Mon, 16 Nov 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/11/getting-started-with-java-books-java-jdk6-study-notes/</guid>
      <description>《Java JDK6学习笔记》(via 豆瓣，via ChinaPub)是我最近在看的一本书。虽然名为Java学习笔记，其实** 深入浅出的讲解了Java这门语言。书中的语言颇有白文风格**，适合没有语言基础的同学学习，也适合对一些概念不清楚的开发人员。 我很快的翻阅了半本书，作者的范例代码简单精要(&amp;ldquo;Java笔记split/不定长度参数/泛型类型通配符&amp;rdquo;中示例代码就是改编自本书)。</description>
    </item>
    
    <item>
      <title>Java笔记 split/不定长度参数/泛型类型通配符</title>
      <link>https://blog.alswl.com/2009/11/java-notes-_split-variable-length-parameter-generic-type-wildcard/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/11/java-notes-_split-variable-length-parameter-generic-type-wildcard/</guid>
      <description>今天看了一下午《Java学习笔记》，作者林信良，花名良葛格。从书中所获颇 多，正所谓温故而知新，我就把今天的&amp;quot;新&amp;quot;总结一下，加深记忆。良葛格也提倡&amp;quot;在网上写文章是我记录所学的一种方式&amp;quot;。 split的正则式和其中的正则式 C语言其中有函数strtok，就是按某些char对字符串进行切割。下面给出一个C下面的范例 char str[] = &amp;quot;now # is the time for all # good men to come to the # aid of their country&amp;quot;; char delims[] = &amp;quot;#&amp;quot;; char</description>
    </item>
    
    <item>
      <title>DAO的设计-使用泛型来避免重复DAO</title>
      <link>https://blog.alswl.com/2009/07/dao-design-the-use-of-generics-to-avoid-duplication-of-dao/</link>
      <pubDate>Fri, 10 Jul 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/07/dao-design-the-use-of-generics-to-avoid-duplication-of-dao/</guid>
      <description>DAO的全称是Data Access Object数据访问接口。数据访问：顾名思义就是与数据库打交道。夹在业务逻辑与数据库资源中间。 我大二时候写的一个小型管理系统，那时候老师开始强调分层和MVC的思想，当时我将DAO层分了开来，把所有与数据库的交互操作封装成对应的DAO类，这样最大的好处 是实现了封装和隔离，方便系统的迁移和重构。 分层、封装、接口化是一种基本的解决思路，无论是TCP/IP协议族，还是软件工程，都是</description>
    </item>
    
    <item>
      <title>贴吧小结报告</title>
      <link>https://blog.alswl.com/2009/07/summary-report-of-post-bar/</link>
      <pubDate>Thu, 02 Jul 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/07/summary-report-of-post-bar/</guid>
      <description>终于完成了这个贴吧系统，虽然还有很多地方不完善，但是却包含了我很多心血和精力，也实践了我的很多想法。 具体的不说了，稍微说一下开发使用的技术：Java、Struts2、Hibernate、OGNL、Eclipse、Tomcat、MySQL、AJAX、jQue ry、SVN、UP开发模式、UML。 之中学习了很多内容，我恨兴奋，说起来这是我第一个完整写的一个网站系统，之前的asp啊，asp.NET多多少少</description>
    </item>
    
    <item>
      <title>再谈s:if的使用</title>
      <link>https://blog.alswl.com/2009/06/return-s-if-the-use-of/</link>
      <pubDate>Sun, 28 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/return-s-if-the-use-of/</guid>
      <description>上次遇到过&amp;lt;s:if&amp;gt;的问题，费了好久才弄好，这次又遇到，有了一点新的体验。 &amp;lt;s:if test=&amp;quot;&amp;quot;&amp;gt;中的判断，如果是数字判断一般都没有问题，问题会在字符串时候凸显出来。 尤其是中文字符串，几乎没有能够通过的，上一次是曲线救国，用了true和false着两个英文，如果非得用中文怎么办？ 其实使用&amp;lt;s:if test=&amp;lsquo;str==&amp;ldquo;中文&amp;rdqu</description>
    </item>
    
    <item>
      <title>贴吧中期进度汇报</title>
      <link>https://blog.alswl.com/2009/06/affixed-to-it-the-progress-report-on-the-medium-term/</link>
      <pubDate>Sat, 27 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/affixed-to-it-the-progress-report-on-the-medium-term/</guid>
      <description>查看sql更新版本，我才发现这个项目已经做了将近2个月了。 之前一个多月都是我有空就做做，一边要写OpenSSL的模型，还要应付平时学习和考试，最近的1个星期，才开始全身心投入的，使这个项目变成了一个课程设计，但决不 止于课程设计。 由于鸡鸡的加入，而且对原先设计的一些不满意，我用UP的方式重新对系统进行了设计，从用例到实际类图，都重新设计并加以重构。 这是一个很有意义的过程，我花了很多时间在UML的使用</description>
    </item>
    
    <item>
      <title>校内踩踩小工具v0.1</title>
      <link>https://blog.alswl.com/2009/06/xiaoneicaicai-gadget-v0-1/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/xiaoneicaicai-gadget-v0-1/</guid>
      <description>明天要考数据库应用了，今天仍然忍不住把校内踩踩小工具写完。 上次被打击了，人家刷人气的工具是建立一个平台进行互踩，但是安全性存在问题。我自己写的这个小东西能在校内限制范围内刷50个相同区域的页面(校内限制次数是100 ，可以执行两次，以后再执行就必须到网页输入验证码)，然后通过他人回踩来提高人气。 纯粹是自己写着玩，几乎没有什么应用价值，不过既然写了这么久，也就放上来，大家把玩一下。 压缩包内两个文件，一</description>
    </item>
    
    <item>
      <title>校内小工具告一段落</title>
      <link>https://blog.alswl.com/2009/06/xiaonei-gadgets-come-to-an-end/</link>
      <pubDate>Fri, 12 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/xiaonei-gadgets-come-to-an-end/</guid>
      <description>这段时间在写校内小工具，开心农场小外挂，刷刷人气的小外挂。 结果开心农场的FramKey改了算法，由时间参数改为flash中(5, 3)这点RGB颜色，而且返回的JSON也重新加密了。我对AS3不懂，而且破解算法也不是我强项，就暂停开心农场外挂的开发。 想把这个工具转为校内刷人气的，原理就是访问大量用户，可能会有一定几率其他用户回访。这个不难写，我只要用爬虫去爬就可以获得大量相关用户，但是爬着爬着，发现</description>
    </item>
    
    <item>
      <title>使用XOM类库对Java对象进行序列化</title>
      <link>https://blog.alswl.com/2009/06/xom-class-library-to-use-java-objects-serialization/</link>
      <pubDate>Wed, 10 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/xom-class-library-to-use-java-objects-serialization/</guid>
      <description>校内工具需要保存用户名和帐号，我就想把帐号信息作为一个XiaoneiUser类，然后对其进行对象持久化。 Google下的方法有好几种方法进行持久化，JDOM， DOM4J, SAX等。我看了之后，感觉都比较麻烦，我个人比较喜欢使用jdk自带的工具，但是查阅jdk api之后，感觉使用 javax.xml.* 下工具开发更加困难。 我仅仅是需要对一个简单的对象进行持久化来保存数据，并不需要太多太复杂的功能。最后我决定使用《Thinking in</description>
    </item>
    
    <item>
      <title>java.net.*操作session/GET/POST方法</title>
      <link>https://blog.alswl.com/2009/06/java-net-operation-session-get-post-method/</link>
      <pubDate>Tue, 09 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/java-net-operation-session-get-post-method/</guid>
      <description>终于又考完一门试，开始做课程设计了，结果课程设计给工作室一个尾气3个月的项目，而这次的先用我写的贴吧放上去，我变得暂时空闲了，开始着手写校内开心农场小工具- 全能拖拉机。 首先要解决的就是校内登录的问题，那就是Get/Post方法了，还有用户状态保存，就是session的操作。Java不同于C#，那位可以集成系统 的浏览器或者之间创建一个Browser。 开始写了自己的第一个版本。 import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.net.MalformedURLException; import java.net.ProtocolException; import java.net.URL;</description>
    </item>
    
    <item>
      <title>Mp3Lrc的可执行文件</title>
      <link>https://blog.alswl.com/2009/05/the-executable-file-mp3lrc/</link>
      <pubDate>Tue, 26 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/the-executable-file-mp3lrc/</guid>
      <description>早上把代码输出成了Runnable Jar，生成一个jar格式的文件，只要是有JavaSE的电脑都可以运行了。 当然，不是双击运行，进入CMD，然后进入jar文件所在文件夹，运行＂java -jar Mp3Lrc.jar＂ 就会出来提示输入Mp3根目录和歌词根目录，把两个目录输入就可以运行了。 猛击这里下载Mp3Lrc.rar 这个程序是自己用的，可能存在Bug，由于会操作文件，请在使用前备份重要资料（虽然根本没有删</description>
    </item>
    
    <item>
      <title>Java写的Mp3歌词复制器</title>
      <link>https://blog.alswl.com/2009/05/lyrics-written-in-java-replicator-mp3/</link>
      <pubDate>Mon, 25 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/lyrics-written-in-java-replicator-mp3/</guid>
      <description>大家可能会遇到这样的情况，Mp3里有很多歌，电脑上也有很多相同的歌，但是有歌词。把歌词同步到Mp3播放器非常麻烦，我以前用千千静听导入目录，然后逐个播放，或 者用一个软件从网上搜索到Mp3播放器。 千千静听或者其他播放器都会有一个选项是设置歌词存储位置的，一般来说，我们听过的歌都是会自动下载歌词到这个文件夹，其实 我们完全可以不必大费周折去找lrc，只要把这个歌词文件夹和Mp3播放器同步就可以了。 以前就</description>
    </item>
    
    <item>
      <title>Struts2中Ajax的使用</title>
      <link>https://blog.alswl.com/2009/05/struts2-in-the-use-of-ajax/</link>
      <pubDate>Sat, 23 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/struts2-in-the-use-of-ajax/</guid>
      <description>贴吧1.0差不多可以完成了，进入界面美化，我服务器验证写完之后，开始用jQuery写js。 使用了jQuery的UI，后来想加入Ajax验证，但是遇到了问题： 09-05-23 07:53 WARN [org.apache.struts2.dispatcher.Dispatcher] - Could not find action or result There is no Action mapped for namespace / and action name AjaxLogin. - [unknown location] 我整整找了一个多小时，曾以为是action name的问题或者是package name, package namespace 的问题，为此我特意重新学习了一下他们的使用方法，但是仍然没有效果。 最后，终于在Google找到了一些资料： struts2 json</description>
    </item>
    
    <item>
      <title>乱码之战</title>
      <link>https://blog.alswl.com/2009/05/battle-of-garbled/</link>
      <pubDate>Fri, 22 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/battle-of-garbled/</guid>
      <description>今天重新设计了贴吧的数据库，参考了WordPress的无外键，设置default的值，我取消了两个外键，仅保留一个对应CategoryId的外键。 修改数据库时候发现MySQL的charset还是&amp;rsquo;latin&amp;rsquo;，就顺手修改成&amp;rsquo;utf-8&amp;rsquo;来保证统一，结果就出事了。 因为我修改了DAO，单元测试之后重新走一遍网页测试流程，结果发帖时候遇到乱码。 一回生两回熟</description>
    </item>
    
    <item>
      <title>Struts2的s:if标签的Bug和曲线使用</title>
      <link>https://blog.alswl.com/2009/05/struts2-tags-the-curve-of-the-bug-and-the-use-of/</link>
      <pubDate>Thu, 21 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/struts2-tags-the-curve-of-the-bug-and-the-use-of/</guid>
      <description>贴吧的用户状态显示，登录和未登录应该是不同的div显示，我决定用做标签。 本来应该很简单的事情，却没有我预想中的情形出现，检查后发现失效了，代码如下： &amp;lt;li&amp;gt;${session.userName}欢迎你&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;Logout.action&amp;quot;&amp;gt;注销&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; Struts2的官方文档中标签库介绍写的很清楚，官</description>
    </item>
    
    <item>
      <title>Eclipse中开发的Jave EE项目在Tomcat的部署</title>
      <link>https://blog.alswl.com/2009/05/eclipse-in-the-development-of-jave-ee-projects-in-the-deployment-of-tomcat/</link>
      <pubDate>Wed, 20 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/eclipse-in-the-development-of-jave-ee-projects-in-the-deployment-of-tomcat/</guid>
      <description>贴吧最基本的功能写完了，正好可以应付数据库设计课的实验。于是我准备把贴吧的项目从Eclipse的开发环境中移植出来，在Tomcat中进行部署。 也许是习惯了Eclipse提供的便利，这个小小的移植，居然难倒了我，直接把Eclipse里的PostBar考出，根本不能运行，直接报404错误。Google 上也没有提供详细的步骤，也许大家都觉得这个问题很简单吧，呵呵。 我琢磨了一会，终于整理出了头绪。 1.修改</description>
    </item>
    
    <item>
      <title>OGNL中的操作符</title>
      <link>https://blog.alswl.com/2009/05/ognl-operators-in/</link>
      <pubDate>Sun, 10 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/ognl-operators-in/</guid>
      <description>&amp;lt;s:textfield name=&amp;ldquo;loginName&amp;rdquo; value=&amp;quot;%{#request.loginNames}&amp;quot;/&amp;gt; 使用此表达式，会生成一个文本框，并且，如果request.attribute中有loginNames属性，将会做为些文本框的默认值。 如果只使用#request.loginNames在struts2的标签内部，是不会显示任何值的，注意外面加上的%{}附号，才会被正常的使用。 如果希望如EL语言一样直接输出文件，如在一个之间的innerHTML文本为#request.loginNames的值，我们</description>
    </item>
    
    <item>
      <title>一个Action提交的问题</title>
      <link>https://blog.alswl.com/2009/05/to-submit-the-issue-of-an-action/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/to-submit-the-issue-of-an-action/</guid>
      <description>贴吧在提交帖子时候必须提供贴吧分类id categoryId，但是怎么把这个id提交到PostAction就比较麻烦了，在jsp页面中我试了好多办法，尝试使 用param和hidden（baidu用的hidden）标签，但是都不能读出cagegory.jsp页面的categoryId值。 最后我索性用试所有的表达式 &amp;lt;s:hidden name=&amp;quot;topicCategoryId&amp;quot; value=&amp;quot;%{#categoryId}&amp;quot; /&amp;gt; &amp;lt;s:hidden name=&amp;quot;topicCategoryId&amp;quot; value=&amp;quot;#categoryId&amp;quot; /&amp;gt; &amp;lt;s:hidden name=&amp;quot;topicCategoryId&amp;quot; value=&amp;quot;%{categoryId}&amp;quot; /&amp;gt; 最后一个果然有效。。。 貌似记得这是OPGL表达式？****</description>
    </item>
    
    <item>
      <title>乱码！又见乱码！</title>
      <link>https://blog.alswl.com/2009/05/garbled-see-also-garbled/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/garbled-see-also-garbled/</guid>
      <description>今天解决了贴吧发帖的问题，可以正确的发送到正确的分类了。 随后遇到的问题是发帖完毕返回 Category.action 时候，无法读取争取的贴吧分类数据，经过在 struts.xml 里的Category.action 里的 result 后面的url加入参数，可以读取正确categoryId了 本来想在result中加入param元素而不是在url后面加 ？categoryId=0来实现，但是尝试了好久，Google和官方文档都没有什么解决方案 其中遇到的一个问题是「&amp;a</description>
    </item>
    
    <item>
      <title>Struts2的编码问题</title>
      <link>https://blog.alswl.com/2009/05/struts2-encoding-problem/</link>
      <pubDate>Fri, 08 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/struts2-encoding-problem/</guid>
      <description>继续昨天的编码问题 我一直全部采用UTF-8格式，而且在jUnit测试中并没有问题，说明是在Struts进行数据收集时候出错。 Google之后，根据网上一些建议修改web.xml struts.xml 但都没有效果。 网上建议在web.xml中添加 ： &amp;lt;filter&amp;gt; &amp;lt;filter-name&amp;gt;struts-cleanup&amp;lt;/filter-name&amp;gt; &amp;lt;filter-class&amp;gt;org.apache.struts2.dispatcher.ActionContextCleanUp &amp;lt;/filter-class&amp;gt; &amp;lt;/filter&amp;gt; &amp;lt;filter-mapping&amp;gt; &amp;lt;filter-name&amp;gt;struts-cleanup&amp;lt;/filter-name&amp;gt; &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt; &amp;lt;/filter-mapping&amp;gt; 来设定本地化和编码，然后在struts.xml中添加过滤器 &amp;lt;constant value=&amp;quot;UTF-8&amp;quot; name=&amp;quot;struts.i18n.encoding&amp;quot;&amp;gt;&amp;lt;/constant&amp;gt; &amp;lt;constant value=&amp;quot;UTF-8&amp;quot; name=&amp;quot;struts.locale&amp;quot;&amp;gt;&amp;lt;/constant&amp;gt; 根据我测试，都没有效果。 我检查完JSP页面编码和本地文件编码，也都不存在问题。 最后我在一</description>
    </item>
    
    <item>
      <title>解决 Null value was assigned to a property</title>
      <link>https://blog.alswl.com/2009/05/solve-the-null-value-was-assigned-to-a-property/</link>
      <pubDate>Fri, 08 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/solve-the-null-value-was-assigned-to-a-property/</guid>
      <description>晚上开始写贴吧分类，把class改成category，规避了关键字class，也显得更合理，百度的分类就是ct 然后在分类上遇到一个小问题，category_father在数据库是integer类型，可以为null，因为存在根分类，在这种情况下用Hibernate读取 Category时会产生错误 在jUnit单元测试中就通不过，错误为 org.hibernate.PropertyAccessException: Null value was assigned to a property Google后，发现Category中定义categ</description>
    </item>
    
    <item>
      <title>学习使用log4j</title>
      <link>https://blog.alswl.com/2009/05/learning-to-use-log4j/</link>
      <pubDate>Thu, 07 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/learning-to-use-log4j/</guid>
      <description>今天用Log4j时候，感觉只显示message讯息太少了，直觉上这些流行的工具应该会提供更强大的定制功能，就去google了一下 果不其然：相关配置参数如下 Pattern to output the caller&amp;rsquo;s file name and line number. %m 输出代码中指定的消息 %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL %r 输出自应用启动到输出该log信息耗费的毫秒数 %c 输出所属的类目，通常就是所在类的全名 %t 输出产生该日志事件的线程名 %n 输出一个回车换行符，</description>
    </item>
    
    <item>
      <title>贴吧进度-09-05-07</title>
      <link>https://blog.alswl.com/2009/05/post-bar-progress-09-05-07/</link>
      <pubDate>Thu, 07 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/post-bar-progress-09-05-07/</guid>
      <description>今天写到创建帖子，在编码上遇到问题，jUnit下调用函数没有任何问题，那就表示问题出在Struts Filter捕获的文本上。 找了好几个方法都没有奏效。 游客登录情况下的Session还存在一点问题，原因是session类型转换上的问题，今天还没有好好的研究一下。 至此为止，登录注册写完了，静态校验写了一个毛胚，今天写完的现实帖子的列表，表现层用OGNL完成的，终于脱离开代码混杂的页面。 解决了一个tx.</description>
    </item>
    
    <item>
      <title>No configuration found for the specified action</title>
      <link>https://blog.alswl.com/2009/05/no-configuration-found-for-the-specified-action/</link>
      <pubDate>Tue, 05 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/no-configuration-found-for-the-specified-action/</guid>
      <description>Tomcat 控制台打出如下警告： WARN - No configuration found for the specified action: ‘xxxxx’in namespace: ‘/’. Form action defaulting to ‘action’ attribute’s literal value. 主要由于在写struts2表单时有给action指定全名，如:&amp;lt;s:form action=」xxxAction.do」…&amp;gt;,直接写成&amp;lt;s:form action=」xxxAction」…&amp;gt;即可,因为在struts.xml中struts.action.exten</description>
    </item>
    
    <item>
      <title>Servlet JSP 的 Java类的最简单MVC模型</title>
      <link>https://blog.alswl.com/2009/02/servlet-jsp-s-java-type-of-the-most-simple-mvc-model/</link>
      <pubDate>Wed, 18 Feb 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/02/servlet-jsp-s-java-type-of-the-most-simple-mvc-model/</guid>
      <description>来自Head First Servlet and JSP XML语言: web.xml &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt; &amp;lt;web-app xmlns=&amp;ldquo;http://java.sun.com/xml/ns/j2ee&amp;quot; xmlns:xsi=&amp;ldquo;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;ldquo;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&amp;quot; version=&amp;ldquo;2.4&amp;rdquo;&amp;gt; &amp;ndash;&amp;gt; Ch3 Beer com.example.web.BeerSelect Ch3 Beer /SelectBeer.do HTML语言: form.html Beer Selection Page Beer Selection Page select beer characteristics Color: light amber brown dark Java语言: BeerSelect package com.example.web; import com.example.model.*; import javax.servlet.*; import javax.servlet.http.*; import java.io.*; import java.util.*; public class BeerSelect extends HttpServlet { public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { // response.setContentType(&amp;ldquo;text/html&amp;rdquo;); // PrintWriter out = response.getWriter(); // out.println(&amp;ldquo;Beer Selection Advice &amp;rdquo;); String c = request.getParameter(&amp;ldquo;color&amp;rdquo;); // out.println(&amp;quot; Got beer color &amp;quot; + c); BeerExpert be = new BeerExpert(); List result = be.getBrands(c); // Iterator it = result.iterator(); // while (it.hasNext()) // { // out.print(&amp;quot; try: &amp;quot; + it.next()); // } request.setAttribute(&amp;ldquo;styles&amp;rdquo;, result); RequestDispatcher view = request.getRequestDispatcher(&amp;ldquo;result.jsp&amp;rdquo;); view.forward(request, response); } } Java语言: BeerExpert package com.example.model; import java.util.*; public class BeerExpert { public List getBrands (String color) { List brands = new ArrayList(); if (color.equals(&amp;ldquo;amber&amp;rdquo;)) { brands.add(&amp;ldquo;Jack Amber&amp;rdquo;); brands.add(&amp;ldquo;Red Moose&amp;rdquo;); } else { brands.add(&amp;ldquo;Jail Pale Ale&amp;rdquo;); brands.add(&amp;ldquo;Gout Stout&amp;rdquo;); } return brands; } } Java</description>
    </item>
    
    <item>
      <title>Java中的POST引发的...</title>
      <link>https://blog.alswl.com/2009/02/java-triggered-by-the-post/</link>
      <pubDate>Thu, 05 Feb 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/02/java-triggered-by-the-post/</guid>
      <description>因为一直想写一个刷人气的工具，其中最基本的就是post方法了，然后再收集页面中的元素。今天我就开始着手写Java的POST方法。 在Java.net.*;中用URL构造地址，然后用流写入，似乎应该是很简单的方案，我却一直没成功。我百度Google了很久，参考了很多别人代码，似乎很容易实 现，可是我的一直问题，而我觉得和网上提供的一样。我的代码如下 package netStudy01; import java.io.*; import java.net.*; public class PostBaidu { public static void main(String[] args) { try { URL url = new URL(&amp;quot;[ http://localhost/xhpx_web/gradequery.asp](http://localhost/xhpx_web/gradequery .asp)&amp;quot;); try { HttpURLConnection</description>
    </item>
    
  </channel>
</rss>
