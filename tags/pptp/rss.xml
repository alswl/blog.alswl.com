<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pptp on Log4D</title>
    <link>https://blog.alswl.com/tags/pptp/</link>
    <description>Recent content in Pptp on Log4D</description>
    <generator>Hugo -- 0.128.2</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 04 Sep 2011 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/pptp/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用pptpclient连接vpn网络[译文]</title>
      <link>https://blog.alswl.com/2011/09/pptpclient/</link>
      <pubDate>Sun, 04 Sep 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/09/pptpclient/</guid>
      <description>最近在ddwrt配置vpn，参考了arch的pptpclient配置文档[Microsoft VPN client setup with pptpclien t](https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl ient)，同时顺便花了一点时间翻译成中文，正文如下（使用wiky.js转换pe diawiki到html，原文会有更多的wiki模板样式便于查看，有问题请参照原文）。 pptpclient是一个实现Microsoft PPTP协议的程序。因此它能够被用来接入另一个Microsoft VPN网络，比如学</description>
      <content:encoded><![CDATA[<p>最近在ddwrt配置vpn，参考了arch的pptpclient配置文档[Microsoft VPN client setup with pptpclien
t](<a href="https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl">https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl</a>
ient)，同时顺便花了一点时间翻译成中文，正文如下（使用<a href="https://github.com/tanin47/wiky.js">wiky.js</a>转换pe
diawiki到html，原文会有更多的wiki模板样式便于查看，有问题请参照原文）。</p>
<p>pptpclient是一个实现Microsoft PPTP协议的程序。因此它能够被用来接入另一个Microsoft VPN网络，比如学校和单位。</p>
<h3 id="安装pptpclient">安装PPTPClient</h3>
<p>pptpclient由安装包pptpclient提供，运行下列命令可以安装：</p>
<h1 id="pacman--s-pptpclient">pacman -S pptpclient</h1>
<h3 id="配置">配置</h3>
<p>你需要从网络管理员获取以下信息来配置pptpclient:</p>
<ul>
<li>VPN服务器的ip或者域名</li>
<li>VPN隧道名称</li>
<li>Windows域（不是所有网络都需要）</li>
<li>VPN用户名</li>
<li>VPN密码</li>
</ul>
<h2 id="编辑配置文件">编辑配置文件</h2>
<p>用你称手的编辑器打开/etc/ppp/options.pptp。这个文件为你的VPN连接启用了一系列默认安全设置。如果你连接时候出现问题，你可以自定义配置。
你的options.pptp文件最少需要包含以下内容：</p>
<pre><code>lock
noauth
nobsdcomp
nodeflate
</code></pre>
<h2 id="编辑密码文件">编辑密码文件</h2>
<p>下一步，打开或者创建/etc/ppp/chap-
secrets。我们将在这个文件里面存储你的密码，记得修改权限让除root之外所有用户不能访问它。这个文件的格式如下：</p>
<pre><code>&lt;DOMAIN&gt;\&lt;USERNAME&gt; PPTP &lt;PASSWORD&gt; *
</code></pre>
<p>如果你的服务器不要求域，则配置如下：</p>
<pre><code>&lt;USERNAME&gt; PPTP &lt;PASSWORD&gt; *
</code></pre>
<p>替换掉上文中范例中的占位符。注意，如果你的密码包含特殊字符，比如&quot;$&quot;，你需要用双引号把它们包起来。</p>
<h2 id="命名你的vpn隧道">命名你的VPN隧道</h2>
<p>用你称手的编辑器创建类似/etc/ppp/peers/的文件，把这里替换成你的VPN连接名。这个文件设置之后看起来如下：</p>
<pre><code>pty &quot;pptp &lt;SERVER&gt; --nolaunchpppd&quot;
name &lt;DOMAIN&gt;\&lt;USERNAME&gt;
remotename PPTP
require-mppe-128
file /etc/ppp/options.pptp
ipparam &lt;TUNNEL&gt;
</code></pre>
<p>{{Note|跟刚才一样，如果你的连接不要求域，忽略范例中的&quot;&quot;}} {{Note|PPTP远程主机使用Chap-Secrets文件中的}}</p>
<p>是VPN服务器的地址，是你所属的域，是你将要用来连接服务器的用户名，是连接的名称。</p>
<p>{{Note|如果你不需要使用MPPE，你应当从/etc/ppp/options.pptp中移除require-mppe-128这个选项}}</p>
<p>创建你的连接</p>
<p>用root执行以下命令来确保配置是正确的： # pon $TUNNEL debug dump logfd 2 nodetach
如果一切都配置好了，pon命令应当不会自动结束。一旦你感觉差不多OK了，就可以终止这个命令。 {{Note|另一个用来确保配置正确的命令是ifconfig
-a，看看里面时候有一个名叫ppp0的新驱动，并且还是可用的}} 执行以下命令来连接VPN隧道： # pon
是你之前命名过的VPN隧道名称。注意使用root命令执行。</p>
<h2 id="配置路由">配置路由</h2>
<p>一旦你成功连接上VPN，你就可以和VPN服务器交互了。当然在此之前，咱们需要添加一个新的路由到你的路由表，从而可以接入远程网络。</p>
<p>{{Note|根据你的环境配置，你可能需要每次都重复添加路由信息}}</p>
<p>你可以阅读<a href="http://pptpclient.sourceforge.net/routing.phtml">PPTP Routing Howto</a>来获得更
多如何添加路由的信息，里面还有很多范例。</p>
<h2 id="选择路由">选择路由</h2>
<p>对我来说，只有传输到VPN网络的数据包才应该走VPN连接，所以我添加如下路由条目： # route add -net 192.168.10.0
netmask 255.255.255.0 dev ppp0 这将路由所有目的地址为191.168.10.xxx的数据到VPN连接。</p>
<h2 id="配置为默认路由">配置为默认路由</h2>
<p>如果你想要所有数据从VPN连接走，下面这条命令包你爽： # route add default dev ppp0
{{Note|所有数据从VPN连接走的话会比正常连接慢一些}}</p>
<h3 id="断开连接">断开连接</h3>
<p>下面这条命令用来断开VPN连接： # poff  是你VPN连接的名称。</p>
<h3 id="把一个vpn连接配为默认启动">把一个VPN连接配为默认启动</h3>
<p>你可以在rc.d创建一个快捷命令来实现自动在后台连接VPN网络。</p>
<p>{{Note|和平常一样，是你隧道的名字，是你加入路由表的命令。}}</p>
<pre><code>#!/bin/bash
</code></pre>
<p>. /etc/rc.conf</p>
<p>. /etc/rc.d/functions</p>
<p>DAEMON=<TUNNEL>-vpn</p>
<p>ARGS=</p>
<p>[ -r /etc/conf.d/$DAEMON ] &amp;&amp; . /etc/conf.d/$DAEMON</p>
<p>case &ldquo;$1&rdquo; in</p>
<p>start)</p>
<p>stat_busy &ldquo;Starting $DAEMON&rdquo;</p>
<p>pon <TUNNEL> updetach persist &amp;&gt; /dev/null &amp;&amp; <ROUTING COMMAND> &amp;&gt;/dev/null</p>
<p>if [ $? = 0 ]; then</p>
<p>add_daemon $DAEMON</p>
<p>stat_done</p>
<p>else</p>
<p>stat_fail</p>
<p>exit 1</p>
<p>fi</p>
<p>;;</p>
<p>stop)</p>
<p>stat_busy &ldquo;Stopping $DAEMON&rdquo;</p>
<p>poff MST &amp;&gt;/dev/null</p>
<p>if [ $? = 0 ]; then</p>
<p>rm_daemon $DAEMON</p>
<p>stat_done</p>
<p>else</p>
<p>stat_fail</p>
<p>exit 1</p>
<p>fi</p>
<p>;;</p>
<p>restart)</p>
<p>$0 stop</p>
<p>sleep 1</p>
<p>$0 start</p>
<p>;;</p>
<p>*)<br />
echo &ldquo;usage: $0 {start|stop|restart}&rdquo;</p>
<p>esac</p>
<p>注意，我们可以使用updetach和persist这两个附加命令在pon上。updetach保证pon阻塞知道连接被建立。另外一个命令persist保证网络
自动重练。如果需要开机自动启动，则添加@-vpn到rc.conf的DAEMONS中去。</p>
<h3 id="注意">注意</h3>
<p>你可以在<a href="http://pptpclient.sourceforge.net/">pptpclient website</a>查到更多关于pptpclient的配
置信息。Ubuntu的帮助手册也有一些帮助你配置的信息。这些范例能够很轻松的稍加变换从而添加到daemons中去，从而帮助你自动化运行。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
