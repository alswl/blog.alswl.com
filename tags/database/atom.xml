<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>database on Log4D</title>
    <link>https://blog.alswl.com/tags/database/</link>
    <description>Recent content in database on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 19 Nov 2012 00:06:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/database/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何让 Instagram 在一百多万用户爆炸后稳定运行</title>
      <link>https://blog.alswl.com/2012/11/keeping-instagram-up-with-over-a-million-new-users-in-twelve-hours/</link>
      <pubDate>Mon, 19 Nov 2012 00:06:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/11/keeping-instagram-up-with-over-a-million-new-users-in-twelve-hours/</guid>
      <description>原文链接：Keeping Instagram up with over a million new users in twelve hours 这周二我们发布了 Instagram for Android，反响空前强烈。 最近这几周我们一直（在基础设施方面）做负载计划，为所有可能发生的事故做准备。 尽管如此，在发布那天，最大的挑战仍然是如何快速定位问题，找到瓶颈并尽快修复他们。 在这里我们将分享一些帮助我们解决问题的工具和技术。 ##statsd## statsd 在 Instagram 很受欢迎。这是 Etsy 写的一个网络监控器， 能够统计并图形化数据。它有两种核心的统计方式：计数器和</description>
    </item>
    
    <item>
      <title>Oracle PL/SQL编程规范</title>
      <link>https://blog.alswl.com/2010/01/oracle-pl-sql-coding-standards/</link>
      <pubDate>Thu, 14 Jan 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/01/oracle-pl-sql-coding-standards/</guid>
      <description>学习PL/SQL不可避免遇到规范的问题，这里转载一篇比较精的文章。 当然，各个公司和个人有自己的风格和规范，甚至Oracle官方的教程代码也没有完全遵守这些规则，这里只是一个推荐和介绍。 来源：Oracle PL/SQL编程规范指南 - 51CTO.COM 更多参考：SQL,PL/SQL编程规范 - PL/SQL - IT民工杂谈 分割线，Google真汉子 一、PL/SQL编程规范之大小写 就像在SQL中一样，PL / SQL中是不区分大小写的。其一</description>
    </item>
    
    <item>
      <title>中国省份与城市数据SQL</title>
      <link>https://blog.alswl.com/2009/08/zhong-guo-sheng-fen-yu-cheng-shi-shu-ju-sql/</link>
      <pubDate>Sat, 22 Aug 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/08/zhong-guo-sheng-fen-yu-cheng-shi-shu-ju-sql/</guid>
      <description>本文来源：中国省份与城市数据插入 - xlx - CSDN博客 在Google找到这个，实在是爱不释手，就转过来了，很多项目都需要用到这些数据。 if exists (select * from sysobjects where id = OBJECT_ID(&#39;[province]&#39;) and OBJECTPROPERTY(id, &#39;IsUserTable&#39;) = 1) DROP TABLE [province] CREATE TABLE [province] ( [id] [int] NOT NULL, [provinceID] [nvarchar] (12) NOT NULL, [province] [nvarchar] (80) NOT NULL) ALTER TABLE [province] WITH NOCHECK ADD CONSTRAINT [PK_province] PRIMARY KEY NONCLUSTERED ( [id] )INSERT [province] ([id],[provinceID],[province]) VALUES ( 1,&amp;lsquo;110000&amp;rsquo;,&amp;lsquo;北京市&amp;rsquo;) INSERT [province] ([id],[provinceID],[province]) VALUES ( 2,&amp;lsquo;120000&amp;rsquo;,&amp;lsquo;天津市&amp;r</description>
    </item>
    
    <item>
      <title>DAO的设计-使用泛型来避免重复DAO</title>
      <link>https://blog.alswl.com/2009/07/dao-design-the-use-of-generics-to-avoid-duplication-of-dao/</link>
      <pubDate>Fri, 10 Jul 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/07/dao-design-the-use-of-generics-to-avoid-duplication-of-dao/</guid>
      <description>DAO的全称是Data Access Object数据访问接口。数据访问：顾名思义就是与数据库打交道。夹在业务逻辑与数据库资源中间。 我大二时候写的一个小型管理系统，那时候老师开始强调分层和MVC的思想，当时我将DAO层分了开来，把所有与数据库的交互操作封装成对应的DAO类，这样最大的好处 是实现了封装和隔离，方便系统的迁移和重构。 分层、封装、接口化是一种基本的解决思路，无论是TCP/IP协议族，还是软件工程，都是</description>
    </item>
    
    <item>
      <title>MySQL Command Line Client乱码问题及解决方案</title>
      <link>https://blog.alswl.com/2009/07/mysql-command-line-client-garbled-problems-and-solutions/</link>
      <pubDate>Mon, 06 Jul 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/07/mysql-command-line-client-garbled-problems-and-solutions/</guid>
      <description>以前用MySQL时候都是可视化界面，如MySQL Admin使用，现在学着使用MySQL Command Line client，初次接触，就遇到乱码问题。 乱码是中文字符串的，Google后，找到一些解决方案。摘录如下： 引用自今天去祸害哪家的闺女呢？&amp;lt;猛击这里打开&amp;gt; 1:改变数据库的默认编码配置，在MYSQL的安装目录中，找到my.ini，修改默认编 码为：default-character-set=utf8 2:建</description>
    </item>
    
    <item>
      <title>MYSQL数据类型长度常规的建库策略</title>
      <link>https://blog.alswl.com/2009/06/mysql-data-type-of-the-length-of-conventional-library-strategy/</link>
      <pubDate>Thu, 25 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/mysql-data-type-of-the-length-of-conventional-library-strategy/</guid>
      <description>无论是在小得可怜的免费数据库空间或是大型电子商务网站，合理的设计表结构、充分利用空间是十分必要的。这就要求我们对数据库系统的常用数据类型有充分的认识。下面我 就将我的一点心得写出来跟大家分享。 一、数字类型 数字类型按照我的分类方法分为三类：整数类、小数类和数字类。 我所谓的「数字类」，就是指DECIMAL和NUMERIC，它们是同一种类型。它严格的说不是一种数字类型，因为他们实际上是将数字以字符串形式保</description>
    </item>
    
    <item>
      <title>mysql 数据库导出/导入</title>
      <link>https://blog.alswl.com/2008/10/mysql-database-export-import/</link>
      <pubDate>Thu, 23 Oct 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/10/mysql-database-export-import/</guid>
      <description>正在学JSP，用的TomCat和MySQL，没有用CSV控制，所以数据库靠导出导入 导出： cd bin; mysqldump -uroot -proot xxx &amp;gt; xxx.sql; 导入： cd bin; create xxx; source xxx.sql;</description>
    </item>
    
  </channel>
</rss>
