<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>vim on Log4D</title>
    <link>https://blog.alswl.com/tags/vim/</link>
    <description>Recent content in vim on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 20 Apr 2012 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/vim/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim 下模拟 Emacs 键绑定</title>
      <link>https://blog.alswl.com/2012/04/vim-emacs-key-binding/</link>
      <pubDate>Fri, 20 Apr 2012 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/04/vim-emacs-key-binding/</guid>
      <description>Vimer 需要 Emacs 键绑定？看上去很蛋疼的需求吧。其实不然，大部分的 Shell / Readline 默认绑定的是 Emacs 键位绑定（处于输入状态下，Emacs 的键位很好用）。Vim 的模式切换很牛逼，但是 Insert 模式下面，只有寥寥几个快捷键，我修改了配置文件，绑定需要的 Emcas 按键到 Vim 中来。 Github 中搜索关键字 Vim Emcas key bind，出来一些结果，不是很完美，我又慢慢调教了几个星期，放出我的 .vimrc。 &amp;#34; 模拟 Emacs 键绑定 &amp;#34; Move inoremap &amp;lt;C-a&amp;gt; &amp;lt;Home&amp;gt; inoremap &amp;lt;C-e&amp;gt; &amp;lt;End&amp;gt; &amp;#34;inoremap &amp;lt;C-p&amp;gt; &amp;lt;Up&amp;gt; &amp;#34;inoremap &amp;lt;C-n&amp;gt; &amp;lt;Down&amp;gt; inoremap &amp;lt;C-b&amp;gt; &amp;lt;Left&amp;gt; inoremap &amp;lt;C-f&amp;gt; &amp;lt;Right&amp;gt; inoremap &amp;lt;M-b&amp;gt; &amp;lt;C-o&amp;gt;b inoremap &amp;lt;M-f&amp;gt; &amp;lt;C-o&amp;gt;w</description>
      <content:encoded><![CDATA[<p>Vimer 需要 Emacs 键绑定？看上去很蛋疼的需求吧。其实不然，大部分的 Shell / Readline 默认绑定的是 Emacs 键位绑定（处于输入状态下，Emacs 的键位很好用）。Vim 的模式切换很牛逼，但是 Insert 模式下面，只有寥寥几个快捷键，我修改了配置文件，绑定需要的 Emcas 按键到 Vim 中来。</p>
<p>Github 中搜索关键字 Vim Emcas key bind，出来一些结果，不是很完美，我又慢慢调教了几个星期，放出我的 .vimrc。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="s2">&#34; 模拟 Emacs 键绑定
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span> Move
</span></span><span class="line"><span class="cl">inoremap &lt;C-a&gt; &lt;Home&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-e&gt; &lt;End&gt;
</span></span><span class="line"><span class="cl"><span class="s2">&#34;inoremap &lt;C-p&gt; &lt;Up&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span>inoremap &lt;C-n&gt; &lt;Down&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-b&gt; &lt;Left&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-f&gt; &lt;Right&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;M-b&gt; &lt;C-o&gt;b
</span></span><span class="line"><span class="cl">inoremap &lt;M-f&gt; &lt;C-o&gt;w
</span></span><span class="line"><span class="cl"><span class="s2">&#34; Rubout word / line and enter insert mode
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span> use &lt;Esc&gt;&lt;Right&gt; instead of &lt;C-o&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-w&gt; &lt;Esc&gt;dbcl
</span></span><span class="line"><span class="cl"><span class="s2">&#34; delete
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;C-u&gt; &lt;Esc&gt;d0cl
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;C-k&gt; &lt;Esc&gt;&lt;Right&gt;C
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;C-d&gt; &lt;Esc&gt;&lt;Right&gt;s
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;M-d&gt; &lt;C-o&gt;de
</span></span></span></code></pre></div><p>需要的朋友请取用，我的 Vim 配置文件和插件在 <a href="https://github.com/alswl/.oOo.">https://github.com/alswl/.oOo.</a> 。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用 Vundle 管理 Vim 插件</title>
      <link>https://blog.alswl.com/2012/04/vundle/</link>
      <pubDate>Sat, 14 Apr 2012 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/04/vundle/</guid>
      <description>早在这个月初，我就在 Vim 的邮件列表看到了一封关于 Vim 插件管理的 邮件。 才惊呼原来有这么强大的插件可以用来管理我那一坨插件， 今天细细阅读并查了一些资料，变开始配置自己的 Vim。 几种管理插件 Vim 的插件管理工具有蛮多，比如： Vundle vim-addon-manager vpathogen.vim vvundle vvimana 一位同学自己写的 Vim-addon-manager 和 vimana 的对比，参见 Vim的插件管理工具 我最会选择了 Vundle，通过子目录管理插件，支持 Git 更新。 我其实不太喜欢子目录，觉得目录太多看着烦，但是考虑到在没有一个良好的</description>
      <content:encoded><![CDATA[<p>早在这个月初，我就在 Vim 的邮件列表看到了一封关于 Vim 插件管理的
<a href="https://groups.google.com/d/topic/vim-cn/mPES0sNT87Q/discussion">邮件</a>。
才惊呼原来有这么强大的插件可以用来管理我那一坨插件，
今天细细阅读并查了一些资料，变开始配置自己的 Vim。</p>
<h2 id="几种管理插件">几种管理插件</h2>
<p>Vim 的插件管理工具有蛮多，比如：</p>
<ul>
<li><a href="https://github.com/gmarik/vundle">Vundle</a></li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=2905">vim-addon-manager</a></li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=2332">vpathogen.vim</a></li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=3458">vvundle</a></li>
<li><a href="https://github.com/c9s/Vimana">vvimana</a></li>
<li><a href="http://www.douban.com/note/173144456/">一位同学自己写的</a></li>
</ul>
<p>Vim-addon-manager 和 vimana 的对比，参见
<a href="http://yixf.name/2011/10/26/vim%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/">Vim的插件管理工具</a></p>
<p>我最会选择了 Vundle，通过子目录管理插件，支持 Git 更新。
我其实不太喜欢子目录，觉得目录太多看着烦，但是考虑到在没有一个良好的 PKG
包描述文件的前提下，分子目录是一种简单有效的方法。</p>
<!-- more -->
<p>Vundle 通过 git 来对插件进行更新，有三种源可以添加：</p>
<ul>
<li>github 中 vim-scripts 的项目（这个账号是为 Pathogen 建的，用来建立对 Vim.org 上脚本的镜像）</li>
<li>github 某个 Vim 插件项目</li>
<li>某个 git 源</li>
</ul>
<p>以上也是我推荐的选择插件顺序，我认为没有必要去取最新的开发版插件。</p>
<h2 id="vundle-安装">Vundle 安装</h2>
<p>无二话，官方文档的 <a href="https://github.com/gmarik/vundle">Quick Start</a>
写的很详细 ，一句话：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
</span></span></code></pre></div><p>然后开始配置 .vimrc，我的 <a href="https://github.com/alswl/dotfiles/blob/master/.vimrc">.vimrc</a></p>
<p>重点是配置各种 <code>Bundle</code> 我的配置如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="c">&#34; My Bundles here:</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; vim-scripts repos</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Syntax</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;asciidoc.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;confluencewiki.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;html5.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;JavaScript-syntax&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;mako.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;moin.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;python.vim--Vasiliev&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;xml.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Color</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;desert256.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;Impact&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;matrix.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;vibrantink&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;vividchalk.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Ftplugin</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;python_fold&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Indent</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;indent/html.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;IndentAnything&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;Javascript-Indentation&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;mako.vim--Torborg&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;gg/python.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Plugin</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;The-NERD-tree&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;AutoClose--Alves&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;auto_mkdir&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;cecutil&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;fcitx.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;FencView.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;FuzzyFinder&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;jsbeautify&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;L9&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;Mark&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;matrix.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;mru.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;The-NERD-Commenter&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;project.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;restart.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;taglist.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;templates.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;vimim.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;ZenCoding.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;css_color.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;hallettj/jslint.vim&#39;</span><span class="err">
</span></span></span></code></pre></div><p>需要注意的是，Vim 插件名称可能存在重名的情况，这时候就需要在插件后面加上作者的姓氏，
比如 <code>Bundle 'Javascript-Indentation'</code> ，而遇到插件名有空格和斜杠的话，
需要将空格和斜杠替换为 <code>-</code> 。</p>
<p>执行 <code>BundleInstall</code> 即可完成安装，如果出现错误提示，多半是名称有问题，
去 github 和 vim.org 搜索一下吧。</p>
<p>更多参考：</p>
<ul>
<li><a href="http://blog.houqp.me/use-vundle-to-manage-your-plugins/">Vim插件管理利器——Vundle</a></li>
<li><a href="http://www.cnblogs.com/qiangji/archive/2011/07/31/Vundle.html">使用Vundle 来管理 Vim 插件</a></li>
</ul>
<p>ps：这篇文章使用 Markdown 写的，以前都是用 Asciidoc 写，貌似是由于 github 带动，
Mardown 自 2010 年之后使用人群猛涨，证据在此，上图是 Markdown，下图是 Asciidoc</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201204/markdown-asciidoc.png" alt="Markdown vs Asciidoc"  />


</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Vimperator的Pass through</title>
      <link>https://blog.alswl.com/2011/07/vimperator-pass-through/</link>
      <pubDate>Tue, 19 Jul 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/07/vimperator-pass-through/</guid>
      <description>作为 vim 的拥护者，我同时也喜欢使用 Vimperator 这款 Firefox 下面的插件，这款插件可以帮助实现 Firefox 的纯键盘操作。 我同时也是 GMail / Google Reader 的深度用户，他们在网页端也支持纯键盘操作，这样就和 Vimperator 产生了冲突。键盘按键事件被 Vimperator 拦截了，导致键盘操作在这些应用上面不起作用。 还好，Vimperator 提供了一种名为 Pass through 的模式，按 CTRL+Z 进入这种模式，在这种模式下面，Vimperator 将不响应键盘操作，全部放行到 Web 页面。 在某一次版本更新之后， Pass through 的</description>
      <content:encoded><![CDATA[<p>作为 vim 的拥护者，我同时也喜欢使用 Vimperator 这款 Firefox 下面的插件，这款插件可以帮助实现 Firefox 的纯键盘操作。</p>
<p>我同时也是 GMail / Google Reader 的深度用户，他们在网页端也支持纯键盘操作，这样就和 Vimperator 产生了冲突。键盘按键事件被
Vimperator 拦截了，导致键盘操作在这些应用上面不起作用。</p>
<p>还好，Vimperator 提供了一种名为 Pass through 的模式，按 <code>CTRL+Z</code> 进入这种模式，在这种模式下面，Vimperator
将不响应键盘操作，全部放行到 Web 页面。</p>
<p>在某一次版本更新之后， Pass through 的快捷键 <code>CTRL+Z</code> 似乎不起作用了，我翻遍了用户手册也没有找到解决办法。</p>
<p>就在昨天，我无意中不知道按了什么键，命令栏里面出现了 <code>IGNORE ALL KEYS (Press &lt;S-Esc&gt; or &lt;INSERT&gt; to exit)</code> 这行提示信息。在这种状态下面，我测试了 GMail 的快捷键，果然又起作用了。</p>
<p>好吧，我终于找回了丢失的 <code>CTRL+Z</code> ，新版的 Vimperator 使用 <code>Shift+Esc</code> 或者 <code>INSERT</code> 键来进入原来的 Pass
through 模式。</p>
<p>&mdash;&mdash;残念的分割线&mdash;&ndash;</p>
<p>之前按 <code>&lt;-</code> 键时候，按成了 ThinkPad 的回退键，导致文章没有保存，纠结啊。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>一个mako.vim</title>
      <link>https://blog.alswl.com/2011/06/mako-vim/</link>
      <pubDate>Thu, 09 Jun 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/06/mako-vim/</guid>
      <description>给Vim找了一个Mako的语法高亮，发现着色居然有问题。查看更新记录后发现作者Armin Ronacher只更新到08年9月份。之后Mako更新了一些少许细节，我修改了一下mako.vim，放在这里供下载。 其实我只改了57/58行，增加一个block语法。 点击这里下载：mako.vim 使用方法，放入vimfiles/syntax 相关链接： 原始mako.vim：http://www.vim.org/s</description>
      <content:encoded><![CDATA[<p>给Vim找了一个Mako的语法高亮，发现着色居然有问题。查看更新记录后发现作者<a href="http://lucumr.pocoo.org/">Armin Ronacher</a>只更新到08年9月份。之后Mako更新了一些少许细节，我修改了一下mako.vim，放在这里供下载。</p>
<p>其实我只改了57/58行，增加一个block语法。</p>
<p>点击这里下载：<a href="../../static/images/upload_dropbox/201106/mako.vim">mako.vim</a></p>
<p>使用方法，放入vimfiles/syntax</p>
<p>相关链接：</p>
<p>原始mako.vim：<a href="http://www.vim.org/scripts/script.php?script_id=1858">http://www.vim.org/scripts/script.php?script_id=1858</a></p>
<p>另外一个mako.vim是缩进用的，放入vimfiles/syntax：<a href="http://www.vim.org/scripts/script.php?script_id=2663">http://www.vim.org/scripts/script.php?script_id=2663</a></p>
<p>ps：Mako是一个Python下面的Template框架。</p>
<p>pss：貌似服务器ip被认证了，讨厌~</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>正则表达式抓捕替换</title>
      <link>https://blog.alswl.com/2011/01/regex-group-catch/</link>
      <pubDate>Wed, 19 Jan 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/01/regex-group-catch/</guid>
      <description>问题情境 需要将RDL报表里的GetComment( Parameters!F0001.Value , Parameters!F0002.Value ,&amp;ldquo;total&amp;rdquo;, Parameters!Language.Value)函数修改为GetCommentForComment( Parameters!F0001.Value , Parameters!F0002.Value ,&amp;ldquo;total&amp;rdquo;, Parameters!Language.Value, &amp;ldquo;ReportConnection0107&amp;rdquo;)。 思路 使用正则表达式里面的分组进行抓获，再用1将中间固定的参数取出，组成新的字符串。 Vim实现 %s/GetComment(((sw+!w+.w+s,){2}s*&amp;ldquo;w+&amp;ldquo;s*,sw+!w+.w+s))/GetCommentForReport(1 , &amp;ldquo;ReportConnection0107&amp;rdquo;)/gc 解释：%为全局替换，s为替换。后面则是表达式，和正则表达式</description>
      <content:encoded><![CDATA[<h2 id="问题情境">问题情境</h2>
<p>需要将RDL报表里的GetComment( Parameters!F0001.Value , Parameters!F0002.Value
,&ldquo;total&rdquo;, Parameters!Language.Value)函数修改为GetCommentForComment(
Parameters!F0001.Value , Parameters!F0002.Value ,&ldquo;total&rdquo;,
Parameters!Language.Value, &ldquo;ReportConnection0107&rdquo;)。</p>
<h2 id="思路">思路</h2>
<p>使用正则表达式里面的分组进行抓获，再用1将中间固定的参数取出，组成新的字符串。</p>
<h3 id="vim实现">Vim实现</h3>
<p>%s/GetComment(((s<em>w+!w+.w+s</em>,){2}s*&ldquo;w+&ldquo;s*,s<em>w+!w+.w+s</em>))/GetCommentForReport(1
, &ldquo;ReportConnection0107&rdquo;)/gc</p>
<p>解释：%为全局替换，s为替换。后面则是表达式，和正则表达式差不多，注意是*不需要转义，+ 和 .需要转义，最后的g代表当前行替换，c代表每次替换需要确认。</p>
<p>目标表达式中有1，代表抓获的第一个字符串，多个字符串抓获则依次往下排列。�表示原始字符串。</p>
<h3 id="notepadeditplus实现">NotePad++/EditPlus实现</h3>
<p>GetComment(( *[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *, *&quot;[a-zA-Z0-9]+&rdquo; *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *))</p>
<p>替换为GetCommentForReport(1, &ldquo;ReportConnection0107&rdquo;)</p>
<p>解释：不知道为何，我无法使用ws匹配文字和空格，只能使用[a-zA-Z0-9]表示（完整的是[a-zA-Z0-9_]）w，用空格表示s。</p>
<h3 id="visualstudio">VisualStudio</h3>
<p>由于RDL开发必然使用VisualStudio，所以用VS替换更方便。</p>
<p>GetComment({ *[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *, *&quot;[a-zA-Z0-9]+&rdquo; *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *})</p>
<p>依旧替换为GetCommentForReport(1, &ldquo;ReportConnection0107&rdquo;)</p>
<p>解释：VS除了NotePad++/EditPlus的问题外，还有一个严重的问题就是他抓取的不是分组()，而是抓获的花括号{}抓捕的字符串，官方的称呼叫做&quot;带
标记的表达式&quot;，详情可以参考<a href="http://msdn.microsoft.com/zh-cn/library/2k3te2cs.aspx">MSDN正则表达式 (Visual Studio)</a>。</p>
<h2 id="ps">PS</h2>
<p>所以咯，Vimer，你懂的~</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>将VisualStudio打造成Vim</title>
      <link>https://blog.alswl.com/2010/09/vs-vim/</link>
      <pubDate>Fri, 03 Sep 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/09/vs-vim/</guid>
      <description>背景：Vim in VisualStudio? 最近痴迷于Vim，尝试着在.net环境中（70%C#+20%ASPX+10%JS）使用Vim进行开发。但是似乎现成的Vim插件不太适应.net开发平台，在进 行调试、编译以及ASPX页面调整时候还是需要切换到VS。 内事不决问老婆，外事不决问Google，我以关键词&amp;quot;Vim C#&amp;ldquo;向G神询问，很可惜一圈一圈找下来，都没有什么有价值的答案。在StackOverlow上</description>
      <content:encoded><![CDATA[<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201009/ViEmu.jpg" alt="image"  />


</p>
<h3 id="背景vim-in-visualstudio">背景：Vim in VisualStudio?</h3>
<p>最近痴迷于Vim，尝试着在.net环境中（70%C#+20%ASPX+10%JS）使用Vim进行开发。但是似乎现成的Vim插件不太适应.net开发平台，在进
行调试、编译以及ASPX页面调整时候还是需要切换到VS。</p>
<p>内事不决问老婆，外事不决问Google，我以关键词&quot;Vim C#&ldquo;向G神询问，很可惜一圈一圈找下来，都没有什么有价值的答案。在StackOverlow上找到
了一些相关资源，其中几位资深人士（使用Vi/Vim大约20年）提到了一款叫做ViEmu的软件，就好奇的跑去看看。</p>
<h3 id="viemu">ViEmu</h3>
<p>让我们来见识一下ViEmu的厉害吧。ViEmu支持模式切换、移动、宏、高亮搜索，键盘映射、增强命令、正则表达、可视模式等等。反正常用的Vim功能都具备。它自
己也敢宣称支持Vim大部分功能（Vim太强大，不敢说完全模拟~）。下面是一张ViEmu的官方示意图。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201009/viemu-movie.gif" alt="image"  />


</p>
<p>ViEmu不但有支持VS的版本，还有支持Word &amp; Outlook &amp; SQL Server Management
Studio（SQL解析器），确实是相当强大。</p>
<p>ViEmu的收费标准是Only $99，唉，真是残酷+万恶的资本主义啊。囊中羞涩，不得不去求破解版本。功夫不负有心人，终于找到了当前最新版本ViEmu.v.
2.5.4的破解版&rdquo;<a href="http://www.52pojie.cn/viewthread.php?tid=59277">ViEmu.v.2.5.4.for.VS.Classic.CracKed-LCG - 『LCG Area』 - 吾爱破解论坛【 LCG
】 破解论坛|破解软件|加密解密|逆向工程|软件安全|病毒分析|精品软件|破解补丁|注册机|序列号|QQ|下载|Crack|Patch|Key|SN -
Powered by Discuz!</a>&quot;。（这标题真TMD长
，不过论坛够意思，不用注册即可下载）。网上还有一种破解方法（我没有试过，感兴趣可以尝试）。</p>
<blockquote>
<p>1.删除目录 C:Documents and Settings用户名Local SettingsApplication DataIdentities
{17582A9E-740A-47F2-8256-D09F1378E7FA}</p>
</blockquote>
<p>2.删除注册表项HKEY_CURRENT_USERSoftwareClassesCLSID{D31F31E1-B08F-46FF-
92C5-CA111A2053DF}</p>
<h3 id="安装失败">安装失败</h3>
<p>在公司电脑安装ViEmu没有问题，在我的机器上面（XP Sp3+VS2008+ReSharper
v4.1）却出现了重大错误。启动VS之后立刻提示&quot;ViEmu incorrectly installed, please
reinstall&quot;，卸载重装之后不起任何作用。</p>
<p>我在官方支持论坛上面找到了相关讨论<a href="http://www.viemu.com/forums/viewtopic.php?id=395">ViEmu forums / ViEmu incorrectly installed message under VS
2008</a>。作者会给所有遇到问题的人发一封邮件，包含一个
Tool，能够解决这个问题并且将时间恢复至30天，<strike>下载点击[这里](<a href="http://www.viemu.com/for-">http://www.viemu.com/for-</a>
ajsd8/XtendTest.exe)</strike>（作者发送给我时候，该链接已失效）。</p>
<p>好在我有十全大补丸，就是上文提到的那个破解包，破解之后，连带着这个莫名的问题也莫名的解决了~</p>
<h3 id="主题">主题</h3>
<p>厌倦了VisualStudio那种白底黑字加上几个蓝色函数的主题了么，想回到Geek Feel的Vim主题嘛，这里就要向你隆重推荐一个网站：Studio
Styles - Visual Studio color
schemes，里面包含了N套VS的主题，大部分是深色背景浅色文字、保护视力的背景。比如排名最高，也是我比较喜欢的<a href="http://studiostyles.info/schemes/wekeroad-ink">WekeRoad
Ink</a>。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201009/WekeRoad_Ink.jpg" alt="image"  />


</p>
<p>通过工具-导入和导出设置就可以把新主题颜色导入VS了。话说回来，真不知道VS设计团队怎么想的，需要一个一个设置不同类型的字体和颜色~~~</p>
<h3 id="相关链接">相关链接</h3>
<p><a href="http://www.viemu.com/">ViEmu: vi-vim editor emulation for Visual Studio, Word, Outlook and SQL
Server</a> ViEmu官网</p>
<p><a href="http://stackoverflow.com/questions/597077/is-learning-vim-worth-the-effort">Is learning VIM worth the effort? - Stack Overflow
</a>
CSharper怎么用Vim，老程序员的回答</p>
<p><a href="http://www.vimer.cn/">Vimer的程序世界</a> 一个Vim爱好者的Blog</p>
<p><a href="http://xbeta.info/vimperator.htm">Vimperator：VIM化的Firefox</a>
想在FireFox下脱离鼠标用Vim模式化操作么？</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Vim中缩进和空格的使用</title>
      <link>https://blog.alswl.com/2010/03/vim-indentation-and-space-config/</link>
      <pubDate>Tue, 09 Mar 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/03/vim-indentation-and-space-config/</guid>
      <description>原文链接：WindStorm的技术空间: vim中缩进与空格的设置介绍（Blog Spot） 对于使用vim的程序员来说，shiftwidth，tabstop，softtabstop绝对是经常接触的三个缩进因素。能否有方便美观的，整体化的 缩进，主要是由他们相互间的配合决定。在经过一段时间试用后，总结一下我的设置经验。 1 shiftwidth 这个是用于程序中自动缩进所使用的空白长度指示的。一般来说为了保持程序的美观，和下面的</description>
      <content:encoded><![CDATA[<p>原文链接：<a href="http://windwithstorm.blogspot.com/">WindStorm的技术空间: vim中缩进与空格的设置介绍</a>（Blog Spot）</p>
<p>对于使用vim的程序员来说，<code>shiftwidth</code>，<code>tabstop</code>，<code>softtabstop</code>绝对是经常接触的三个缩进因素。能否有方便美观的，整体化的
缩进，主要是由他们相互间的配合决定。在经过一段时间试用后，总结一下我的设置经验。</p>
<h2 id="1-shiftwidth">1 shiftwidth</h2>
<p>这个是用于程序中自动缩进所使用的空白长度指示的。一般来说为了保持程序的美观，和下面的参数最好一致。同时它也是符号移位长度的制定者。</p>
<h2 id="2-tabstop">2 tabstop</h2>
<p>定义tab所等同的空格长度，一般来说最好设置成8，因为如果是其它值的话，可能引起文件在打印之类的场合中看起来很别扭。除非你设置了
<code>expandtab</code>模式，也就是把tabs转换成空格，这样的话就不会一起混淆，不过毕竟制表符为8是最常用最普遍的设置，所以一般还是不要改。</p>
<h2 id="3-softtabstop">3 softtabstop</h2>
<p>如果我们希望改变程序中的缩进怎么办？<code>shiftwidth</code>和<code>tabstop</code>不一样的话，你会发现程序比较难看的。这时候，<code>softtabstop</code>就起作
用了。可以从vim的说明中看到，一旦设置了<code>softtabstop</code>的值时，你按下tab键，插入的是空格和tab制表符的混合，具体如何混合取决于你设定的<code>s ofttabstop</code>，举个例子，如果设定softtabstop=8, 那么按下tab键，插入的就是正常的一个制表符;如果设定
softtabstop=16,那么插入的就是两个制表符；如果softtabstop=12,那么插入的就是一个制表符加上4个空格；如果 <code>softtabsto p</code>=4呢？那么一开始，插入的就是4个空格，此时一旦你再按下一次tab，这次的四个空格就会和上次的四个空格组合起来变成一个制表符。换句话说，<code>softtab stop</code>是&quot;逢8空格进1制表符&quot;,前提是你<code>tabstop=8</code>。</p>
<h2 id="4-关于expandtab">4 关于expandtab</h2>
<p>举个例子，在多人一起开发项目时，为了使代码风格尽量保持一致，一般不允许在代码使用TAB符，而以4个空格代之。我们可以编辑一个文件，包含下面的内容：</p>
<pre><code>set shiftwidth=4
set expandtab
</code></pre>
<p>然后把下面的命令加入到.vimrc中：</p>
<pre><code>autocmd FileType c,cpp set shiftwidth=4 | set expandtab
</code></pre>
<p>就可以只在编辑c和cpp文件时实行这种设置了。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
