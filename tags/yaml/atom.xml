<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>yaml on Log4D</title>
    <link>https://blog.alswl.com/tags/yaml/</link>
    <description>Recent content in yaml on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 09 Nov 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/yaml/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一周Python小记</title>
      <link>https://blog.alswl.com/2010/11/a-week-python/</link>
      <pubDate>Tue, 09 Nov 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/11/a-week-python/</guid>
      <description>上个星期以来忙里偷闲一直在写一系列小型的代码生成器，完成一些从需求到结构化代码生成和验证作业。这个小东西是用Python写的，我简单分享一下中间所得。 一、配置文件 1、YAML格式 数据库连接信息和作业相关信息是存放在数据库中的，配置文件形式可以有很多种选择：XML / ini / txt，我这里选择YAML作为存放。 YAML使用起来相当方便，能够自动解析成对应语言中的变量，比如列表解析为列表，数字文字分别解析成</description>
    </item>
    
  </channel>
</rss>
