<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>cakephp on Log4D</title>
    <link>https://blog.alswl.com/tags/cakephp/</link>
    <description>Recent content in cakephp on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 12 Aug 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/cakephp/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AzaAjaxChat笔记-框架</title>
      <link>https://blog.alswl.com/2010/08/azaajaxchat-notes-frame/</link>
      <pubDate>Thu, 12 Aug 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/08/azaajaxchat-notes-frame/</guid>
      <description>1个月没有动PHP了，新装的系统甚至还没有配置PHP环境，今天看到BooguNote上有一个boo是专门记录AzaAjaxChat开发时候遇到的问题和解决办 法。于是把一些东西整理记录一下。 1. 从ThinkPHP开始 最早的AzaAjaxChat是基于ThinkPHP的，我当时在OpenSouce上看到ThinkPHP的介绍，有很多优点，看的我很心动：MVC模型，Ajax 支持，详细的文档和案例，国人开发</description>
      <content:encoded><![CDATA[<p>1个月没有动PHP了，新装的系统甚至还没有配置PHP环境，今天看到BooguNote上有一个boo是专门记录AzaAjaxChat开发时候遇到的问题和解决办
法。于是把一些东西整理记录一下。</p>
<h3 id="1-从thinkphp开始">1. 从ThinkPHP开始</h3>
<p>最早的AzaAjaxChat是基于ThinkPHP的，我当时在OpenSouce上看到ThinkPHP的介绍，有很多优点，看的我很心动：MVC模型，Ajax
支持，详细的文档和案例，国人开发的框架。我作为一个PHP新人一下子就被他吸引住了，决定用ThinkPHP做框架。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201008/thinkphp.png" alt="image"  />

</p>
<p>随着系统开发的推进，我却感觉到一些不自在，遇到一些问题却找不好太好的解决办法。比如ThinkPHP的模块和分组两个概念，让我比较疑惑，花费了大量时间重组目录
结构，两种方法各有优劣，让我很难选择（有选择了反而难办了 ^_^）。</p>
<p>最让我恼火的是相对目录带来的路径混乱，在JSP开发中，静态内容习惯性放在webcontent文件夹中，而ThinkPHP的CSS、图片、JS引用让我很疑惑，
要区分App的和Model的静态文件。</p>
<p>在开发过程中，我也遇到过框架本身的Bug，让我对这个框架失去信心。在这里我没有贬低ThinkPHP或者ThinkPHP开发者的意思，他们的&quot;大道至简、开发由
我&quot;的理念很值得欣赏。只是作为初学者因为遇到的一些问题，带来了一定的开发难度，不得已放弃。</p>
<h3 id="2-选择cakephp">2. 选择CakePHP</h3>
<p>在遇到数次挫折之后，我终于下定决心换框架。工作室之前有过一个项目是用CakePHP开发的，保存着一些资料，阿贵强烈推荐CakePHP。我Google了几篇框
架的评测文章后，考虑了一下AzaAjaxChat的规模，决定选择CakePHP。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201008/cakephp.png" alt="image"  />

</p>
<p>CakePHP的脚手架(Scaffold)功能让我眼前一亮，让我脱离了大量CRUD繁琐的操作。而Cake Bake可以方便的根据数据库生成php代码，减少那
些没有逻辑意义的代码。AzaAjaxChat的定位是毕业设计，不是强健的产品，不会苛求太高的用户体验和安全特性，所以这个功能帮了我很多忙。</p>
<p>CakePHP能够处理关系型数据库之间的m-n关系，由于我的系统逻辑简单，并没复杂的多表操作，所以这里没有深究。从Cake
Baker的生成代码菜单上应该能够看出CakePHP还是能够处理一定的多表关联问题。</p>
<p>CakePHP也不是那么十全十美，最麻烦的是文档少，我指的是中文文档，英文资源还是比较丰富的。其次是对Ajax的支持不如ThinkPHP那么原生，我一开始使
用JSON方案，后来使用XML方案实现Ajax数据序列化。</p>
<h3 id="3-cakephp--thinkphp">3. CakePHP &amp; ThinkPHP</h3>
<p>使用的框架最大的目的是提高效率，大幅度缩短工作时间，这两个框架都是为此而诞生的。我这里不说孰优孰劣，如果感兴趣，可以Google查看相关比较。这两个框架都使
用Ruby On Rails的Active
Record理念进行开发，CakePHP更是被称为PHP版的RuR，我在编码中期还特意去图书馆查阅了RuR的相关资料，的确是高效的Web开发模型。</p>
<p>Active Record释义</p>
<blockquote>
<p>ActiveRecord也属于ORM层，由Rails最早提出，遵循标准的ORM模型：表映射到记录，记录映射到对象，字段映射到对象属性。配合遵循的命名和配
置惯例，能够很大程度的快速实现模型的操作，而且简洁易懂。</p>
</blockquote>
<p>我在答辩的PPT中写选择CakePHP的原因有三：一站式的MVC框架、约定优于配置、更少的代码，其实这也是RuR的优势。</p>
<h3 id="4-相关连接">4. 相关连接</h3>
<ul>
<li>
<p><a href="http://plod.popoever.com/archives/001110.html">Plod: [翻译]十款PHP开发框架横向比较  </a></p>
</li>
<li>
<p><a href="http://blog.chinaunix.net/tag.php?q=CakePHP">ChinaUnix一位网友写的CakePHP入门（我觉得比官方教材好上手）  </a></p>
</li>
<li>
<p><a href="http://hi.baidu.com/zsj1029/blog/item/8fa55e19502e6e4e42a9ad8c.html">cakephp jquery ajax json_天知道_百度空间（CakePHP的Ajax操作方法）  </a></p>
</li>
<li>
<p><a href="http://hi.baidu.com/thinkinginlamp/blog/category/cakephp%20%26%2347%3B%20zendframework/index/0">老王的技术手册_博客_cakephp / zendframework_百度空间（挺多CakePHP相关资料）  </a></p>
</li>
<li>
<p><a href="http://www.ibm.com/developerworks/cn/opensource/os-php-cake/">IBM developerWorks 中国 : 使用 CakePHP 快速打造 Web 站点（IBM的CakePHP教程）  </a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Cakephp的国际化和poEdit的使用</title>
      <link>https://blog.alswl.com/2010/06/cakephp-localization-internationalization-and-usage-of-poedit/</link>
      <pubDate>Thu, 03 Jun 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/06/cakephp-localization-internationalization-and-usage-of-poedit/</guid>
      <description>原文出处：在Cakephp中使用i18n本地化程序，并使用poedit编辑语言文件 | 程序如此灵动！ alswl: 官方的帮助手册都没有这篇文章来的详细，太赞了。这篇文章不仅介绍了CakePHP的使用，更多的介绍了PoEdit的使用，图文并茂，着实详细，感谢原作者苏南。 &amp;mdash;&amp;ndash; 以下为原文 &amp;mdash;&amp;ndash; Cakephp的很强大的i18n功能就是用来实现本地化和国际化的。他通过使用语言配置文件使得程序能够很好的适应变化进行本地化。通过新</description>
      <content:encoded><![CDATA[<p>原文出处：<a href="http://newsn.net/20090525/472.html">在Cakephp中使用i18n本地化程序，并使用poedit编辑语言文件 | 程序如此灵动！</a></p>
<p>alswl:
官方的帮助手册都没有这篇文章来的详细，太赞了。这篇文章不仅介绍了CakePHP的使用，更多的介绍了PoEdit的使用，图文并茂，着实详细，感谢原作者苏南。</p>
<p>&mdash;&ndash; 以下为原文 &mdash;&ndash;</p>
<p>Cakephp的很强大的i18n功能就是用来实现本地化和国际化的。他通过使用语言配置文件使得程序能够很好的适应变化进行本地化。通过新建locale/chi/
LC_MESSAGES/default.po文件，并指定语言选项为&quot;chi&quot;实现。本文中说的就是如何实现这个本地化过程，当然本文中的poedit并不是必须的
，但是他可以使得工作效率更高。</p>
<h2 id="一关于i18n和l10n">一、关于i18n和L10n</h2>
<p>这2个东东其实头一次我看到的时候也是一头雾水，但是经过百度的一通搜索，得出的结论就是，不管是几个n，最终的目的就是实现程序本地化就好了，说白了，就是由很多的
语言配置文件，反正我是这么理解的。大家也可以去看看，[http://baike.baidu.com/view/372835.htm](http://baik e.baidu.com/view/372835.htm) 这里有很详细的说明。</p>
<h2 id="二在cakephp里面实现本地化的方法">二、在Cakephp里面，实现本地化的方法</h2>
<p>目前为止，有2种配置方法。</p>
<h3 id="21-方法一">2.1 方法一</h3>
<p>在config/core.php中使用configure::write来制定语言文件。</p>
<p>Configure::write(&lsquo;Config.language&rsquo;,&ldquo;chi&rdquo;);</p>
<h3 id="22-方法二">2.2 方法二</h3>
<p>官方说明：<a href="http://book.cakephp.org/view/162/Localizing-Your-Application">http://book.cakephp.org/view/162/Localizing-Your- Application</a></p>
<p>貌似很复杂的说哦。</p>
<pre><code>App::import('Core', 'l10n');
class TestsController extends AppController{
  $name=&quot;Tests&quot;;
  function test_function(){
    $this-&gt;L10n-&gt;new L10n();
    $this-&gt;L10n-&gt;get(&quot;chi&quot;);
    .....
  }
}
</code></pre>
<h3 id="23-做上边设置改动后需要做的">2.3 做上边设置改动后需要做的：</h3>
<p>当然在上面做修改后，还需要修改对应的ctp文件等哦，</p>
<p>所有的直接输出字符串，没有返回值的地方像这样：</p>
<p><code>__(``&quot;english&quot;``);</code></p>
<p>间接输出字符串，有返回的地方：</p>
<p><code>__(``&quot;english&quot;``,``true``);</code></p>
<p>还有input要加个label来使他出现中文。</p>
<p><strong>(&ldquo;english&rdquo;);echo $form-&gt;input(&rsquo;name&rsquo;,array(&rsquo;label&rsquo;=&gt;</strong>(&rsquo;name&rsquo;,true)));</p>
<h3 id="24-最最重要的一步">2.4 最最重要的一步</h3>
<p>就是要编辑这个文件了，locale/chi/LC_MESSAGES/default.po。中间的chi就是语言文件的标志位了。这个文件的格式也很简单，</p>
<p>msgid &ldquo;Chinese&rdquo;</p>
<p>msgstr &ldquo;中国话&rdquo;</p>
<p>这个的简单重复就行了。</p>
<h2 id="三使用poedit">三、使用poedit</h2>
<p>使用poedit不是必须的，但是可以使工作变得简单的多。官方网站是：[http://www.poedit.net/](<a href="http://www.poedit.n">http://www.poedit.n</a> et/)</p>
<p>他的主要功用就是使得编辑语言配置文件更加方便和快捷。下面是使用poedit的一些简单的截图和说明。</p>
<h3 id="31-头一次使用需要选择界面语言">3.1 头一次使用需要选择界面语言</h3>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-01.png" alt="poedit_01"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-02.png" alt="poedit_02"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-03.png" alt="poedit_03"  />

</p>
<h3 id="32-新建一个配置文件就是我们的目的文件po文件了">3.2 新建一个配置文件，就是我们的目的文件po文件了</h3>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-04.png" alt="poedit_04"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-05.png" alt="poedit_05"  />

</p>
<p>工程信息这里当然要选择好utf8格式了</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-06.png" alt="poedit_06"  />

</p>
<p>路径这里的基本路径填写cakephp的目录，当然这里居然没有浏览功能，真是崩溃。</p>
<p>注意这里要通过下面的新建按钮新建一个名为&quot;.&ldquo;的路径，这样的话，以后就可以搜索基本路径下面的子目录了。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-07.png" alt="poedit_07"  />

</p>
<p>关键字选项卡里面要填上cakephp的标志性本地化函数&rdquo;__&quot;。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-08.png" alt="poedit_08"  />

</p>
<p>当然上面那些选项卡设置好之后，还可以通过菜单类目=》设置调出来，从新设置。</p>
<h3 id="33-点击那个小地球图标或者类目自源更新开始自动扫描该翻译的文字了">3.3 点击那个小地球图标或者类目=》自源更新，开始自动扫描该翻译的文字了</h3>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-09.png" alt="poedit_09"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-10.png" alt="poedit_10"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-11.png" alt="poedit_11"  />

</p>
<h3 id="34-但是这个时候你可能会发现扫描出来的字段远远少于你需要的东东原来这个软件不认识ctp文件这个步骤的设置是让他能识别ctp文件设置文件">3.4 但是这个时候，你可能会发现扫描出来的字段远远少于你需要的东东，原来这个软件不认识ctp文件。这个步骤的设置是让他能识别ctp文件设置。文件=</h3>
<p>》首选=》解析器。</p>
<p><strong>本步骤参考了一个意大利程序员的博客文章，在此向他表示感谢先。</strong></p>
<p><a href="http://www.luizz.it/119/cakephp/poedit-e-i-file-ctp">http://www.luizz.it/119/cakephp/poedit-e-i-file-
ctp</a></p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-12.png" alt="poedit_12"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-13.png" alt="poedit_13"  />

</p>
<p>选中php，选择编辑，然后在第2行内输入ctp文件后缀，如下图，但是注意下图的设置是错误的!虽然上面的提示，是用逗号分隔，但是实践证明，用分号才是正确的选择
。这个很令人崩溃，大概是poedit的一个小bug吧。会出现错误提示。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-14.png" alt="poedit_14"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-145.png" alt="poedit_14.5"  />

</p>
<p>但是如果用分号分隔的话，仍然会看到如下错误提示。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-15.png" alt="poedit_15"  />

 需要在下面的解析器命令下面增加个选项-language=php，注意这里是两个中划线啊。所以这个步骤的要点就是下图所示了。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-16.png" alt="poedit_16"  />

</p>
<h3 id="35-这里通过那个地球图标就可以找出所有需要翻译的字段了当然这个操作的前提是你已经用__函数把所有的字段都标示好了如果你按这个图标之前进行了部">3.5 这里通过那个地球图标就可以找出所有需要翻译的字段了，当然这个操作的前提是你已经用__函数把所有的字段都标示好了。如果你按这个图标之前进行了部</h3>
<p>分翻译，这个操作如果发现了新字句，这个软件会根据以前的翻译自己翻译字句的，并用棕色突出显示它自动翻译的词语。当然，一般都是不准确的。所以还是需要进行修改保存
操作的说。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-17.png" alt="poedit_17"  />

</p>
<h3 id="36-如果这个时候你查看生成的po文件的时候比自己手写的文件确实多些设置">3.6 如果这个时候你查看生成的po文件的时候，比自己手写的文件确实多些设置。</h3>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201006/poedit-18.png" alt="poedit_18"  />

</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>CakePHP的全局变量</title>
      <link>https://blog.alswl.com/2010/05/cakephp-global-variables/</link>
      <pubDate>Mon, 17 May 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/05/cakephp-global-variables/</guid>
      <description>毕业设计AzaAjaxChat 中有一个功能，记录当前在线用户，直观的看，用Application对象就可以解决。 忙了一会发现，原来PHP没有Application对象这个概念，于是我想到了全局变量，噩梦便开始了。（Application 和全局变量其实完全不是同一个概念） 我使用的框架是CakePHP，查找资料后，找到了几种CakePHP中使用全局变量的方法。 一、使用bootstrap.php文件 在a</description>
      <content:encoded><![CDATA[<p>毕业设计AzaAjaxChat 中有一个功能，记录当前在线用户，直观的看，用Application对象就可以解决。</p>
<p>忙了一会发现，原来PHP没有Application对象这个概念，于是我想到了全局变量，噩梦便开始了。（Application
和全局变量其实完全不是同一个概念）</p>
<p>我使用的框架是CakePHP，查找资料后，找到了几种CakePHP中使用全局变量的方法。</p>
<h3 id="一使用bootstrapphp文件">一、使用bootstrap.php文件</h3>
<p>在app/config 下面，有一个bootstrap文件，从名字就可以看出，这个是在控制器之前加载的文件，根据官方的描述，有下面几个用法。</p>
<blockquote>
<ul>
<li>定义方便的函数</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>注册全局常量</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>定义新增的控制器，视图，控制器路径</li>
</ul>
</blockquote>
<p>通过这个文件可以实现全局变量的声明。</p>
<pre><code>if (!isset ($globalAAC)) {
	global $globalAAC;
	$globalAAC = array (
		'currentMessageId' =&gt; -1,
		'onlineUsers' =&gt; array()
	);
}
</code></pre>
<p>在其他文件中就可以调用这个全局变量了。</p>
<h3 id="二通过configure-类">二、通过Configure 类</h3>
<p>Configure类是CakePHP用来进行配置文件的地方，通过write() 和read()方法，也能实现全局变量的读写操作。</p>
<pre><code>Configure::write('Aac.currentMessageId', -1);
Configure::read('Aac.currentMessageId');
</code></pre>
<p>其中，还有一个使用Configure的偏门方法，我从 [Need to share global variables throughout your app? » Debuggable Ltd](<a href="http://debuggable.com/posts/need-to-share-global-">http://debuggable.com/posts/need-to-share-global-</a>
variables-throughout-your-app:480f4dd5-6f64-4c88-812d-46d5cbdd56cb) 看到的。</p>
<pre><code>$config =&amp; Configure::getInstance();
$config-&gt;myVariable = 'Hello World';
</code></pre>
<p>$config =&amp; Configure::getInstance();</p>
<p>debug($config-&gt;myVariable);</p>
<p>其实就是通过引用操作Configure 类内部的getInstance() 方法，看源码就能看出来。</p>
<h3 id="三关于类似application-对象的全局变量">三、关于类似Application 对象的全局变量</h3>
<p>以上两种方法都没错，都可以操作全局变量，但是我却都操作失败了，为此我折腾了整整一天。</p>
<p>我甚至一度把错误归结到CakePHP，后来才发现，原来我冤枉它了。问题的根本是在于，这个全局变量根本不是我所想的那个Application 对象。</p>
<p>什么是Application 对象？Application 对象用于存储和访问来自任何页面的变量，类似于 session
对象。不同之处在于，所有的用户分享一个 Application 对象，而 session 对象和用户的关系是一一对应的。</p>
<p>在翻阅PHP资料之后，我终于在ChinaUNIX找到一些蛛丝马迹 <a href="http://bbs.chinaunix.net/viewthread.php?tid=79537">全局变量，在多个页面的可以使用吗？ - Php - ChinaUnix.net</a>
。文中一位读者给了很肯定的回答&quot;php中没有基于整个网站的全局变量，一般用数据库什么的替代方案。&quot;。</p>
<p>我再检查一个基于PHP的聊天系统，果然是通过数据库的 online_users来实现在线用户的保存。</p>
<p>吃亏吃在用传统的Java思想做PHP，并且PHP接触时间太短，以后学习的时候必须多用用心了~</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
