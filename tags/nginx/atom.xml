<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>nginx on Log4D</title>
    <link>https://blog.alswl.com/tags/nginx/</link>
    <description>Recent content in nginx on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Dec 2011 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/nginx/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用MoinMoin作为个人KMS</title>
      <link>https://blog.alswl.com/2011/12/moinmoin-kms/</link>
      <pubDate>Mon, 26 Dec 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/12/moinmoin-kms/</guid>
      <description>去年9月份时候，我写过一篇《我所使用的知识管理系统》 来介绍我使用的KMS系统。当时经过我层层筛选之后，我选用了Wiz作为我的KMS。
一年多过去了，Wiz在Windows下面工作的非常不错，Wiz团队里陆续推出了iOS / Android / Web版本。我的Wiz收藏的内容也增加到近1000篇。
此时我遇到了KMS再选型的问题，原因很简单：我全线转换到Linux平台， Wiz不符合我的要求了。
我重新整理一下我要求KMS的特性：
跨平台：Linux / Web / iOS / Android / Windows 数据保存格式：移植方便，将图片保存到本地 数据采集方式：支持网络直接拷贝复制 数据索引：支持分类 + tag 协同工作：方便的分享机制 免费 经过我历时N月的搜寻筛选，MoinMoin Wiki中标了！
1. 关于MoinMoin MoinMoin是使用Python编写的Wiki实现，MoinMoin当前版本1.9。
MoinMoin的优点是：
安装简单; 支持中文全文检索； 汉化较好； 不依赖外界的数据库, 使用纯文本保存, 备份非常容易, 直接复制即可。 支持从html转换到MoinMoin Wiki格式，纯文本的wiki格式比html来的更纯粹，只保存需要的数据，而不保存冗余的样式，MoinMoin这点做的非常好，支持几乎全部html标记的转换。 2. 安装MoinMoin MoinMoin基于Python，因此安装比基于php的MediaWiki麻烦一点。
你也可以参考官方安装指导（英文），里面有 Ubuntu / CentOS / SuSE 等系统的安装方法。
2.1. 使用MoinMoin桌面版（最简单） 好在有MoinMoin下载包里面包含了简单的可执行版本，只需3个步骤就可以运行了。
下载 MoinMoin MoinMoinDownload - MoinMoin 解压缩到合适的目录（安装目录） 运行目录下面的 wikiserver.py Linux/Unix：在命令行里面运行 wikiserver.py Mac：在 wikiserver.py 上面点击右键，选择 open with... - All Applications - Always Open With - Terminal.</description>
    </item>
    
    <item>
      <title>128M内存VPS LNMP安装优化小记</title>
      <link>https://blog.alswl.com/2011/11/vps-lnmp-setup-config/</link>
      <pubDate>Sun, 06 Nov 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/11/vps-lnmp-setup-config/</guid>
      <description>重要通知：Log4D 的域名由 http://dddspace.com 迁移到 http://log4d.com 。 订阅地址现在改为 http://log4d.com/feed 和 http://feeds.feedburner.com/dddspace 。（FeedBurner 的地址未发生变化）
这一次域名迁移的同时，我更换了服务器，由原先的虚拟空间迁移到独立 VPS。 现在使用的 VPS 是 PhotonVPS 。
月付5.95美元，使用优惠码 TENOFF 或 PHOTONLEB 可以打7折， 换算汇率之后是26人民币每月。
这款VPS的内存只有128,我们就要精打细算考虑如何省内存。经过我几天琢磨， 我终于配置的可用率比较高，使用 siege -c 100 -t 100 时候可以保持 100% 可用率。 （其实做不到这么高的并发，大概10个并发每秒）下面就是我记录的安装配置过程。
安装 LNMP Linux 发行版选用 CentOS 据说有较好的安全性和性能，我个人更喜欢 Arch。查询了相关资料， 在生产环境使用 Arch 的似乎不多。
CentOS 里面的包比较旧，不像 Arch 里面，滚动最新。 所以这里需要用到的LNMP大部分都需要自行编译。
Nginx 安装 Nginx 的性能在小内存低配置的服务器上跑得比 Apache 要好。这是我们为什么选用 Nginx。
目前 Nginx 的最新稳定版是1.0.9版。CentOS 官方源里面搜索不到 Nginx，需要自行编译。
准备编译环境，需要安装一堆工具，使用下面这个命令 yum 安装。
yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers 下载Nginx</description>
    </item>
    
  </channel>
</rss>
