<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>创业 on Log4D</title>
    <link>https://blog.alswl.com/tags/%E5%88%9B%E4%B8%9A/</link>
    <description>Recent content in 创业 on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2013 23:35:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/%E5%88%9B%E4%B8%9A/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>读《人件》</title>
      <link>https://blog.alswl.com/2013/04/peopleware/</link>
      <pubDate>Wed, 10 Apr 2013 23:35:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2013/04/peopleware/</guid>
      <description>事情起源于动态语言和静态语言之争，最后争论焦点转移到：「相信人本身的能力重要，
还是通过语言/工具来约束人重要」。
我认为项目开发中最重要的是个人能力和团队协作能力，工具只是加分项。
如果代码质量差、监控难、性能难以优化，解决根本问题的关键还是在人身上。
并不是静态编译和工具检查就能搞定了。
我愤愤的在 QQ 对话框中写道：
我工作第一年痛苦于开发流程，阅读了《人月神话》，就开始坚信软件工程的哲学
后来痛苦与代码质量，阅读了《重构》，开始坚信代码质量决定产品质量
现在痛苦于人和语言的冲突，动态和静态的冲突，我想读《人件》了
人件已经绝版，只能在找线上版，我花了两个星期把它读完。
书中给了我一部分答案，另外还有一些意外的收获。
《人件》其实讲了一件事情：怎样将脑力劳动者管理好，打造出一个高效的团队。
《人件》@豆瓣： http://book.douban.com/subject/1108725/
《人件》在线阅读地址： http://book.zi5.me/books/read/2206
吐槽：翻译太烂太烂太烂了，下次要看直接去看翻译版。
以人为本 我们工作的主要挑战，与其说来源于技术，不如说来源于团队成员本身
技术人员转成项目经理经理之后，往往继续用工程化思维管理人员，
认为人是可以设计成标准化接口，是可以替换的。很可惜，这种想法不是那么 有效。
因为脑力劳动和体力重复劳动不一样，不是在卖汉堡这种重复工作，
而是需要创造、思考和发明的工作。软件经理需要提供有限额的错误机会。
错误无法完全避免，并且是工作内容的健康组成部分。一旦硬性阻止犯错，
会让团队成员失去创造的勇气。
我相信这也是为什么 Facebook 早期会践行「Break it Down」。
何不双赢 西班牙人的理论坚持认为地球上只有一个固定数量的价值，
因此通向积累财富的道路就是学会从土地或者从人身上更有效地榨取财富。
而英国人的理论认为价值可以通过天才和技术创造出来。因此英国就产生了工业革命，
而西班牙人就转动起了车轮，开始开拓疆土和剥削在新大陆的印第安人。
他们从海上运回大量的黄金，
他们所有努力带来的却是通货膨胀（太多的金钱追逐太少的有用货物）。
我坚信公司和员工并不是对立面的，双赢才是正确的路线。
大部分情况下，我愿意牺牲个人时间和精力来完成公司的任务。
前提就是对产品有认同感，对公司有归属感。
最好和最坏 作者通过一个持续两年，有来自 92 个公司的 600 多名开发程序员参加的比赛，
分析出以下数据：
成绩最好与成绩最差的人之间的绩效比率是10 : 1。 最好选手成绩大约是中等成绩选手成绩的2.5倍。 成绩中等以上的一半选手与另外一半选手的绩效比是2 : 1 外刊 IT 评论的
为什么程序员的工作效率跟他们的工资不成比例 一文中也提供一些数据支持。
我离最好还有很长的距离，但是我相信个人能力是可以提升的，
并且在个人能力上面的投资汇报比极高。
高效工作的秘诀 进入顺流：咦？怎么时间过得这么快？！ 邮件比电话更不容易打乱人的思绪 团队的力量 团结起来，工作的更高效更开心 有目标的团队，1 + 1 &amp;gt; 2 为一个共同的目标走到一起 优秀的团队里的成员，不会因为钱、阶层、晋升的问题离开团队 优秀的团队往往是带有个性的 《人人都是产品经理》中当时讲了一个愿景（Vison）问题，</description>
    </item>
    
    <item>
      <title>读《打造 Facebook》</title>
      <link>https://blog.alswl.com/2013/02/facebook/</link>
      <pubDate>Mon, 25 Feb 2013 00:51:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2013/02/facebook/</guid>
      <description>感谢好基友 @daodao 送了我这本《打造 Facebook》，
年前一直忙，最近腾出两个晚上，把这本很火的书看完了。
第一次听见王淮这个名字，其实是在知乎上面，
当时有一个问题 Facebook 早期员工王淮在职期间有什么成就？。
之后陆陆续续看到他的几个回答，感觉他非常善于自我营销。再之后就读到他这本书。
书中最喜欢的章节是关于 Facebook 工程师文化和产品开发流程的描述。
============================== 我是分割线 ==============================
Facebook 招人标准
对公司的忠诚，是文化认同的附属品 技术面试 2.5 / 系统设计 1 / 文化面试 0.5 5 个程度的面试打分 高标准人才，喜欢挑战和完成艰巨任务 慢招人，快炒鱿鱼 新兵训练营
全局认识 / 工具和框架 / 运营商业模式 / 选组
工程师入职不区分方向 导师 黑客文化
学习 / 再创造 Done is better than perfect / Code wins arguments 工程师参与构思、设计、实现 很少有「这样子一定成功」，「我们来试试吧」，通过数据反馈 工程师主导产品开发 跨部门回忆，由工程师汇报进度 开发准则：迅速开发、进行监测 / 坦然对待不确定性 / 不追求极致，不断发布到达目标 工具文化 换职位，Hack a month 王淮转管理岗
Facebook 开发流程</description>
    </item>
    
  </channel>
</rss>
