<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>mvc on Log4D</title>
    <link>https://blog.alswl.com/tags/mvc/</link>
    <description>Recent content in mvc on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 01 Oct 2009 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/mvc/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python&#43;django MTV框架 和php MVC框架</title>
      <link>https://blog.alswl.com/2009/10/python-django-mtv-framework-and-php-mvc-framework/</link>
      <pubDate>Thu, 01 Oct 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/10/python-django-mtv-framework-and-php-mvc-framework/</guid>
      <description>首先，祝福祖国60华诞，我爱这个国家。 刚才在GR读到Here Comes The Sun的[A shorten url app](http://www.classicning.com/blog/2009/09/a-shorten-url-app/-shorten-url- app/)，其中提到了Python下Django框架的一些问题，我很感兴趣，搜索了一下MTV模型，资料很少。但有一篇我读后很有启发，现在转载如下。 原文链接：python+django MTV框架 和php MVC框架的不同之处 - PHP+MYSQL+APACHE - ThinkPHP官方论坛 作者：乔峰 *残酷的分割线 python+django MTV框架 和php MVC框架的不同之处 最近</description>
    </item>
    
    <item>
      <title>Servlet JSP 的 Java类的最简单MVC模型</title>
      <link>https://blog.alswl.com/2009/02/servlet-jsp-s-java-type-of-the-most-simple-mvc-model/</link>
      <pubDate>Wed, 18 Feb 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/02/servlet-jsp-s-java-type-of-the-most-simple-mvc-model/</guid>
      <description>来自Head First Servlet and JSP XML语言: web.xml &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt; &amp;lt;web-app xmlns=&amp;ldquo;http://java.sun.com/xml/ns/j2ee&amp;quot; xmlns:xsi=&amp;ldquo;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;ldquo;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&amp;quot; version=&amp;ldquo;2.4&amp;rdquo;&amp;gt; &amp;ndash;&amp;gt; Ch3 Beer com.example.web.BeerSelect Ch3 Beer /SelectBeer.do HTML语言: form.html Beer Selection Page Beer Selection Page select beer characteristics Color: light amber brown dark Java语言: BeerSelect package com.example.web; import com.example.model.*; import javax.servlet.*; import javax.servlet.http.*; import java.io.*; import java.util.*; public class BeerSelect extends HttpServlet { public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { // response.setContentType(&amp;ldquo;text/html&amp;rdquo;); // PrintWriter out = response.getWriter(); // out.println(&amp;ldquo;Beer Selection Advice &amp;rdquo;); String c = request.getParameter(&amp;ldquo;color&amp;rdquo;); // out.println(&amp;quot; Got beer color &amp;quot; + c); BeerExpert be = new BeerExpert(); List result = be.getBrands(c); // Iterator it = result.iterator(); // while (it.hasNext()) // { // out.print(&amp;quot; try: &amp;quot; + it.next()); // } request.setAttribute(&amp;ldquo;styles&amp;rdquo;, result); RequestDispatcher view = request.getRequestDispatcher(&amp;ldquo;result.jsp&amp;rdquo;); view.forward(request, response); } } Java语言: BeerExpert package com.example.model; import java.util.*; public class BeerExpert { public List getBrands (String color) { List brands = new ArrayList(); if (color.equals(&amp;ldquo;amber&amp;rdquo;)) { brands.add(&amp;ldquo;Jack Amber&amp;rdquo;); brands.add(&amp;ldquo;Red Moose&amp;rdquo;); } else { brands.add(&amp;ldquo;Jail Pale Ale&amp;rdquo;); brands.add(&amp;ldquo;Gout Stout&amp;rdquo;); } return brands; } } Java</description>
    </item>
    
  </channel>
</rss>
