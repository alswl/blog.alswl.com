<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>r on Log4D</title>
    <link>https://blog.alswl.com/tags/r/</link>
    <description>Recent content in r on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 29 Oct 2013 22:32:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/r/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>15 分钟学会 R 语言[译文]</title>
      <link>https://blog.alswl.com/2013/10/r-tutorial/</link>
      <pubDate>Tue, 29 Oct 2013 22:32:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2013/10/r-tutorial/</guid>
      <description>仗着自己有几门语言的基础，我在学新语言时候，都会选择一些快速入门教程。 比如 Learn X in Y minuts 就是我经常光顾的站点。 前段时间，小柒在用 R 写数据分析脚本，我就建议她把 Learn X in Y minuts 里面的 R 语言教程翻译出来。话说 Learn X in Y minuts 里面的中文贡献还是非常多的，赞。 Learn X in Y minuts 的源码托管在 Github。 小柒被我逼着把这篇 R 语言教程 翻译到 R 语言教程中文版。 下面是译文，有不妥的地方可以留言或者直接去 Github 上面 Pull request。 R 是一门统</description>
      <content:encoded><![CDATA[<p>仗着自己有几门语言的基础，我在学新语言时候，都会选择一些快速入门教程。
比如 <a href="http://learnxinyminutes.com/">Learn X in Y minuts</a> 就是我经常光顾的站点。</p>
<p>前段时间，小柒在用 R 写数据分析脚本，我就建议她把 Learn X in Y minuts 里面的
R 语言教程翻译出来。话说 Learn X in Y minuts 里面的中文贡献还是非常多的，赞。</p>
<p>Learn X in Y minuts 的源码托管在 <a href="https://github.com/adambard/learnxinyminutes-docs">Github</a>。
小柒被我逼着把这篇 <a href="http://learnxinyminutes.com/docs/r/">R 语言教程</a>
翻译到 <a href="http://learnxinyminutes.com/docs/zh-cn/r-cn/">R 语言教程中文版</a>。</p>
<p>下面是译文，有不妥的地方可以留言或者直接去 Github 上面 Pull request。</p>
<hr />
<p>R 是一门统计语言。它有很多数据分析和挖掘程序包。可以用来统计、分析和制图。
你也可以在 LaTeX 文档中运行 <code>R</code> 命令。</p>
<!-- more -->
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 评论以 # 开始</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># R 语言原生不支持 多行注释</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 但是你可以像这样来多行注释</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 在窗口里按回车键可以执行一条命令</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">###################################################################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 不用懂编程就可以开始动手了</span>
</span></span><span class="line"><span class="cl"><span class="c1">###################################################################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">()</span>	<span class="c1"># 浏览内建的数据集</span>
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 北美主要河流的长度（数据集）</span>
</span></span><span class="line"><span class="cl"><span class="n">ls</span><span class="p">()</span>	<span class="c1"># 在工作空间中查看「河流」是否出现</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 撇一眼数据集</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 735 320 325 392 524 450</span>
</span></span><span class="line"><span class="cl"><span class="n">length</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 我们测量了多少条河流？</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 141</span>
</span></span><span class="line"><span class="cl"><span class="n">summary</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  135.0   310.0   425.0   591.2   680.0  3710.0</span>
</span></span><span class="line"><span class="cl"><span class="n">stem</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 茎叶图（一种类似于直方图的展现形式）</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  The decimal point is 2 digit(s) to the right of the |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   0 | 4</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   2 | 011223334555566667778888899900001111223333344455555666688888999</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   4 | 111222333445566779001233344567</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   6 | 000112233578012234468</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   8 | 045790018</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  10 | 04507</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  12 | 1471</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  14 | 56</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  16 | 7</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  18 | 9</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  20 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  22 | 25</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  24 | 3</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  26 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  28 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  30 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  32 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  34 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  36 | 1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">stem</span><span class="p">(</span><span class="n">log</span><span class="p">(</span><span class="n">rivers</span><span class="p">))</span>	<span class="c1"># 查看数据集的方式既不是标准形式，也不是取log后的结果! 看起来，是钟形曲线形式的基本数据集</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#  The decimal point is 1 digit(s) to the left of the |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  48 | 1</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  50 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  52 | 15578</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  54 | 44571222466689</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  56 | 023334677000124455789</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  58 | 00122366666999933445777</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  60 | 122445567800133459</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  62 | 112666799035</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  64 | 00011334581257889</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  66 | 003683579</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  68 | 0019156</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  70 | 079357</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  72 | 89</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  74 | 84</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  76 | 56</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  78 | 4</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  80 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  82 | 2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">hist</span><span class="p">(</span><span class="n">rivers</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">border</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span> <span class="n">breaks</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>	<span class="c1"># 试试用这些参数画画 （译者注：给 river 做统计频数直方图，包含了这些参数：数据源，颜色，边框，空格）</span>
</span></span><span class="line"><span class="cl"><span class="n">hist</span><span class="p">(</span><span class="n">log</span><span class="p">(</span><span class="n">rivers</span><span class="p">),</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">border</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span> <span class="n">breaks</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>	<span class="c1">#你还可以做更多式样的绘图</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 还有其他一些简单的数据集可以被用来加载。R 语言包括了大量这种 data()</span>
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">discoveries</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">lwd</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">xlab</span><span class="o">=</span><span class="s2">&#34;Year&#34;</span><span class="p">,</span> <span class="n">main</span><span class="o">=</span><span class="s2">&#34;Number of important discoveries per year&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 译者注：参数为（数据源，颜色，线条宽度，X 轴名称，标题）</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">discoveries</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">lwd</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="nb">type</span> <span class="o">=</span> <span class="s2">&#34;h&#34;</span><span class="p">,</span> <span class="n">xlab</span><span class="o">=</span><span class="s2">&#34;Year&#34;</span><span class="p">,</span> <span class="n">main</span><span class="o">=</span><span class="s2">&#34;Number of important discoveries per year&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 除了按照默认的年份排序，我们还可以排序来发现特征</span>
</span></span><span class="line"><span class="cl"><span class="n">sort</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  [1]  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  2  2  2  2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [26]  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  3  3  3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [51]  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  4  4  4  4  4  4  4  4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [76]  4  4  4  4  5  5  5  5  5  5  5  6  6  6  6  6  6  7  7  7  7  8  9 10 12</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">stem</span><span class="p">(</span><span class="n">discoveries</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># 译者注：茎叶图（数据，放大系数）</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  The decimal point is at the |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   0 | 000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   1 | 000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   2 | 00000000000000000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   3 | 00000000000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   4 | 000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   5 | 0000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   6 | 000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   7 | 0000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   8 | 0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   9 | 0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  10 | 0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  11 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  12 | 0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">max</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 12</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">summary</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    0.0     2.0     3.0     3.1     4.0    12.0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#基本的统计学操作也不需要任何编程知识</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#随机生成数据</span>
</span></span><span class="line"><span class="cl"><span class="nb">round</span><span class="p">(</span><span class="n">runif</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="nb">min</span><span class="o">=</span><span class="mf">.5</span><span class="p">,</span> <span class="nb">max</span><span class="o">=</span><span class="mf">6.5</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 译者注：runif 产生随机数，round 四舍五入</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 1 4 6 1 4 6 4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 你输出的结果会和我们给出的不同，除非我们设置了相同的随机种子 random.seed(31337)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#从标准高斯函数中随机生成 9 次</span>
</span></span><span class="line"><span class="cl"><span class="n">rnorm</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1]  0.07528471  1.03499859  1.34809556 -0.82356087  0.61638975 -1.88757271</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [7] -0.59975593  0.57629164  1.08455362</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 基础编程</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 数值</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#“数值”指的是双精度的浮点数</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span>	<span class="c1"># 5</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="mf">5e4</span>	<span class="c1"># 50000				# 用科学技术法方便的处理极大值、极小值或者可变的量级</span>
</span></span><span class="line"><span class="cl"><span class="mf">6.02e23</span>	<span class="c1"># 阿伏伽德罗常数#</span>
</span></span><span class="line"><span class="cl"><span class="mf">1.6e-35</span>	<span class="c1"># 布朗克长度</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 长整数并用 L 结尾</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span><span class="n">L</span>	<span class="c1"># 5</span>
</span></span><span class="line"><span class="cl"><span class="c1">#输出5L</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="mi">5</span><span class="n">L</span><span class="p">)</span>	<span class="c1"># &#34;integer&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 可以自己试一试？用 class() 函数获取更多信息</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 事实上，你可以找一些文件查阅 `xyz` 以及xyz的差别</span>
</span></span><span class="line"><span class="cl"><span class="c1"># `xyz` 用来查看源码实现，?xyz 用来看帮助</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 算法</span>
</span></span><span class="line"><span class="cl"><span class="mi">10</span> <span class="o">+</span> <span class="mi">66</span>	<span class="c1"># 76</span>
</span></span><span class="line"><span class="cl"><span class="mf">53.2</span> <span class="o">-</span> <span class="mi">4</span>	<span class="c1"># 49.2</span>
</span></span><span class="line"><span class="cl"><span class="mi">2</span> <span class="o">*</span> <span class="mf">2.0</span>	<span class="c1"># 4</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span><span class="n">L</span> <span class="o">/</span> <span class="mi">4</span>	<span class="c1"># 0.75</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span> <span class="o">%%</span> <span class="mi">2</span>	<span class="c1"># 1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 特殊数值类型</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NaN</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">Inf</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="o">-</span><span class="n">Inf</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;		# 在以下场景中会用到 integrate( dnorm(x), 3, Inf ) -- 消除 Z 轴数据</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 但要注意，NaN 并不是唯一的特殊数值类型……</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NA</span><span class="p">)</span>	<span class="c1"># 看上面</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NULL</span><span class="p">)</span>	<span class="c1"># NULL</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 简单列表</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>	<span class="c1"># 6 8 7 5 3 0 9</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="s1">&#39;alef&#39;</span><span class="p">,</span> <span class="s1">&#39;bet&#39;</span><span class="p">,</span> <span class="s1">&#39;gimmel&#39;</span><span class="p">,</span> <span class="s1">&#39;dalet&#39;</span><span class="p">,</span> <span class="s1">&#39;he&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="s1">&#39;Z&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&#34;Zoro&#34;</span>	<span class="c1"># FALSE FALSE FALSE FALSE</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 一些优雅的内置功能</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span><span class="p">:</span><span class="mi">15</span>	<span class="c1"># 5  6  7  8  9 10 11 12 13 14 15</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">seq</span><span class="p">(</span><span class="n">from</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">to</span><span class="o">=</span><span class="mi">31337</span><span class="p">,</span> <span class="n">by</span><span class="o">=</span><span class="mi">1337</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  [1]     0  1337  2674  4011  5348  6685  8022  9359 10696 12033 13370 14707</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [13] 16044 17381 18718 20055 21392 22729 24066 25403 26740 28077 29414 30751</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">letters</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  [1] &#34;a&#34; &#34;b&#34; &#34;c&#34; &#34;d&#34; &#34;e&#34; &#34;f&#34; &#34;g&#34; &#34;h&#34; &#34;i&#34; &#34;j&#34; &#34;k&#34; &#34;l&#34; &#34;m&#34; &#34;n&#34; &#34;o&#34; &#34;p&#34; &#34;q&#34; &#34;r&#34; &#34;s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [20] &#34;t&#34; &#34;u&#34; &#34;v&#34; &#34;w&#34; &#34;x&#34; &#34;y&#34; &#34;z&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">month</span><span class="o">.</span><span class="n">abb</span>	<span class="c1"># &#34;Jan&#34; &#34;Feb&#34; &#34;Mar&#34; &#34;Apr&#34; &#34;May&#34; &#34;Jun&#34; &#34;Jul&#34; &#34;Aug&#34; &#34;Sep&#34; &#34;Oct&#34; &#34;Nov&#34; &#34;Dec&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Access the n&#39;th element of a list with list.name[n] or sometimes list.name[[n]]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 list.name[n] 来访问第 n 个列表元素，有时候需要使用 list.name[[n]]</span>
</span></span><span class="line"><span class="cl"><span class="n">letters</span><span class="p">[</span><span class="mi">18</span><span class="p">]</span>	<span class="c1"># &#34;r&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">LETTERS</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span>	<span class="c1"># &#34;M&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">month</span><span class="o">.</span><span class="n">name</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span>	<span class="c1"># &#34;September&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">)[</span><span class="mi">3</span><span class="p">]</span>	<span class="c1"># 7</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 字符串</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 字符串和字符在 R 语言中没有区别</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;Horatio&#34;</span>	<span class="c1"># &#34;Horatio&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="s2">&#34;Horatio&#34;</span><span class="p">)</span> <span class="c1"># &#34;character&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">substr</span><span class="p">(</span><span class="s2">&#34;Fortuna multis dat nimis, nulli satis.&#34;</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">15</span><span class="p">)</span>	<span class="c1"># &#34;multis &#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">gsub</span><span class="p">(</span><span class="s1">&#39;u&#39;</span><span class="p">,</span> <span class="s1">&#39;ø&#39;</span><span class="p">,</span> <span class="s2">&#34;Fortuna multis dat nimis, nulli satis.&#34;</span><span class="p">)</span>	<span class="c1"># &#34;Fortøna møltis dat nimis, nølli satis.&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 逻辑值</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 布尔值</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">TRUE</span><span class="p">)</span>	<span class="c1"># &#34;logical&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">FALSE</span><span class="p">)</span>	<span class="c1"># &#34;logical&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 和我们预想的一样</span>
</span></span><span class="line"><span class="cl"><span class="n">TRUE</span> <span class="o">==</span> <span class="n">TRUE</span>	<span class="c1"># TRUE</span>
</span></span><span class="line"><span class="cl"><span class="n">TRUE</span> <span class="o">==</span> <span class="n">FALSE</span>	<span class="c1"># FALSE</span>
</span></span><span class="line"><span class="cl"><span class="n">FALSE</span> <span class="o">!=</span> <span class="n">FALSE</span>	<span class="c1"># FALSE</span>
</span></span><span class="line"><span class="cl"><span class="n">FALSE</span> <span class="o">!=</span> <span class="n">TRUE</span>	<span class="c1"># TRUE</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 缺失数据（NA）也是逻辑值</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NA</span><span class="p">)</span>	<span class="c1"># &#34;logical&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#定义NA为逻辑型</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 因子</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 因子是为数据分类排序设计的（像是排序小朋友们的年级或性别）</span>
</span></span><span class="line"><span class="cl"><span class="n">levels</span><span class="p">(</span><span class="n">factor</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;male&#34;</span><span class="p">,</span> <span class="s2">&#34;male&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;NA&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">)))</span>	<span class="c1"># &#34;female&#34; &#34;male&#34;   &#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">factor</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;male&#34;</span><span class="p">,</span> <span class="s2">&#34;NA&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  female female male   NA     female</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Levels: female male NA</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">(</span><span class="n">infert</span><span class="p">)</span>	<span class="c1"># 自然以及引产导致的不育症</span>
</span></span><span class="line"><span class="cl"><span class="n">levels</span><span class="p">(</span><span class="n">infert</span><span class="err">$</span><span class="n">education</span><span class="p">)</span>	<span class="c1"># &#34;0-5yrs&#34;  &#34;6-11yrs&#34; &#34;12+ yrs&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 变量</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 有许多种方式用来赋值</span>
</span></span><span class="line"><span class="cl"><span class="n">x</span> <span class="o">=</span> <span class="mi">5</span> <span class="c1"># 这样可以</span>
</span></span><span class="line"><span class="cl"><span class="n">y</span> <span class="o">&lt;-</span> <span class="s2">&#34;1&#34;</span> <span class="c1"># 更推荐这样</span>
</span></span><span class="line"><span class="cl"><span class="n">TRUE</span> <span class="o">-&gt;</span> <span class="n">z</span> <span class="c1"># 这样可行，但是很怪</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#我们还可以使用强制转型</span>
</span></span><span class="line"><span class="cl"><span class="k">as</span><span class="o">.</span><span class="n">numeric</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>	<span class="c1"># 1</span>
</span></span><span class="line"><span class="cl"><span class="k">as</span><span class="o">.</span><span class="n">character</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>	<span class="c1"># &#34;5&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 循环</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># for 循环语句</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="ow">in</span> <span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nb">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># while 循环</span>
</span></span><span class="line"><span class="cl"><span class="n">a</span> <span class="o">&lt;-</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">cat</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">a</span> <span class="o">&lt;-</span> <span class="n">a</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 记住，在 R 语言中 for / while 循环都很慢</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 建议使用 apply()（我们一会介绍）来错做一串数据（比如一列或者一行数据）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># IF/ELSE</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 再来看这些优雅的标准</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Huzzah! It worked!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Noooo! This is blatantly illogical!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1] &#34;Huzzah! It worked!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 函数</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 定义如下</span>
</span></span><span class="line"><span class="cl"><span class="n">jiggle</span> <span class="o">&lt;-</span> <span class="n">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">+</span> <span class="n">rnorm</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">sd</span><span class="o">=</span><span class="mf">.1</span><span class="p">)</span>	<span class="c1">#add in a bit of (controlled) noise</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 和其他 R 语言函数一样调用</span>
</span></span><span class="line"><span class="cl"><span class="n">jiggle</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>	<span class="c1"># 5±ε. 使用 set.seed(2716057) 后， jiggle(5)==5.005043</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 数据容器：vectors, matrices, data frames, and arrays</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 单维度</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以将目前我们学习到的任何类型矢量化，只要它们拥有相同的类型</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span>	<span class="c1">#  8  9 10 11</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 矢量的类型是这一组数据元素的类型</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># If you vectorize items of different classes, weird coercions happen</span>
</span></span><span class="line"><span class="cl"><span class="c1">#如果你强制的将不同类型数值矢量化，会出现特殊值</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="n">TRUE</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>	<span class="c1"># 1 4</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>	<span class="c1"># &#34;dog&#34;  &#34;TRUE&#34; &#34;4&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#我们这样来取内部数据，（R 的下标索引顺序 1 开始）</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>	<span class="c1"># 8</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 我们可以根据条件查找特定数据</span>
</span></span><span class="line"><span class="cl"><span class="n">which</span><span class="p">(</span><span class="n">vec</span> <span class="o">%%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>	<span class="c1"># 1 3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 抓取矢量中第一个和最后一个字符</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>	<span class="c1"># 8</span>
</span></span><span class="line"><span class="cl"><span class="n">tail</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>	<span class="c1"># 11</span>
</span></span><span class="line"><span class="cl"><span class="c1">#如果下标溢出或不存会得到 NA</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span>	<span class="c1"># NA</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以使用 length() 获取矢量的长度</span>
</span></span><span class="line"><span class="cl"><span class="n">length</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以直接操作矢量或者矢量的子集</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span> <span class="o">*</span> <span class="mi">4</span>	<span class="c1"># 16 20 24 28</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="o">*</span> <span class="mi">5</span>	<span class="c1"># 25 30</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 这里有许多内置的函数，来表现向量</span>
</span></span><span class="line"><span class="cl"><span class="n">mean</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 9.5</span>
</span></span><span class="line"><span class="cl"><span class="n">var</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 1.666667</span>
</span></span><span class="line"><span class="cl"><span class="n">sd</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 1.290994</span>
</span></span><span class="line"><span class="cl"><span class="nb">max</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 11</span>
</span></span><span class="line"><span class="cl"><span class="nb">min</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 8</span>
</span></span><span class="line"><span class="cl"><span class="nb">sum</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 38</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 二维（相同元素类型）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#你可以为同样类型的变量建立矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span> <span class="o">&lt;-</span> <span class="n">matrix</span><span class="p">(</span><span class="n">nrow</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">ncol</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    2    5</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    3    6</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 和 vector 不一样的是，一个矩阵的类型真的是 「matrix」，而不是内部元素的类型</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span> <span class="c1"># =&gt; &#34;matrix&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 访问第一行的字符</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span><span class="p">[</span><span class="mi">1</span><span class="p">,]</span>	<span class="c1"># 1 4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 操作第一行数据</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span> <span class="o">*</span> <span class="n">mat</span><span class="p">[,</span><span class="mi">1</span><span class="p">]</span>	<span class="c1"># 3 6 9</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 访问一个特定数据</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>	<span class="c1"># 6</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 转置整个矩阵（译者注：变成 2 行 3 列）</span>
</span></span><span class="line"><span class="cl"><span class="n">t</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2] [,3]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    2    3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    4    5    6</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 cbind() 函数把两个矩阵按列合并，形成新的矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">mat2</span> <span class="o">&lt;-</span> <span class="n">cbind</span><span class="p">(</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;bird&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">mat2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,] &#34;1&#34;  &#34;dog&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,] &#34;2&#34;  &#34;cat&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,] &#34;3&#34;  &#34;bird&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [4,] &#34;4&#34;  &#34;dog&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">mat2</span><span class="p">)</span>	<span class="c1"># matrix</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Again, note what happened!</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 注意</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 因为矩阵内部元素必须包含同样的类型</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 所以现在每一个元素都转化成字符串</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="n">class</span><span class="p">(</span><span class="n">mat2</span><span class="p">[,</span><span class="mi">1</span><span class="p">]),</span> <span class="n">class</span><span class="p">(</span><span class="n">mat2</span><span class="p">[,</span><span class="mi">2</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 按行合并两个向量，建立新的矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">mat3</span> <span class="o">&lt;-</span> <span class="n">rbind</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span> <span class="n">c</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">mat3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2] [,3] [,4]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    2    4    5</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    6    7    0    4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 哈哈，数据类型都一样的，没有发生强制转换，生活真美好</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 二维(不同的元素类型)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 利用 data frame 可以将不同类型数据放在一起</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span> <span class="o">&lt;-</span> <span class="n">data</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;bird&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">names</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;number&#34;</span><span class="p">,</span> <span class="s2">&#34;species&#34;</span><span class="p">)</span> <span class="c1"># 给数据列命名</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span>	<span class="c1"># &#34;data.frame&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   number species</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 1      5     dog</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 2      2     cat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 3      1    bird</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 4      4     dog</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">dat</span><span class="err">$</span><span class="n">number</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">dat</span><span class="p">[,</span><span class="mi">2</span><span class="p">])</span>	<span class="c1"># &#34;factor&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># data.frame() 会将字符向量转换为 factor 向量</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 有很多精妙的方法来获取 data frame 的子数据集</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span><span class="err">$</span><span class="n">number</span>	<span class="c1"># 5 2 1 4</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span><span class="p">[,</span><span class="mi">1</span><span class="p">]</span>	<span class="c1"># 5 2 1 4</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span><span class="p">[,</span><span class="s2">&#34;number&#34;</span><span class="p">]</span>	<span class="c1"># 5 2 1 4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 多维（相同元素类型）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 arry 创造一个 n 维的表格</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You can make a two-dimensional table (sort of like a matrix)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以建立一个 2 维表格（有点像矩阵）</span>
</span></span><span class="line"><span class="cl"><span class="n">array</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span><span class="n">c</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)),</span> <span class="n">dim</span><span class="o">=</span><span class="n">c</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2] [,3] [,4]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    4    8    3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    2    5    9    6</span>
</span></span><span class="line"><span class="cl"><span class="c1">#你也可以利用数组建立一个三维的矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">array</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">300</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">c</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">60</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="n">c</span><span class="p">(</span><span class="mi">66</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">847</span><span class="p">))),</span> <span class="n">dim</span><span class="o">=</span><span class="n">c</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># , , 1</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    2    8</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]  300    9</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    4    0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># , , 2</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    5   66</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]   60    7</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    0  847</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#列表（多维的，不同类型的）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># R语言有列表的形式</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span> <span class="o">&lt;-</span> <span class="nb">list</span><span class="p">(</span><span class="n">time</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="mi">40</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span><span class="err">$</span><span class="n">price</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="n">rnorm</span><span class="p">(</span><span class="mi">40</span><span class="p">,</span><span class="mf">.5</span><span class="o">*</span><span class="n">list1</span><span class="err">$</span><span class="n">time</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span> <span class="c1"># 随机</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># You can get items in the list like so</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以这样获得列表的元素</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span><span class="err">$</span><span class="n">time</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You can subset list items like vectors</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你也可以和矢量一样获取他们的子集</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span><span class="err">$</span><span class="n">price</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># apply()函数家族</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 还记得 mat 么？</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    2    5</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    3    6</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Use apply(X, MARGIN, FUN) to apply function FUN to a matrix X</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 使用(X, MARGIN, FUN)将函数 FUN 应用到矩阵 X 的行 (MAR = 1) 或者 列 (MAR = 2)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># That is, R does FUN to each row (or column) of X, much faster than a</span>
</span></span><span class="line"><span class="cl"><span class="c1"># R 在 X 的每一行/列使用 FUN，比循环要快很多</span>
</span></span><span class="line"><span class="cl"><span class="n">apply</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">MAR</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">myFunc</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    3   15</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    7   19</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]   11   23</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 还有其他家族函数 ?lapply, ?sapply</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 不要被吓到，虽然许多人在此都被搞混</span>
</span></span><span class="line"><span class="cl"><span class="c1"># plyr 程序包的作用是用来改进 apply() 函数家族</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">install</span><span class="o">.</span><span class="n">packages</span><span class="p">(</span><span class="s2">&#34;plyr&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">require</span><span class="p">(</span><span class="n">plyr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="err">?</span><span class="n">plyr</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 载入数据</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># &#34;pets.csv&#34; 是网上的一个文本</span>
</span></span><span class="line"><span class="cl"><span class="n">pets</span> <span class="o">&lt;-</span> <span class="n">read</span><span class="o">.</span><span class="n">csv</span><span class="p">(</span><span class="s2">&#34;http://learnxinyminutes.com/docs/pets.csv&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">pets</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span><span class="p">(</span><span class="n">pets</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1"># 前两行</span>
</span></span><span class="line"><span class="cl"><span class="n">tail</span><span class="p">(</span><span class="n">pets</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="c1"># 最后一行</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 以 .csv 格式来保存数据集或者矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">write</span><span class="o">.</span><span class="n">csv</span><span class="p">(</span><span class="n">pets</span><span class="p">,</span> <span class="s2">&#34;pets2.csv&#34;</span><span class="p">)</span> <span class="c1"># 保存到新的文件 pets2.csv</span>
</span></span><span class="line"><span class="cl"><span class="c1"># set working directory with setwd(), look it up with getwd()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 setwd() 改变工作目录，使用 getwd() 查看当前工作目录</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 尝试使用 ?read.csv 和 ?write.csv 来查看更多信息</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 画图</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 散点图</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">list1</span><span class="err">$</span><span class="n">time</span><span class="p">,</span> <span class="n">list1</span><span class="err">$</span><span class="n">price</span><span class="p">,</span> <span class="n">main</span> <span class="o">=</span> <span class="s2">&#34;fake data&#34;</span><span class="p">)</span> <span class="c1"># 译者注：横轴 list1$time，纵轴 wlist1$price，标题 fake data</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 回归图</span>
</span></span><span class="line"><span class="cl"><span class="n">linearModel</span> <span class="o">&lt;-</span> <span class="n">lm</span><span class="p">(</span><span class="n">price</span>  <span class="o">~</span> <span class="n">time</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">list1</span><span class="p">)</span> <span class="c1"># 译者注：线性模型，数据集为list1，以价格对时间做相关分析模型</span>
</span></span><span class="line"><span class="cl"><span class="n">linearModel</span> <span class="c1"># 拟合结果</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 将拟合结果展示在图上，颜色设为红色</span>
</span></span><span class="line"><span class="cl"><span class="n">abline</span><span class="p">(</span><span class="n">linearModel</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="s2">&#34;red&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 也可以获取各种各样漂亮的分析图</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">linearModel</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 直方图</span>
</span></span><span class="line"><span class="cl"><span class="n">hist</span><span class="p">(</span><span class="n">rpois</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">10000</span><span class="p">,</span> <span class="k">lambda</span> <span class="o">=</span> <span class="mi">5</span><span class="p">),</span> <span class="n">col</span> <span class="o">=</span> <span class="s2">&#34;thistle&#34;</span><span class="p">)</span> <span class="c1"># 译者注：统计频数直方图</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 柱状图</span>
</span></span><span class="line"><span class="cl"><span class="n">barplot</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span> <span class="n">names</span><span class="o">.</span><span class="n">arg</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;red&#34;</span><span class="p">,</span><span class="s2">&#34;blue&#34;</span><span class="p">,</span><span class="s2">&#34;purple&#34;</span><span class="p">,</span><span class="s2">&#34;green&#34;</span><span class="p">,</span><span class="s2">&#34;yellow&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 可以尝试着使用 ggplot2 程序包来美化图片</span>
</span></span><span class="line"><span class="cl"><span class="n">install</span><span class="o">.</span><span class="n">packages</span><span class="p">(</span><span class="s2">&#34;ggplot2&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">require</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="err">?</span><span class="n">ggplot2</span>
</span></span></code></pre></div><h2 id="获得-r">获得 R</h2>
<ul>
<li>从 <a href="http://www.r-project.org/">http://www.r-project.org/</a> 获得安装包和图形化界面</li>
<li><a href="http://www.rstudio.com/ide/">RStudio</a> 是另一个图形化界面</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
