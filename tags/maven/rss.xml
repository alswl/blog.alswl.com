<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Maven on Log4D</title>
    <link>https://blog.alswl.com/tags/maven/</link>
    <description>Recent content in Maven on Log4D</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 18 Mar 2011 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/maven/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Eclipse中使用Maven</title>
      <link>https://blog.alswl.com/2011/03/maven-eclipse/</link>
      <pubDate>Fri, 18 Mar 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/03/maven-eclipse/</guid>
      <description>&lt;p&gt;一提到Eclipse中使用Maven，都会想到&lt;a href=&#34;http://m2eclipse.codehaus.org/&#34;&gt;m2eclipse&lt;/a&gt;这个插件。其实在Ecli
pse下使用Maven不用插件也能完成，我们只需要使用bin/mvn下面的mvn即可。&lt;/p&gt;
&lt;h2 id=&#34;3分钟maven&#34;&gt;3分钟Maven&lt;/h2&gt;
&lt;p&gt;Maven官方提供了[Getting Started in 5 Minutes](&lt;a href=&#34;http://maven.apache.org/guides&#34;&gt;http://maven.apache.org/guides&lt;/a&gt;
/getting-started/maven-in-five-minutes.html)和[Getting Started in 30
Minutes](&lt;a href=&#34;http://maven.apache.org/guides/getting-&#34;&gt;http://maven.apache.org/guides/getting-&lt;/a&gt;
started/index.html)两种教程，我这里再简化一下，记录一下常用命令。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#建立一个空项目，包含一个HelloWorld，可以通过
#-DarchetypeGroupId=&amp;lt;archetype-groupId&amp;gt; -DarchetypeArtifactId=&amp;lt;archetype-artifactId&amp;gt;
#命令创建更多类型项目
mvn archetype:create -DgroupId=com.dddspace.java -DartifactId=helloworld
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#编译打包到jar或者war，根据pom中定义&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>一提到Eclipse中使用Maven，都会想到<a href="http://m2eclipse.codehaus.org/">m2eclipse</a>这个插件。其实在Ecli
pse下使用Maven不用插件也能完成，我们只需要使用bin/mvn下面的mvn即可。</p>
<h2 id="3分钟maven">3分钟Maven</h2>
<p>Maven官方提供了[Getting Started in 5 Minutes](<a href="http://maven.apache.org/guides">http://maven.apache.org/guides</a>
/getting-started/maven-in-five-minutes.html)和[Getting Started in 30
Minutes](<a href="http://maven.apache.org/guides/getting-">http://maven.apache.org/guides/getting-</a>
started/index.html)两种教程，我这里再简化一下，记录一下常用命令。</p>
<pre><code>#建立一个空项目，包含一个HelloWorld，可以通过
#-DarchetypeGroupId=&lt;archetype-groupId&gt; -DarchetypeArtifactId=&lt;archetype-artifactId&gt;
#命令创建更多类型项目
mvn archetype:create -DgroupId=com.dddspace.java -DartifactId=helloworld
</code></pre>
<p>#编译打包到jar或者war，根据pom中定义</p>
<p>maven package</p>
<p>#jUnit跑跑</p>
<p>mvn test</p>
<p>#神奇的命令，帮助创建Eclipse项目，配置path，默认使用M2_REPO这个变量作为目录</p>
<p>mvn eclipse:eclipse</p>
<p>大约跑完花费3分钟~嗯，有这几个命令，Maven简单操作就OK了，更多的话，去Maven文档溜溜吧。</p>
<p>PS：为了防止Maven编码错误，建议在bin/mvn里面加入一句话<code>set MAVEN_OPTS=-Dfile.encoding=UTF-8</code>
这样强制Maven使用UTF-8进行编码。</p>
<h2 id="配置eclipse环境">配置Eclipse环境</h2>
<h3 id="加入m2_repo">加入M2_REPO</h3>
<p>进入Eclipse-&gt;preferences-&gt;java-&gt;build path-&gt;classpath
variables，添加M2_REPO这个变量，指向C:/Documents and Settings/userName/.m2/repository，这个
路径是默认的Maven仓库，如果你想搬到其他地方，需要修改mavenconfsetting.xml里面的localRepository。</p>
<h3 id="配置string-substitution">配置String Substitution</h3>
<p>通过配置String
Subsitution我们就可以使用Eclipse的lanuch来启动Maven，而不是Eclipse插件启动。首先我们要告诉Eclipse
Maven在哪里。配置Eclipse-&gt;preferences-&gt;Run/Debug-&gt;String Subsitution，加入mvn
=D:/dotj_dev/tools/apache-maven-2.2.1/bin/mvn.bat。</p>
<h3 id="建立launch文件">建立Launch文件</h3>
<p>Launch其实是Eclipse的Launcher框架的配置文件，可以定义Application的启动方式。新建一个mvn-war.launch如下：</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
&lt;launchConfiguration type=&quot;org.eclipse.ui.externaltools.ProgramLaunchConfigurationType&quot;&gt;
&lt;stringAttribute key=&quot;bad_container_name&quot; value=&quot;helloworldmvn-war.launch&quot;/&gt;
&lt;stringAttribute key=&quot;org.eclipse.ui.externaltools.ATTR_LOCATION&quot; value=&quot;${mvn}&quot;/&gt;
&lt;stringAttribute key=&quot;org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS&quot; value=&quot;clean compile war:war -U&quot;/&gt;
&lt;stringAttribute key=&quot;org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY&quot; value=&quot;${workspace_loc:/helloworld}&quot;/&gt;
&lt;/launchConfiguration&gt;
</code></pre>
<p>Update（2011/03/21）：后来测试发现<code>bad_container_name</code>没有也可以正常运行；<code>${workspace_loc:/hello world}</code>修改为<code>${project_loc}</code>更为方便。</p>
<p>这个.launch文件内容其实是XML格式的，里面定义了几个属性，用来告诉Eclipse执行什么命令，重要的属性是ATTR_LOCATION和ATTR_TO
OL_ARGUMENTS，我们分别赋值为${mvn}和Maven参数，就可以正确执行了。</p>
<p>类似的，我们可以建立mvn eclipse:eclipse的Launch文件，用来生成Eclipse类型的项目。</p>
<p>PS：使用Substitution的目的其实是为了避免不同开发环境下面Maven位置不相同，保持.launch文件统一。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
