<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>node.js on Log4D</title>
    <link>https://blog.alswl.com/tags/node.js/</link>
    <description>Recent content in node.js on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 May 2012 10:40:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/node.js/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>服务器 Push 技术</title>
      <link>https://blog.alswl.com/2012/05/comet/</link>
      <pubDate>Wed, 30 May 2012 10:40:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/05/comet/</guid>
      <description>服务器 Push 技术表示服务器可以主动推送消息给客户端浏览器。
实现方式 Comet Ajax 轮询 iframe / htmlfile script tag （不中断的连续请求） Flash 通讯 WebSocket Comet 本意是彗星，彗星尾巴痕迹很像长连接工作方式，所以 Comet 指代长连接。 在 Ajax 轮询的分类上，存在一些分歧，这里我把轮询认为一种 Comet 方式。
ps：「长连接」在一些场景下，是另外一种意义「HTTP: Keep alive」。不在本文讨论的范围中。
参考链接：
Comet：基于 HTTP 长连接的「服务器推」技术 Socket.IO Supported transports 浏览器支持情况 WebSocket 属于 HTML5 规范，需要「先进」浏览器支持， Flash 通讯需要浏览器安装 Flash 插件，其他方式都可以适应常见浏览器。
参考连接：
HTTP持久链接 [Comet (programming)](http://en.wikipedia.org/wiki/Comet_(programming)) 一个误解: 单个服务器程序可承受最大连接数「理论」上是「65535」 How to implement COMET with PHP 各大网站连接情况 可以通过 url 请求来揣测一些东西，比如说，它们没有用 WebSocket， 否则 FireBug 是无法监测的，WebSocket 可以双向通讯。
新浪微博 未读信息链接： http://rm.api.weibo.com/remind/unread_count.json?target=api&amp;amp;_pid=10001&amp;amp;count=2&amp;amp;source=3818214747&amp;amp;callback=STK_133834300664875
未读信息大约每20秒触发一次，像是 Ajax 轮询。</description>
    </item>
    
  </channel>
</rss>
