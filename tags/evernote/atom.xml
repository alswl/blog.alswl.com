<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>evernote on Log4D</title>
    <link>https://blog.alswl.com/tags/evernote/</link>
    <description>Recent content in evernote on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Sep 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/evernote/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我所使用的知识管理系统</title>
      <link>https://blog.alswl.com/2010/09/my-kms/</link>
      <pubDate>Fri, 24 Sep 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/09/my-kms/</guid>
      <description>最近工作比较忙，自由上网的时间被大幅度减少，加上在啃.net的书，所以能够分享的东西就不多了。公司所在的部门需要将PMS和KMS整合在一起，正在对KMS进行
选型，我就趁这个机会把我使用知识管理系统的经验分享一下。
一、知识管理系统（KMS） 简单说一下知识管理的定义：指个人或团体通过工具建立知识体系并不断完善，进行知识的收集、消化吸收和创新的过程，这其中使用的工具也就是KMS。KMS应该帮助我们
队只是进行采集、精炼、索引、分类、检阅、检索、搜索的功能。
不多解释KMS了，省的看大段文字心烦，想做理论深入的去最下面的相关链接查找吧。
二、我想要的KMS 我理想中的KMS应该能够满足一下几点要求。
1、数据保存格式 数据的保存格式关系到知识的完整性和呈现方式，这是我最看重的一条。我理想中的保存格式是能够内嵌媒体信息，可以自定义内容的样式，最好是用大家比较习惯的文档体系，
比如h1/h2/h3/p/br/ol/li。在内嵌媒体内容的同时也要能够在知识点外挂其他类型文件，比如Excel、知识导图，甚至exe可执行文件。
数据保存格式也要考虑数据的移植性，因为一旦我们的KMS需要换一个系统，就会带来大量个工作，这个极其讨厌。使用xml/doc/excel/mm这些通用数据类型
存储信息可以在一定条件下解决这个问题。
数据存储的形式最好使用文件形式，尽量不要使用数据库，什么MySQL/MSSQL/SQLite，一旦知识数量到了一个规模，这反而会成为限制（我可不想为了一个小
小KSM而开一个后台服务器进程）。
2、数据采集方式 数据采集方式关系到采集是否顺手。所谓顺手，就是说我看到某个资源（文字 / 图片 /
网页），都可以通过尽可能少的步骤保存到我自己的KMS，比如通过常驻后台的托盘程序，又或者监视剪贴板指定格式内容。
相应的解决办法有从源获取，比如说可以直接读取我Google
Reader中打上星号的内容，从某个Feed获取内容，从我当前正在浏览的网页获取我所需要的内容（不保存那些广告和垃圾信息）。
3、数据索引 能够对所有的信息进行无限制分类和打标签，支持1-&amp;gt;N分类和1-&amp;gt;N标签即可，没有太多的花样了。
能够根据分类、标签、标题、正文多层次搜索，支持高级查找，比如说AND条件和OR条件。
4、数据同步和安全 能够将KMS的数据同步到网上，哦~换一个流行的说法，支持云同步。考虑到在家庭和工作电脑之间进行切换，这点还是需要的。
有一个剑走偏锋的办法，使用现在很多的同步软件，比如说DropBox、DBank和快盘，就可以把那些以文件形式保存数据的KMS信息进行同步。
KMS可能涉及到很多安全和隐私信息，所以必须建立对应帐户和安全机制。允许用户对分享、二次分享、隐私、禁止同步等选项进行详细设置。
5、协同工作 能够针对于部门小组进行知识管理，这属于企业级产品，不在今天讨论范围之内。其实对于团队来说，Wiki也是一个不错的选择，KMS太过于个性化了。
三、我使用的KMS-WizKnowledge 废话了这么多，终于进入重点了，我现在使用的KMS系统-WizKnowledge。
这款Wiz是我最早在Louis那里看到这篇文章《[Wiz(为知个人知识管理)正式版发布- Louis Han
Life Log](http://louishan.com/articles/wiz-personal-knowledge-
management.html)》，当时没有立即试用。之后在看到同步控也发布了相关的一篇日志《WizKnowledge -
支持同步的个人知识整理工具 |
同步控》，最后又看到xDash的一篇《我的个人知识管理工具
[PKM] | 同步控》，终于忍不住诱惑去下了试用。
现在用Wiz也大概一个多月了，我对应我上面的要求对Wiz进行一下品评一下。
1、优点 Wiz使用.ziw格式保存文件，其实这就是zip wiz的缩写，其内质是zip压缩的html文档。这种保存方式可以妥善的保存上文提到的内嵌式媒体，而且内部使
用html+css，能够方便数据展现和迁移。对于大部分选用KMS的朋友来说，使用html+css也不会带来学习曲线。
Wiz使用树形目录保存文件，这样就无法做到任意指定分类，但是带来好处是以文件夹方式保存知识内容，所以总体来说这算是优点。
Wiz的每个文档都支持外接任意类型附件，并将其保存到.ziw中，这对于mm/doc/xls这些特殊类型来说特别有用。
Wiz支持多平台，其中有WM平台，还有Android版本。我试用过Android版本，很弱，问题很多。对我来说，移动手持上面的软体不需要太多功能，可以方便的
查看即可。
Wiz还支持第三方插件，目前官方发布版本集成的有导入文件、导入Google
Docs/日历、博客下载器、发布到博客。其中导入文件支持&amp;quot;.htm;.html; .mht;.nws; .eml; .txt;.ini;
.bat;.inf; .swf;.bmp; .jpg;.jpeg; .gif;.png; .doc;.docx;
.rtf;.ppt;.pptx; .xls;.xlsx;.ziw; .zip;.cpp;.hpp; .cxx;.c;.h;</description>
    </item>
    
  </channel>
</rss>
