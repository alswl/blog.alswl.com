<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Svn on Log4D</title>
    <link>https://blog.alswl.com/tags/svn/</link>
    <description>Recent content in Svn on Log4D</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 21 Jan 2014 00:20:06 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/svn/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 SVN 到 Git，找回丢失的历史</title>
      <link>https://blog.alswl.com/2014/01/renamed-svn-to-git/</link>
      <pubDate>Tue, 21 Jan 2014 00:20:06 +0800</pubDate>
      <guid>https://blog.alswl.com/2014/01/renamed-svn-to-git/</guid>
      <description>前段时间在将公司的 SVN 项目迁移到 Git 上面去，遇到一个很少见的问题： 有一个小伙伴使用 git-svn 做 rename 操作时候，将一个目录 svn mv 了， 导致新目录只存了最近几个月提交历史，丢失了历史信息。对团队开发而言， 历史提交是非常宝贵的财产，我们想了一些办法，把这些数据提取出来。 # 找出丢失之前的版本，列出丢失目录上层的操作记录。 svn log -l 2000 svn://log4d.com/trunk/apps/ios/ | less # 将重命名之前的版本拷贝到一个临时目录 svn copy svn://log4d.com/trunk/apps/ios/nami@43252 svn://log4d.com/trunk/apps/ios/nami_lost # 准备现有代码到 Git git svn clone svn://log4d.com/ -T trunk/apps/ios/nami -t tags -b branches -r 13532 nami #</description>
      <content:encoded><![CDATA[<p>前段时间在将公司的 SVN 项目迁移到 Git 上面去，遇到一个很少见的问题：
有一个小伙伴使用 git-svn 做 <code>rename</code> 操作时候，将一个目录 <code>svn mv</code> 了，
导致新目录只存了最近几个月提交历史，丢失了历史信息。对团队开发而言，
历史提交是非常宝贵的财产，我们想了一些办法，把这些数据提取出来。</p>
<!-- more -->
<pre tabindex="0"><code># 找出丢失之前的版本，列出丢失目录上层的操作记录。
svn log -l 2000 svn://log4d.com/trunk/apps/ios/ | less

# 将重命名之前的版本拷贝到一个临时目录
svn copy svn://log4d.com/trunk/apps/ios/nami@43252 svn://log4d.com/trunk/apps/ios/nami_lost

# 准备现有代码到 Git
git svn clone svn://log4d.com/ -T trunk/apps/ios/nami -t tags -b branches -r 13532 nami

# 修改 .git/config 来加入丢失的历史数据 Remote
[svn-remote &#34;svn-lost&#34;]
	url = svn://log4d.com
	fetch = trunk/apps/ios/nami_lost:refs/remotes/trunk-lost

# 并抓取 Remote 内容
git svn fetch

# Rebase 新代码到恢复过来的历史记录上
git checkout master
git rebase --committer-date-is-author-date trunk-lost
</code></pre><p>其中注意的是手动添加一个 <code>svn-remote</code> 地址为历史数据副本地址。
还有就是 <code>rebase</code> 时候参数 <code>--committer-date-is-author-date</code>
可以保证 <code>rebase</code> 不会造成提交时间被修改，方便回溯。</p>
<p>整整搞了一天，说出来都是泪，希望看到的人用不到，搜到的人用得到。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Subclipse1.2.x的一个Bug</title>
      <link>https://blog.alswl.com/2010/03/a-bug-of-subclipse1-2-x/</link>
      <pubDate>Sat, 20 Mar 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/03/a-bug-of-subclipse1-2-x/</guid>
      <description>背景 在使用Eclipse开发项目，提交属性svn:ignore时候，SVN报出一个错误。 Failed to execute WebDAV PROPPATCH svn: Commit failed (details follow): svn: At least one property change failed; repository is unchanged 整整花了3个小时的时间在这上面纠缠，终于在某个邮件论坛找到一点点线索。 在[Re: Failed to execute WebDAV PROPPATCH](http://marc.info/?l=subversion- users&amp;amp;m=121478169326627&amp;amp;w=2)上面，有人提到Subclipse无法执行，但是Tortuial SVN没有问题 原因 我用的Subclispe还是0</description>
      <content:encoded><![CDATA[<h3 id="背景">背景</h3>
<p>在使用Eclipse开发项目，提交属性svn:ignore时候，SVN报出一个错误。</p>
<blockquote>
<p>Failed to execute WebDAV PROPPATCH</p>
</blockquote>
<p>svn: Commit failed (details follow):</p>
<p>svn: At least one property change failed; repository is unchanged</p>
<p>整整花了3个小时的时间在这上面纠缠，终于在某个邮件论坛找到一点点线索。</p>
<p>在[Re: Failed to execute WebDAV PROPPATCH](<a href="http://marc.info/?l=subversion-">http://marc.info/?l=subversion-</a>
users&amp;m=121478169326627&amp;w=2)上面，有人提到Subclipse无法执行，但是Tortuial SVN没有问题</p>
<h3 id="原因">原因</h3>
<p>我用的Subclispe还是07年在工作室时候安装的1.2.3版本，因为一直懒，所以没有更新。</p>
<h3 id="解决">解决</h3>
<p>卸载老版本的Subclipse，使用新版的Subclipse</p>
<p>卸载方法：Help - Install New Soft - What is already installed -&gt;
Uninstall</p>
<p>安装新版本Subclipse，传送门-&gt;[Subclipse1.6.10](<a href="http://subclipse.tigris.org/files/docume">http://subclipse.tigris.org/files/docume</a>
nts/906/47423/site-1.6.10.zip)</p>
]]></content:encoded>
    </item>
    <item>
      <title>SubVersion建立多个版本库</title>
      <link>https://blog.alswl.com/2010/03/subversion-multi-repository/</link>
      <pubDate>Mon, 08 Mar 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/03/subversion-multi-repository/</guid>
      <description>由于刚接触SVN时间不长，当时建立版本库时候图方便，只建立了一个版本库。现在由于项目需要，需要建立多个版本库，这让我很头疼。经过一番摸索，终于知晓了如何在已 有单个版本库情况下面建立多个版本库。 一、单个库还是多个库？ 原文链接：单个版本库还是多个？ 作者：rocksun** 我前一个 blog中讨 论了版本库的布局，这个条目会尝试回答是选择单版本库单项目还是单版本库存放所有项目的问题，这里没有一个唯一的正确答</description>
      <content:encoded><![CDATA[<p>由于刚接触SVN时间不长，当时建立版本库时候图方便，只建立了一个版本库。现在由于项目需要，需要建立多个版本库，这让我很头疼。经过一番摸索，终于知晓了如何在已
有单个版本库情况下面建立多个版本库。</p>
<h2 id="一单个库还是多个库">一、单个库还是多个库？</h2>
<p><em><strong><strong><strong><strong><strong>原文链接：<a href="http://www.subversion.org.cn/?action-viewnews-itemid-56">单个版本库还是多个？</a> 作者：rocksun</strong></strong></strong></strong></strong></em>**</p>
<blockquote>
<p>我前<a href="http://blogs.open.collab.net/svn/2007/04/subversion_repo.html">一个 blog</a>中讨
论了版本库的布局，这个条目会尝试回答是选择单版本库单项目还是单版本库存放所有项目的问题，这里没有一个唯一的正确答案，但希望本
文可以帮助你理解代价，你才可以做出正确的决定来满足你的需求，下面是单版本库方法的优点：</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<ol>
<li>管理简单，只需要部署一组钩子，备份一个版本库等等。</li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>分支/标签灵活性，因为所有的代码在一个版本库，这样可以容易的 创建跨多个项目的分支或标签。</li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li>移动代码更简单。你或许希望把代码从一个项目移动到另一个，或者将其作为多个项目的库，这样可以容易的将 代码在同一个版本库移动，并保持代码的历史。</li>
</ol>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>下面是单版本库的缺点，以及多版本库的优点。</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<ol>
<li>大小。对付多个小版本库会比对付一个大版本库容易，例如你结束了一个项目，你只需要归档版本库到媒介，然后从磁盘删除并释放空间。也许因 为某些原
因你需要转储/导入版本库，例如利用新的Subversion特性，如果库很小，会很容易做且影响很小，即使你最终希望对所有的版本库作这些事，也比一次
完成的影响小，当然我们假定没有急迫的需要一次完成这些任务。</li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>全局修订版本号。即使这不应该是一个问题，一些人还是要求使用一个修订版 本号，不希望来看到版本库修订版本号的自己增加，造成修订版本历史的横沟。</li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li>访问控制。Subversion的authz机制允许你根据
版本库的部分需要限制访问，如果你有一个项目，只有一些选定的人可以访问，对于一个版本库，这样做很简单。</li>
</ol>
</blockquote>
<blockquote>
<ol start="4">
<li>管理灵活性。如果你有多个版
本库，可以根据版本库/项目的需要实现不同的钩子，如果你希望统一钩子脚本，单个版本库会更好，但是如果每个项目希望自己的email样式，在不同的版本
库中实现会更容易。</li>
</ol>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>这里只是每种方法的赞成和反对意见，希望它可以帮助你做出决定，我更喜欢一个版本库一个项目的方法，如果我有多个项目互相关联，我会喜欢多项目单版
本库的方法，我也希望通过组或团队分离版本库，尽管实际上是项目概念的变种。</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>例如，我有一个文档部门项目使用的版本库，当然，在这个例子里在线帮助经常与应用代码位于一个相同的项目，但是文档组也有他们制作的其他材料，我们
给了他们另一个版本库。同样的，市场部也有一个版本库存放他们需要的东西，例如公司网站。因为我们讨论版本库的布局，这是可以最好工作的决定，也可以说，
在设置好后，改变版本库可能会或多或少有点麻烦。</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>所以，很值得花时间理解需求来决定哪种方法更适合他们。</p>
</blockquote>
<h2 id="二单个版本库向多个版本库的迁移">二、单个版本库向多个版本库的迁移</h2>
<p>1.在原有的版本库repository中建立两个新文件夹，一个用来装原有版本库，一个用来防治新的版本库。</p>
<p>2.将原来版本库文件迁移到新的文件夹中。</p>
<p>3.建立新的版本库目录文件<code>svnadmin create c:repositorysvn_data_2</code></p>
<p><code>4.最重要的一步，分别</code>修改confsvnserve.conf ，去掉<code>realm</code>注释</p>
<p>4.重启SubVersion系统服务。（不知道如何创建服务的看我之前的博文：<a href="http://log4d.com/2010/03/svn-server-setup">配置SVN服务端 «
Log4D</a>）</p>
<p>5.在客户端找到新的svn地址，如<code>svn://192.168.0.1/svn_data_1</code>和<code>svn://192.168.0.1/svn_data_2</code></p>
<p>6.大功告成！</p>
<p>PS:切记客户端的原有代码在迁移前进行提交，然后重新获取新的地址下的代码文件。</p>
]]></content:encoded>
    </item>
    <item>
      <title>TortoiseSVN中文版安装</title>
      <link>https://blog.alswl.com/2010/03/tortoisesvn-installation-chinese-pacakge/</link>
      <pubDate>Fri, 05 Mar 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/03/tortoisesvn-installation-chinese-pacakge/</guid>
      <description>虽然大部分情况下我都是用Subclipse连接SVN服务器，但是为了让整个团队在Delphi下使用上SVN，就需要使用SVN的客户端了，TortoiseSV N是目前比较流行的SVN客户端，目前最新版是1.6.7。 传送门之-[TortoiseSVN-1.6.7.18415-win32-svn-1.6.9.msi](http://downloads.sourceforg e.net/tortoisesvn/TortoiseSVN-1.6.7.18415-win32-svn-1.6.9.msi?download) 下面是一片TortoiseSV</description>
      <content:encoded><![CDATA[<p>虽然大部分情况下我都是用Subclipse连接SVN服务器，但是为了让整个团队在Delphi下使用上SVN，就需要使用SVN的客户端了，TortoiseSV
N是目前比较流行的SVN客户端，目前最新版是1.6.7。</p>
<p>传送门之-[TortoiseSVN-1.6.7.18415-win32-svn-1.6.9.msi](<a href="http://downloads.sourceforg">http://downloads.sourceforg</a>
e.net/tortoisesvn/TortoiseSVN-1.6.7.18415-win32-svn-1.6.9.msi?download)</p>
<p>下面是一片TortoiseSVN中文版的安装方法，转载过来。</p>
<p>原文出处：<a href="http://www.svn8.com/svnpz/20090622/6696.html">TortoiseSVN 中文版 安装 -Svn中文网</a></p>
<p>××××______××××<a href="http://www.svn8.com/svnpz/20090622/6696.html"></a></p>
<p>TortoiseSVN 是 Subversion 版本控制系统的一个免费开源客户端，可以超越时间的管理文件和目录。</p>
<p>如果是新安装,可以到
<a href="http://tortoisesvn.net/downloads">http://tortoisesvn.net/downloads</a>
下载最新版本.一般32位安装版和64位安装版.另外按安装方式来分会分为msi与GnuPG.
GnuPG这东西对于很多人来说不怎么熟识.而且在windows下,我只下载msi的安装文件</p>
<p>先把TortoiseSVN安装好.安装基本上是点下一步就完成了.所以在这里就赘述了。</p>
<p>安装包里面默认语言是英语,对于很多中国人来说使用英语还是不怎么习惯. 不过TortoiseSVN是多语言软件,他会有一个中文包,还是在
<a href="http://tortoisesvn.net/downloads">http://tortoisesvn.net/downloads</a>
下载下了需要的语言包安装.安装完后,不用重启,可以在setting里面的语言设计里找到刚才安装的语言.</p>
<p>可能出现的问题</p>
<p>1,安装语言包失败 或者 安装语言包后没有中文选项</p>
<p>如果没有选项就是代表安装失败,原因可能是版本不对,例如我下载的TortoiseSVN的安装文件名是TortoiseSVN-
1.6.2.16344-win32-svn-1.6.2.msi,就是说我安装的文件我是1.6.2版本,然后更新版本号是16344.语言包的安装文
件也是类似这样.LanguagePack_1.6.2.16344-win32-zh_CN.msi,软件版是1.6.2,更新版本号是16344.只
要软件版跟更新版对得上.基本上不会出现问题.所以安装前先确认这两个版号.</p>
<p>2,对于已经安装旧版的TortoiseSVN的人来说,可能已经找不到语言包的安装了.</p>
<p>不过没有关系,可以自己重写一下载的url <a href="http://sourceforge.net/project/downloading.php?groupname=tortoisesvn&amp;filename=LanguagePack_1.6.2.16344-win32-zh_CN.msi&amp;use_mirror=nchc">http://sourceforge.net/project/downloading.php?groupname=tortoisesvn&amp;filename=LanguagePack_1.6.2.16344-win32-zh_CN.msi&amp;use_mirror=nchc</a>
看url很容易 看出来filenamer=后面的就是我们需要下载的文件名.而且文件名都很有规则.</p>
<p>只要TortoiseSVN的 about us里就会看到以下的内容了。</p>
<p>我的TortoiseSVN的版是TortoiseSVN 1.5.1, Build 13563 - 32 Bit 。我只需要把上面的url改成下面的就可以了
<a href="http://sourceforge.net/project/downloading.php?groupname=tortoisesvn&amp;filename=">http://sourceforge.net/project/downloading.php?groupname=tortoisesvn&amp;filename=</a>
LanguagePack_1.5.1.13563-win32-zh_CN.msi&amp;use_mirror=nchc</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用subclipse代理</title>
      <link>https://blog.alswl.com/2010/03/use-subclipse-with-proxy/</link>
      <pubDate>Wed, 03 Mar 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/03/use-subclipse-with-proxy/</guid>
      <description>公司网络必须使用代理，今天更新自己写的一个Utils到Google Project Host时候，出现无法打开SVN服务器的现象，我在浏览器测试了那几个目录，都没有问题，猜到是代理连接的问题。 Eclipse的代理设置在&amp;quot;General-Network Connections&amp;ldquo;中设置，很明显，Subclipse不在这里设定。 PS：在写的是一个DataBase-&amp;gt;Java 3层代码生成器，想仿</description>
      <content:encoded><![CDATA[<p>公司网络必须使用代理，今天更新自己写的一个Utils到Google Project
Host时候，出现无法打开SVN服务器的现象，我在浏览器测试了那几个目录，都没有问题，猜到是代理连接的问题。</p>
<p>Eclipse的代理设置在&quot;<strong>General-Network Connections</strong>&ldquo;中设置，很明显，Subclipse不在这里设定。</p>
<p>PS：在写的是一个DataBase-&gt;Java 3层代码生成器，想仿照<a href="http://www.maticsoft.com/"><strong>动软.NET生成器</strong></a>那
样写，今天刚写完生成Bean的一些版本，自己计划在半年时间内写一个beta版。</p>
<p>下面是解决办法，来自 <a href="http://blog.baimusenlin.com/83.html">百亩森林 » 解决windows下subclipse穿过代理连接subversion服务器</a></p>
<p>×××××&amp;&amp;以下原文&amp;&amp;×××××</p>
<p>解决windows下subclipse穿过代理连接subversion服务器</p>
<p>1、cmd命令提示符输入 echo %APPDATA%</p>
<p>2、进入第一步输出的目录下，并找到Subversion目录(如C:Documents and
SettingsAdministratorApplication DataSubversion)，注意此目录为隐藏目录。</p>
<p>3、在servers文件中的最后[global]后增加</p>
<pre><code>http-proxy-host =192.168.1.1
http-proxy-port =80
http-proxy-username =username
http-proxy-password =password
</code></pre>
]]></content:encoded>
    </item>
    <item>
      <title>配置SVN服务端</title>
      <link>https://blog.alswl.com/2010/03/svn-server-setup/</link>
      <pubDate>Tue, 02 Mar 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/03/svn-server-setup/</guid>
      <description>实在忍受不了VSS了，下决心自己在虚拟机配置一个SVN服务器，然后再在服务器上安装一个SVN服务器端。以前都是使用现成的SVN服务器，或者使用Google Code提供的Project Host，今天就自己动手，丰衣足食吧。 话说VSS的确过时了，好多特性很麻烦，也难怪Louis嘲笑我Eclipse用VSS了～ 什么是SVN服务器 Subversion，简称SVN，是一个开放源代码的版本控制系统（SCM），</description>
      <content:encoded><![CDATA[<p>实在忍受不了VSS了，下决心自己在虚拟机配置一个SVN服务器，然后再在服务器上安装一个SVN服务器端。以前都是使用现成的SVN服务器，或者使用Google
Code提供的Project Host，今天就自己动手，丰衣足食吧。</p>
<p>话说VSS的确过时了，好多特性很麻烦，也难怪Louis嘲笑我Eclipse用VSS了～</p>
<h2 id="什么是svn服务器">什么是SVN服务器</h2>
<p><strong>Subversion</strong>，简称<strong>SVN</strong>，是一个开放源代码的版本控制系统（SCM），相对于的RCS、CVS，采
用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。（via
<a href="http://zh.wikipedia.org/zh-cn/Subversion">wiki</a>）</p>
<p>关于SVN / VSS / CVS等源代码管理系统已经有很多比较的文章了，我这里推荐几篇</p>
<p><a href="http://better-scm.berlios.de/comparison/comparison.html">Better SCM Initiative : Comparison</a>
这篇是老外写的一篇各种SCM比较，内容相当翔实，可以作为论文参考资料了都</p>
<p><a href="http://www.cnblogs.com/yansc/archive/2008/09/27/1300954.html">SVN对比VSS,不知这样够了没 - 哥不是传说，是寂寞 -博客园</a> 国人的一篇比较</p>
<h2 id="svn服务端安装">SVN服务端安装</h2>
<p>Subversion官网已经迁移到Apache项目组下了，点击[Apache Subversion](<a href="http://subversion.apache.or">http://subversion.apache.or</a>
g/)访问Subversion官网，上面提供各个操作系统的版本下载，Windows环境下面分了**CollabNet **/ **Tigris.org
**/ **SlikSVN **/ <strong>VisualSVN</strong> 四个链接，我选择Tigris.org进行下载。</p>
<p>点击[Setup-Subversion-1.6.6.msi](<a href="http://subversion.tigris.org/files/documents/15/46906">http://subversion.tigris.org/files/documents/15/46906</a>
/Setup-Subversion-1.6.6.msi)下载截至2010-03-02的最新版</p>
<p>下载完之后，一路Next就可以安装完毕，使用 <strong>svn &ndash;version</strong> 测试一下能不能显示以下信息，如果可以，则说明安装没有问题了。</p>
<blockquote>
<p>C:Documents and SettingsAdministrator&gt;svn &ndash;version</p>
</blockquote>
<p>svn，版本 1.6.6 (r40053)</p>
<p>编译于 Oct 26 2009，20:14:36</p>
<p>版权所有 (C) 2000-2009 CollabNet。</p>
<p>Subversion 是开放源代码软件，请参阅 <a href="http://subversion.tigris.org/">http://subversion.tigris.org/</a> 站点。</p>
<p>此产品包含由 CollabNet(http://www.Collab.Net/) 开发的软件。</p>
<p>可使用以下的版本库访问模块:</p>
<ul>
<li>ra_neon : 通过 WebDAV 协议使用 neon 访问版本库的模块。</li>
</ul>
<ul>
<li>
<p>处理&quot;http&quot;方案</p>
</li>
<li>
<p>处理&quot;https&quot;方案</p>
</li>
</ul>
<ul>
<li>ra_svn : 使用 svn 网络协议访问版本库的模块。 - 使用 Cyrus SASL 认证</li>
</ul>
<ul>
<li>处理&quot;svn&quot;方案</li>
</ul>
<ul>
<li>ra_local : 访问本地磁盘的版本库模块。</li>
</ul>
<ul>
<li>处理&quot;file&quot;方案</li>
</ul>
<ul>
<li>ra_serf : 通过 WebDAV 协议使用 serf 访问版本库的模块。</li>
</ul>
<ul>
<li>
<p>处理&quot;http&quot;方案</p>
</li>
<li>
<p>处理&quot;https&quot;方案</p>
</li>
</ul>
<h2 id="svn服务端的配置">SVN服务端的配置</h2>
<p>1.手动创建一个文件夹，作为存储数据的地方，比如&quot;<code>**c:repository**</code>&quot;</p>
<p>2.在命令提示符下面输入<code>svnadmin create c:repository</code>，如果执行正确的话，会在repository文件夹下形成4个文件夹2个文件。</p>
<p>3.执行<code>svnserve.exe -d -r c:repository</code>
来启动服务，在外部就能通过TortoiseSVN这些SVN客户端进行访问。关于TortoiseSVN使用，我会在之后的文章中整理出来。</p>
<p>使用上述第3个步骤运行SVN服务器会很麻烦，必须开着一个CMD窗口，通常，我们后将这个功能作为Windows的一个服务载入，这样就可以开机自动启动，不用人去
维护了。</p>
<p>执行脚本 <code>sc create svn binpath= &quot;&quot;C:Program FilesSubversionbinsvnserve.exe&quot; --service -r&quot;C:repository&quot;&quot; displayname= &quot;Subversion Server&quot; depend= Tcpip start= auto</code> 就可以将svnserve程序作为服务载入。关于sc命令，可以点击[这里](<a href="http://baike.baidu.com/view/">http://baike.baidu.com/view/</a>
1367668.htm)查看更多。</p>
<h2 id="svn服务器用户管理">SVN服务器用户管理</h2>
<p>设定SVN服务器用户的权限，需要修改 confsvnserve.conf 文件，如下所示</p>
<pre><code>[general]
# password-db = passwd
# anon-access = none
# auth-access = write
# authz-db = authz
# realm = My First Repository 
</code></pre>
<p>去之每行开头的#，其中第二行是指定身份验证的文件名，即passwd文件.a access = none
是匿名用户不能访问，必须要有用户名和密码。（注意：问这，一定要注意格式去掉注释后要顶格不能有空）</p>
<p>用户管理相当简单，只需要在confpasswd中打开相应的权限，之后在confpasswd 加入用户就可以了。</p>
<pre><code>[users]
# harry = harryssecret
# sally = sallyssecret
alswl = alswl
jason = jason
</code></pre>
<p>格式为&quot;用户名 = 密码&quot;，如可插入一行：mm = mm，即为系统添加一个mm，密码为mm的用户。（注意顶格写不要有空隙）</p>
<p>用户权限管理，如果是简单模式，可以直接将 confsvnserve.conf 中的 <strong>authz-db = authz</strong> 前面加上 #
即可，关于详细的权限分组管理，我现在还一知半解，等我搞明白再分享…… &ndash;_&ndash;#</p>
<h2 id="参考链接">参考链接</h2>
<p><a href="http://www.svn8.com/svnsy/20090606/6224.html">SVN服务端的配置 - Svn中文网</a>
我今天所有看的文章中最详细准确的一篇</p>
<p><a href="http://blog.csdn.net/songrun/archive/2008/11/29/3410428.aspx">Subversion 安装与配置 - Panda -
CSDN博客</a></p>
<p><a href="http://www.iusesvn.com/bbs/thread-158-1-1.html">windows安装基于Apache的SVN服务器(包括SSL配置)[2007-8-19更新] - Windows下Subversion安装使用 -
SVN中文论坛</a> 这篇虽然老，但是条理很清晰</p>
<h2 id="参考书籍">参考书籍</h2>
<p><a href="http://www.subversion.org.cn/svnbook/">使用Subversion进行版本控制</a></p>
<blockquote>
<p>这是使用Subversion进行版本控制在 Subversion中文站的在线主页，本书的在线主页在<a href="http://svnbook.red-bean.com/">http://svnbook.red-
bean.com/</a>。 这是一本关于
<a href="http://subversion.tigris.org/">Subversion</a>的 <a href="http://www.subversion.org.cn/svnbook/1.4/svn.copyright.html">自
由</a>图书
<a href="http://subversion.tigris.org/">Subversion</a>，Subversion
被设计为CVS的替代产品。你可能从本页的布局上也猜到了，本书通过<a href="http://www.oreilly.com/catalog/0596004486/">O&rsquo;Reilly
Media</a>出版。</p>
</blockquote>
<p>传送门-<a href="http://www.subversion.org.cn/svnbook/1.4/svnbook.pdf">PDF版本下载</a></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
