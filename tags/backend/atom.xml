<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>backend on Log4D</title><link>https://blog.alswl.com/tags/backend/</link><description>Recent content in backend on Log4D</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 04 Jul 2019 19:58:28 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/backend/atom.xml" rel="self" type="application/rss+xml"/><item><title>漫谈前后端天花板</title><link>https://blog.alswl.com/2019/07/frontend-backend-ceiling/</link><pubDate>Thu, 04 Jul 2019 19:58:28 +0800</pubDate><guid>https://blog.alswl.com/2019/07/frontend-backend-ceiling/</guid><description>在阿里，我们不得不承认一个事实：前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。 在阿里，虽然前端的工作已 经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。
- 玉伯 2013 年 阿里前端的困局与突围
image from Abbey Arches Architecture - Free photo on Pixabay
和 G 总论道 前几天和某大厂前端负责人 G 聊职业生涯发展，聊着聊着就谈到了前端和后端职业天花板。 我表达了自己观点：后端职业天花板更高，这是由职能细分决定。
后端（服务端）概念比较宽泛，常见分类可以有应用开发工程师、中间件工程师、甚至可以包含运维、数据工程师、算法工程师。 本文我只将后端工程师限定在应用开发工程师以及衍生的框架、库开发工程师。 前端这边由于引入大前端概念，概念也比较广，包含：Web 前端、移动端（iOS + Android 客户端）、桌面端（PC 端）。 我们也限定在这几个方向的应用开发。
有些同学可能不服气，现在基于 Node.js 也能写后端应用，并且已经有越来越多成熟产品。 单页应用推动了 React / React Native / Vue 等技术发展，这类前端框架也需要基于 MVC / MVVM 设计模式管理复杂数据流。 在端场景，Hybrid 应用愈发成熟，并且在一些特定领域比如 AI，iOS 也引入 Core ML 技术。 这样天花板还不够高么？
是的，尽管前端近年发展迅猛，探索出多种新技术，从更广泛端技术来看，Android / iOS 也迎来爆炸式发展， 几乎隐隐有势头盖过后端趋势。 随着业务复杂度提升， Web Frontend / Android / iOS 开发困难度愈发提升；随着科技普惠云计算发展， 技术门槛会进一步降低，当前前端工程师会有更宽阔空间。 但是仍然认为后端是更难掌握，职业天花板更高。</description></item></channel></rss>