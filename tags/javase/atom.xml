<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>javase on Log4D</title>
    <link>https://blog.alswl.com/tags/javase/</link>
    <description>Recent content in javase on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 18 Apr 2010 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/javase/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最近在学的技术</title>
      <link>https://blog.alswl.com/2010/04/recent-study-technologys/</link>
      <pubDate>Sun, 18 Apr 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/04/recent-study-technologys/</guid>
      <description>根据这篇日志的题目，必然是一篇水文，我思量再三，还是把它放出来，这些技术的接触把我带入了另一个广阔的天堂。这是我学Java以来的第二个里程碑。
使用Java1年半，1年前开始JSP编程，一直是我和周围的朋友自己摸索，学校没有开Java课，也没有参加什么培训课程，面对庞大的Java开源分支，我一直摸索 ，不能登堂入室。
万分感谢倪经理这1个月来的教导，他给了我一个不一样的Java。
iBatis 如果说Hibernate是一款自动化的导弹，那么iBatis则是一款轻型的半自动步枪，简介、高效、方便配置。加上iBator这个神器，iBatis可以使开发 效率几倍提升。
年前开始学习iBatis，想借其思想自己完成一个简单的ORM系统，3月份时候，公司的一个新框架采用了iBatis，更是给我提供了一个绝佳的Playgroun d。Hibernate和iBatis有各自的适合使用的领域，不能单纯的说谁好谁不好，不过iBatis绝对值得尝试。
动软的.net生成器使用的DAL接入层也是使用的iBats.net做数据接入。
Jaas 我对权限控制的理解，从最早的单表用户字段管理，到贴吧的基于角色权限控制，直到后来公司使用的基于权限+菜单控制，最好到现在的Jaas提供的资源-角色-权限- 菜单 控制体系。细化到原子级的权限控制带来了莫大的好处，这个很大程度归功于Jaas。
Java Authentication Authorization Service（JAAS，Java验证和授权API）提供了灵活和可伸缩的机制来保证客 户端或服务器端的Java程序。Java早期的安全框架强调的是通过验证代码的来源和作者，保护用户避免受到下载下来的代码的攻击。JAAS强调的是通过验证谁在运行 代码以及他／她的权限来保护系统面受用户的攻击。它让你能够将一些标准的安全机制，例如Solaris NIS（网络信息服务）、Windows NT、LDAP（轻量目录存取协议），Kerberos等通过一种通用的，可配置的方式集成到系统中。
我对这套权限系统的学习还不透彻，还有很多地方需要琢磨和研究，学无止境啊。
ESB 很惭愧，知道现在才知道这个名词，ESB的思想其实在很多地方得到了灌输，我一直自认经常会跟进主流技术，现在才发现果然还是自己道行不够。
ESB全称为Enterprise Service Bus，即企业服务总线。它是传统中间件技术与XML、Web服务等技术结合的产物。ESB提供了网络中最基本的连接中枢，是构筑企业神经系统的必要元素
ESB的出现改变了传统的软件架构，可以提供比传统中间件产品更为廉价的解决方案，同时它还可以消除不同应用之间的技术差异，让不同的应用服务器协调运作，实现了 不同服务之间的通信与整合。从功能上看，ESB提供了事件驱动和文档导向的处理模式，以及分布式的运行管理机制，它支持基于内容的路由和过滤，具备了复杂数据的传输能 力，并可以提供一系列的标准接口。
Mule Mule是一个企业服务总线(ESB)消息框架，也就是上面所说的ESB的一个开源框架实现。Mule的优势体现在：
1.基于J2EE1.4的企业消息总线(ESB)和消息代理(broker).
2.可插入的连接性:比如 Jms,jdbc,tcp,udp,multicast,http,servlet,smtp,pop3, file,xmpp等.
3.支持任何传输之上的异步，同步和请求响应事件处理机制.
4.支持Axis或者Glue的Web Service.
5.灵活的部署结构 [Topologies]包括Client/Server, P2P, ESB 和Enterprise Service Network.
与Spring 框架集成:可用作ESB 容器，也可以很容易的嵌入到Spring应用中. 7.使用基于SEDA处理模型的高度可伸缩的企业服务器.
8.强大的基于EIP模式的事件路由机制等.
Mule发布最新版本1.1，这个发布包括集成了JBI，对 BPEL的支持,还增加一些新的传输器(transport)Quartz,FTP,RMI与EJB等。
Tiles 我之前认识是已经是一种比较好的页面实现方式，Tiles的出现粉碎了我的认识。Tiles框架提供了一种模板机制，模板定义了网页的布局，同一模 板可以被多个Web页面共用。通过配置文件进行协调，把页面文件的分层应用到极致。
Apache Tiles 是一个创建简单的网络应用用户界面的模板框架，Tiles让用户可以在运行中使用定义好的小模块装配成完整的页面。
采用基本的JSP语句创建复合式网页 -&amp;gt; 采用JSP的include指令创建复合式网页 -&amp;gt; 采用Tiles:Insert标签创建复合式网页 -&amp;gt; 采用Tiles模板创建复合式网页
Web压力测试 这是我在翻阅大学里软件工程课孙老师给05届毕业生的PPT时候发现的内容。PPT体面推荐了3种Web压力测试工具。
Web Application Stress Tool, Microsoft</description>
    </item>
    
    <item>
      <title>Java笔记 使用反射来改进BaseDao</title>
      <link>https://blog.alswl.com/2009/11/note-the-use-of-java-reflection-to-improve-the-basedao/</link>
      <pubDate>Tue, 17 Nov 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/11/note-the-use-of-java-reflection-to-improve-the-basedao/</guid>
      <description>关于反射 反射的定义（via Wiki）：在计算机科学中，反射是指一种特定类型的计算机程序能够在运行时以一种依 赖于它的代码的抽象特性和它的运行时行为的方式被更改的特性。用比喻来说，那种程式能够&amp;quot;观察&amp;ldquo;并且修改自己的行为。
Java中的反射示例如下：
package dddspace.job.exercise1116; public class Foo {
public void fun(String str) {
System.out.println(str);
}
}
package dddspace.job.exercise1116; import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
public class ReflectionDemo {
public static void main(String[] args) throws SecurityException,
NoSuchMethodException, ClassNotFoundException, InstantiationException,
IllegalAccessException, IllegalArgumentException,
InvocationTargetException {
// 不使用反射
Foo foo = new Foo();
foo.fun(&amp;ldquo;no reflection&amp;rdquo;);
// 使用反射
String className = &amp;ldquo;dddspace.job.exercise1116.Foo&amp;rdquo;;
String funName = &amp;ldquo;fun&amp;rdquo;;
// 获取类名
Class cls = Class.forName(className);
// 创建Object实例</description>
    </item>
    
    <item>
      <title>Java入门好书《Java JDK6学习笔记》</title>
      <link>https://blog.alswl.com/2009/11/getting-started-with-java-books-java-jdk6-study-notes/</link>
      <pubDate>Mon, 16 Nov 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/11/getting-started-with-java-books-java-jdk6-study-notes/</guid>
      <description>《Java JDK6学习笔记》(via 豆瓣，via ChinaPub)是我最近在看的一本书。虽然名为Java学习笔记，其实** 深入浅出的讲解了Java这门语言。书中的语言颇有白文风格**，适合没有语言基础的同学学习，也适合对一些概念不清楚的开发人员。
我很快的翻阅了半本书，作者的范例代码简单精要(&amp;ldquo;Java笔记split/不定长度参数/泛型类型通配符&amp;rdquo;中示例代码就是改编自本书)。我现在正在阅读线程、反射和Annotation这三块内容，看得我酣畅淋漓啊。
我算是概念模糊的开发者，现在准备笔试/面试所以恶补一下平时接触比较少的概念。我虽然也有《Think in Java》这本至尊级的书，但是显然这本书研究过深，不适合快速复习。《Java JDK6学习笔记》就成了我首选了。（感谢CUMT图书馆！）
豆瓣简介：
本书是作者良葛格本人近几年来学习Java的心得笔记，结构按照作者的学习脉络依次展开，从什么是Java、如何配置Java开发环境、基本的Java语法到程序 流程控制、管理类文件、异常处理、枚举类型、泛型、J2SE中标准的API等均进行了详细介绍。本书还安排了一个&amp;quot;文字编辑器&amp;quot;的专题制作。此外，Java SE6的新功能，对Java lang等套件的功能加强，以及JDBC4.0、Apache Derby纯Java数据库等新增功能，本书也都予以介绍。
本书门槛很低，只要您了解Windows基本操作，无须有其他程序语言的基础，甚至没有接触过Java，都可以通过本书扎扎实实地学习Java。而对于一些曾经学 习过Java，但概念和基础仍不扎实的读者，本书也准备了一些面向对象的观点与进阶的议题可供参考。
作者在书中其中有几句话我颇为欣赏：
学习一个新的事物时，如果遇到一些概念无法很快理解，这可能是因为要理解概念会需要其他概念先建立起来，所以先暂时放下这个疑问也是一个学习方法，称之为&amp;quot;存疑&amp;quot; ，在以后的学习过程中待必要的概念学会后，目前的疑问自然也会解开。
下面是豆瓣snable的评论，深得我心。
每当有学习java的人让我推荐书籍的时候，我都会毫不犹豫地向他推荐《Java学习笔记》。这本书的上一版是前几年读的了，当时还是按jdk1.5写的。本书最 大特点是：
1、内容翔实。说翔实不是说它厚，java书里有很多厚而无物的滥书，本书基本覆盖了javaSE的内容，总体说达到中偏高的层次，有些高级内容没有涉及。每一部 分都有其他书籍里没有介绍或者介绍不全面的东西，可以说言之有物。
2、叙述清楚。对于一些易错或难易理解的概念，作者总是能用通俗的语言讲明白，而不像某些书那样&amp;quot;遮遮掩掩&amp;quot;。这对于初学者无疑是最有帮助的。我读这本书上一版时已经 学过java，当时的目的是为了了解jsk1.5的新变化，但在读的过程中才发现自己对很多点的理解是模糊的。所以个人认为这本书不止适合初学者。
3、例题有力。例题是最容易帮助我们理解问题的工具，本书的例题都非常有针对性。所选例题有一定实用性，难度适中，不是Toy Program。
每个人的理解方向不一样，不可能有一本书适合所有学习者，但我坚信好书最终总会被大多数人承认的，这也是我推荐此书的目的。书的价格略高，但物有所值，有条件可以 去图书馆借或者读电子版。
另外再多写几句吧，其他推荐的java书籍还有两本：
1、《Java2核心技术》，此书分上下两卷（基础、高级），优点在于层次比上边那本书要高，话说回来，书也厚了一倍，适合当手册用。此书版本变化频繁，现在已经 到了中文第八版，但个人感觉没有超越第六版翻译的高度。
2、《Java编程思想》，大名鼎鼎，作者对java的理解程度让人五体投地，优点是就是内容相当深入。个人认为本书试图一次性全面解释清楚某些问题，不适合初学者读 。这种书必须长期反复地阅读，常读常新。
再多说一句吧，有一本《JAVA实例技术手册》是我买过最失败的一本书，缺点在于：1、内容不深入；2实例没有想象中的实用，或者有的根本就没有实用价值。
如果你还没有学过Java却想学，我强烈推荐此书。￥59.9绝对物有所值，呃，电子书嘛，给个Google搜索链接吧。</description>
    </item>
    
    <item>
      <title>Java笔记 split/不定长度参数/泛型类型通配符</title>
      <link>https://blog.alswl.com/2009/11/java-notes-_split-variable-length-parameter-generic-type-wildcard/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/11/java-notes-_split-variable-length-parameter-generic-type-wildcard/</guid>
      <description>今天看了一下午《Java学习笔记》，作者林信良，花名良葛格。从书中所获颇 多，正所谓温故而知新，我就把今天的&amp;quot;新&amp;quot;总结一下，加深记忆。良葛格也提倡&amp;quot;在网上写文章是我记录所学的一种方式&amp;quot;。
split的正则式和其中的正则式 C语言其中有函数strtok，就是按某些char对字符串进行切割。下面给出一个C下面的范例
char str[] = &amp;quot;now # is the time for all # good men to come to the # aid of their country&amp;quot;; char delims[] = &amp;quot;#&amp;quot;; char *result = NULL; result = strtok( str, delims );
while( result != NULL ) {
printf( &amp;ldquo;result is &amp;ldquo;%s&amp;quot;n&amp;rdquo;, result );
result = strtok( NULL, delims );
}
在Java中也有类似的StringTokenizer，但是在JDK5中，已经被标记为Legacy Class(遗产类)，推荐使用String.split(String regex)，可以接受正则表达式。范例如下。
private void init() { Scanner scanner = new Scanner(System.</description>
    </item>
    
    <item>
      <title>使用XOM类库对Java对象进行序列化</title>
      <link>https://blog.alswl.com/2009/06/xom-class-library-to-use-java-objects-serialization/</link>
      <pubDate>Wed, 10 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/xom-class-library-to-use-java-objects-serialization/</guid>
      <description>校内工具需要保存用户名和帐号，我就想把帐号信息作为一个XiaoneiUser类，然后对其进行对象持久化。 Google下的方法有好几种方法进行持久化，JDOM， DOM4J, SAX等。我看了之后，感觉都比较麻烦，我个人比较喜欢使用jdk自带的工具，但是查阅jdk api之后，感觉使用 javax.xml.* 下工具开发更加困难。 我仅仅是需要对一个简单的对象进行持久化来保存数据，并不需要太多太复杂的功能。最后我决定使用《Thinking in Java》推荐的开源类库：XOM 猛击这里打开www.xom.nu 友情提示一下，网站可以打开，但是下载的连接貌似被墙了，至少我教育网连不上去。推荐 一个在线代理服务器古狗在线代理（猛击这里打开），通过它就可以下载类库了。 使用类库非常简单，我这里提供个小例子。XiaoneiUser类
package cn.dddspace.xiaonei.bean; import java.io.OutputStream; import nu.xom.*; public class XiaoneiUser { /** * 用户Email */ private String userEmail; /** * 用户Password */ private String userPassword; public String getUserEmail() { return userEmail; } public void setUserEmail(String userEmail) { this.userEmail = userEmail; } public String getUserPassword() { return userPassword; } public void setUserPassword(String userPassword) { this.userPassword = userPassword; } /** * 将类转换为XML * * @return */ public Element getXML() { Element userE = new Element(&amp;#34;xiaoneiUser&amp;#34;); Element userEmailE = new Element(&amp;#34;userEmail&amp;#34;); userEmailE.</description>
    </item>
    
    <item>
      <title>java.net.*操作session/GET/POST方法</title>
      <link>https://blog.alswl.com/2009/06/java-net-operation-session-get-post-method/</link>
      <pubDate>Tue, 09 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/06/java-net-operation-session-get-post-method/</guid>
      <description>终于又考完一门试，开始做课程设计了，结果课程设计给工作室一个尾气3个月的项目，而这次的先用我写的贴吧放上去，我变得暂时空闲了，开始着手写校内开心农场小工具- 全能拖拉机。 首先要解决的就是校内登录的问题，那就是Get/Post方法了，还有用户状态保存，就是session的操作。Java不同于C#，那位可以集成系统 的浏览器或者之间创建一个Browser。
开始写了自己的第一个版本。
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.net.MalformedURLException; import java.net.ProtocolException; import java.net.URL; import java.net.HttpURLConnection; public class FarmerHelper {
/**
@param args @throws ProtocolException
*/
public static void main(String[] args) throws ProtocolException { String loginUrlStr = &amp;ldquo;http://login.xiaonei.com/Login.do&amp;quot;;
String homeUrlStr = &amp;ldquo;http://home.xiaonei.com/Home.do&amp;quot;;
URL loginUrl = null;
URL homeUrl = null;
HttpURLConnection loginConn = null;
HttpURLConnection homeConn = null;
try {
loginUrl = new URL(loginUrlStr);
homeUrl = new URL(homeUrlStr);</description>
    </item>
    
  </channel>
</rss>
