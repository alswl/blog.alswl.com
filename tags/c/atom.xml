<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>c on Log4D</title>
    <link>https://blog.alswl.com/tags/c/</link>
    <description>Recent content in c on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 30 Mar 2014 15:41:43 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/c/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hiredis 源码学习</title>
      <link>https://blog.alswl.com/2014/03/hiredis/</link>
      <pubDate>Sun, 30 Mar 2014 15:41:43 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2014/03/hiredis/</guid>
      <description>前段时间学习 Redis 时候，听到 hiredis 的大名，正好也在做异步的学习，就找来代码学习一下。 我几乎不太会 C，仅限于最简单的语法，完全没有在生产环境中写过， 所以先看个 Client 简单代码，下次看 Memcached 代码应该会更顺畅一些。 Hiredis 是用 C 写的 Redis 客户端，对 Redis 协议进行了简单的封装， 同时提供了同步和异步的两种 API。Hiredis 的代码位于 https://github.com/redis/hiredis。 一分钟使用入门 同步 API 的调用方法： redisContext *context =</description>
    </item>
    
    <item>
      <title>使用 OpenSSL API 进行安全编程，第 2 部分: 安全握手</title>
      <link>https://blog.alswl.com/2009/03/safe-use-of-openssl-api-programming-part-2-security-handshake/</link>
      <pubDate>Tue, 31 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/safe-use-of-openssl-api-programming-part-2-security-handshake/</guid>
      <description>原文链接：[http://www.ibm.com/developerworks/cn/linux/l-openssl2.html](http://www.i bm.com/developerworks/cn/linux/l-openssl2.html) 怎么都复制不过来，提示含有敏感字眼，我晕，这是IBM文档库里的啊，崩溃了 我都不要言论自由，只想保存一些经典的文章而已，河蟹啊````</description>
    </item>
    
    <item>
      <title>OpenSSL 编程入门【转载-这篇很精】</title>
      <link>https://blog.alswl.com/2009/03/introduction-to-openssl-programming/</link>
      <pubDate>Thu, 19 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/introduction-to-openssl-programming/</guid>
      <description>**OpenSSL **编程入门 作者:Eric Rescorla on Sat, 2001-09-01 01:0 如果你急切的想构建一个简单的Web客户端和服务器对,这时你就需要使用SSL了.. SSL是一种保护基于TCP协议的网络应用最快而且最简单的的方法,如果你正在用C语言做开发,那么对于你来说,最好的选择可能就是使用OpenSSL了. OpenSSL是在Eric Young的SSLeay包的基础上对TSL/SSL的一个免费的执行(类似于BSD方式的License).然而,</description>
    </item>
    
    <item>
      <title>OpenSSL中的BIO【转载】</title>
      <link>https://blog.alswl.com/2009/03/openssl-s-bio/</link>
      <pubDate>Thu, 19 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/openssl-s-bio/</guid>
      <description>SSL类型的BIO &amp;mdash;根据openssl doccryptobio_f_ssl.pod翻译和自己的理解写成 （作者：DragonKing, Mail: wzhah@263.net ,发布于：http://openssl.126.com 之openssl专业论坛） 从名字就可以看出，这是一个非常重要的BI O类型，它封装了openssl里面的ssl规则和函数，相当于提供了一个使用SSL很好的有效工具，一个很好的助手。其定义（openss</description>
    </item>
    
    <item>
      <title>用openssl编写ssl,tls程序实例【转载-作者：yawl(yawl@nsfocus.com) 】</title>
      <link>https://blog.alswl.com/2009/03/openssl-prepared-using-ssl-tls-instance/</link>
      <pubDate>Wed, 18 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/openssl-prepared-using-ssl-tls-instance/</guid>
      <description>◆ 用openssl编写ssl,tls程序 作者：yawl(yawl@nsfocus.com) 日期：2000-8-15 一:简介: ssl(secure socket layer)是netscape公司提出的主要用于web的安全通信标准,分为2.0版和3.0版.tls(transport layer security)是ietf的tls工作组在ssl3.0基础之上提出的安全通信标准,目前版本是1.0,即rfc2246.ssl/tls提供的安全 机制可</description>
    </item>
    
    <item>
      <title>用openssl进行SSL编程【转载-月光】</title>
      <link>https://blog.alswl.com/2009/03/programming-with-openssl-for-ssl/</link>
      <pubDate>Wed, 18 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/programming-with-openssl-for-ssl/</guid>
      <description>主要介绍openssl进行SSL通信的一些函数以及过程，主要是初始化过程，至于数据的接收以及后续处理可以具体问题具体分析。 load所有的SSL算法 OpenSSL_add_ssl_algorithms(); 建立SSL所用的method SSL_METHOD *meth=SSLv23_method(); 初始化上下文情景 SSL_CTX *ctx=SSL_CTX_new(meth); ret-&amp;gt;quiet_shutdown=1;默认的是ret-&amp;gt;quiet_shutdown=0;他相当于SSL_set_shutdown函数将参数设置为SS L_SENT_SHUTDOWN|SSL_RECEIVED_SHUTDOWN 当设置为1时，假如关闭后，不通</description>
    </item>
    
    <item>
      <title>使用 OpenSSL API 进行安全编程【转载】</title>
      <link>https://blog.alswl.com/2009/03/safe-use-of-openssl-api-programming/</link>
      <pubDate>Tue, 17 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/safe-use-of-openssl-api-programming/</guid>
      <description>使用 OpenSSL API 进行安全编程 创建基本的安全连接和非安全连接 级别： 初级 Kenneth Ballard (kenneth.ballard@ptk.org), 自由程序员 2004 年 8 月 09 日 学习如何使用 OpenSSL &amp;mdash;- 用于安全通信的最著名的开放库 &amp;mdash;- 的 API 有些强人所难，因为其文档并不完全。您可以通过本文中的提示补充这方面的知识，并驾驭该 API。在建立基本的连接之后，就可以查看如何使用 OpenSSL 的 BIO 库来建立安全连接和非安全连接。与此同时，您还会学到一些关于错误检测的知识。 OpenSSL API 的文档有些含糊不清。因为还没有多少关于 OpenSSL 使用的教</description>
    </item>
    
    <item>
      <title>用OpenSSL创建证书时用到的命令【原创】</title>
      <link>https://blog.alswl.com/2009/03/using-openssl-to-create-certificates-using-the-command/</link>
      <pubDate>Tue, 17 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/using-openssl-to-create-certificates-using-the-command/</guid>
      <description>这几天在弄OpenSSL需要使用的证书，翻了很多文档，找来一《本OpenSSL与网络信息安全- 基础、结构和指令》，书上的密码学和OpenSSL的基础介绍的很详细，但是缺少一些实例。 这证书死活做不出来，最后在《计算机网络高级软件编程技术》上第19章&amp;quot;利用OpenSSL实现安全的Web Server&amp;quot;中找到自己需要的内容，现在分享一下。 1.生成CA中心的私钥 openssl req -newkey rsa:1024 -sha1 -keyout rootkey.pem -out rootreq.pem 2.生成</description>
    </item>
    
    <item>
      <title>常见证书格式和转换【转载】</title>
      <link>https://blog.alswl.com/2009/03/common-certificate-format-and-conversion/</link>
      <pubDate>Sun, 15 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/common-certificate-format-and-conversion/</guid>
      <description>这些文字都是转来转去，都找不到原作者是谁，唉```` 仍然感谢作者的贡献&amp;hellip;. PKCS 全称是 Public-Key Cryptography Standards ，是由 RSA 实验室与其它安全系统开发商为促进公钥密码的发展而制订的一系列标准，PKCS 目前共发布过 15 个标准。 常用的有： PKCS#7 Cryptographic Message Syntax Standard PKCS#10 Certification Request Standard PKCS#12 Personal Information Exchange Syntax Standard X.509是常见通用的证书格式。所有的证书都符合为Public Key Infrastructure (PKI) 制定的 ITU-T X509 国际标准。 PKCS#7 常用的后缀是： .P7B .P7C .SPC PKCS#12 常用的后缀有： .P12 .PFX X.509 DER 编码(ASCII)的</description>
    </item>
    
    <item>
      <title>用OpenSSL生成证书</title>
      <link>https://blog.alswl.com/2009/03/using-openssl-to-generate-certificates/</link>
      <pubDate>Sun, 15 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/using-openssl-to-generate-certificates/</guid>
      <description>这些命令虽然是linux下面的，但是在windows下面也能用 我遇到I am unable to access the ./demoCA/newcerts directory ./demoCA/newcerts: No such file or directory 然后找到这篇文章，只要用生成相应的目录就可以了。 我遇到的第二个问题是TXT_DB error number 2 在redhat的网站[kbase.redhat.com/faq/docs/DOC-3624] (http://kbase.redhat.com/faq/docs/DOC-3624)这篇文章。 我将原来index.txt里面</description>
    </item>
    
    <item>
      <title>OpenSSL初接触</title>
      <link>https://blog.alswl.com/2009/03/early-contact-with-openssl/</link>
      <pubDate>Thu, 05 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/early-contact-with-openssl/</guid>
      <description>Boss昨个儿说，这两天把SSL上面的相关东西给他去看一下 苦命啊，最近都在做Ajax，SSL几乎没有什么动静。唉，今天中午没吃饭，没睡觉，就开始做SSL 耗费了很多时间，才正确的编译完OpenSSL 要做的东西是基于C#的、利用OpenSSL开源代码完成的SSL分级服务器，很是麻烦，要用C#来调用C程序，而且OpenSSL本来就很难使用，唉，残念啊。 下面把我今天的成果分享一下： [C#]用HttpWeb</description>
    </item>
    
    <item>
      <title>MFC将退出历史舞台，微软的下一代用户界面技术WPF</title>
      <link>https://blog.alswl.com/2008/10/mfc-will-be-from-the-stage-of-history-microsoft-s-next-generation-user-interface-technology-wpf/</link>
      <pubDate>Tue, 28 Oct 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/10/mfc-will-be-from-the-stage-of-history-microsoft-s-next-generation-user-interface-technology-wpf/</guid>
      <description>转来的，最近对MFC很关注&amp;hellip; WPF简介 WPF的全称是WindowsPresentationFoundation，是微软新发布的Vista操作系统的三大核心开发库之一，其主要负责的是图形显示， 所以叫Presentation（呈现）。 作为新的图形引擎，WPF是基于DirectX的，当然增加了很多新的功能。其2D和3D引擎的强大看看Vista的界面就明白了，再加上其对Aero图形引擎的 支持</description>
    </item>
    
    <item>
      <title>MFC</title>
      <link>https://blog.alswl.com/2008/10/mfc/</link>
      <pubDate>Mon, 27 Oct 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/10/mfc/</guid>
      <description>刚开始似乎不太对MFC敏感，觉得现在导出讨论Java和.Net，很少看到MFC的身影，唔，当然了，是在我这只菜鸟看来 后来慢慢写在WinAPI上的程序，都是在命令提示符里面完成代码，界面很不友好，这才翻出MFC的书看。觉得写起来不太容易，逻辑和实现有点差距，就放下了几天。 这几天网络编程想写人性化一点的VC界面，还是得使用MFC。 我到今天才稍微弄清楚MFC和WinAPI窗体之间的关系，一方面开始感慨微</description>
    </item>
    
    <item>
      <title>网络编程学习日记(3)_利用WinPcap实现ARP的发送和接受</title>
      <link>https://blog.alswl.com/2008/09/e7-bd-91-e7-bb-9c-e7-bc-96-e7-a8-8b-e5-ad-a6-e4-b9-a0-e6-97-a5-e8-ae-b03_-e5-88-a9-e7-94-a8winpcap-e5-ae-9e-e7-8e-b0arp-e7-9a-84-e5-8f-91-e9-80-81-e5-92-8c-e6-8e-a5-e5-8f-97/</link>
      <pubDate>Thu, 25 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/09/e7-bd-91-e7-bb-9c-e7-bc-96-e7-a8-8b-e5-ad-a6-e4-b9-a0-e6-97-a5-e8-ae-b03_-e5-88-a9-e7-94-a8winpcap-e5-ae-9e-e7-8e-b0arp-e7-9a-84-e5-8f-91-e9-80-81-e5-92-8c-e6-8e-a5-e5-8f-97/</guid>
      <description>网络编程学习日记(2)_利用WinPcap实现ARP的发送和接受 网络编程学完以太网帧的结构，就开始正式进入IP层的学习了，在学习编程之前，对网络协议的有一定的了解，而且还要知道每个数据包，或者是报文，或者是帧他们每个字节 的含义 玩ARP么，肯定得知道他的原理，我就不做什么说明了，书上一大堆的 首先是ARP的接收，来看一下程序的流程 获取网络设备列表 pcap_findalldevs_ex(PCAP_SRC_IF_STRING, NULL, &amp;amp;alldevs, errbuf) 然后人机交互一下，获得需要工作的网卡 打开需要的网</description>
    </item>
    
    <item>
      <title>ARP</title>
      <link>https://blog.alswl.com/2008/09/arp/</link>
      <pubDate>Tue, 23 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/09/arp/</guid>
      <description>挺累的，连续两天忙到3点睡觉，早上9点起来继续做 开始挺没状态，但后来写着写着状态来了，一个一个新的想法也加入了。代码就变得丰富多彩起来。 这是网络编程，也就是我的专业方向课的第一份作业，我特别看中这次，当初分方向时候，鑫爷和大妈都去了软件，我留在网络了。似乎都觉得网络好学，简单，不要写程序 那么我就写 第一次将c++与系统底层结合起来，去操作网络上的数据包，感觉真是，太perfect了，不再是呆板的代码</description>
    </item>
    
    <item>
      <title>网络编程学习日记(2)_WinPcap自带教程的一些例子的学习</title>
      <link>https://blog.alswl.com/2008/09/network-programming-learning-diary-2-_winpcap-some-examples-of-course-bring-their-own-learning/</link>
      <pubDate>Sun, 14 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/09/network-programming-learning-diary-2-_winpcap-some-examples-of-course-bring-their-own-learning/</guid>
      <description>1.编译时候会出现函数问题 &amp;lsquo;pcap_findalldevs_ex&amp;rsquo; : undeclared identifier &amp;lsquo;PCAP_SRC_IF_STRING&amp;rsquo; : undeclared identifier &amp;lsquo;pcap_open&amp;rsquo; : undeclared identifier &amp;lsquo;PCAP_OPENFLAG_PROMISCUOUS&amp;rsquo; : undeclared identifier &amp;lsquo;=&amp;rsquo; : cannot convert from &amp;lsquo;int&amp;rsquo; to &amp;lsquo;struct pcap *&amp;rsquo; 等一系列函数找不到的问题，导致这些问题的关键在于他们的函数声明并不包含在pcap.h这个 头文件里面，而是包含在remote-ext.h这个函数里面，所以只需要在 #include &amp;ldquo;pcap.h&amp;quot;后面加上 #include &amp;ldquo;remote-ext.h&amp;rdquo; 就可以编译通过了。 网上有网友戏称说是WinPcap开发小组故意做的恶作剧或者是撰写doc说明时候忘记加入了 = =#</description>
    </item>
    
    <item>
      <title>网络编程学习日记(1)_WinPcap和VC的配置</title>
      <link>https://blog.alswl.com/2008/08/learning-network-programming-diary-1-_winpcap-and-vc-configuration/</link>
      <pubDate>Thu, 21 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2008/08/learning-network-programming-diary-1-_winpcap-and-vc-configuration/</guid>
      <description>下学期有网络变成，用的是《计算机网络高级软件编程技术》，研究生教材，感觉书写的很泛泛，毕竟是给研究生用的书籍，很多基础的细节都没有写清楚，搞不懂学校怎么弄这 种书，叹一个。 直接导致了我很多东西都得一点一点去网上查找。 很多函数都是用的WinPcap的，所以我又抓紧时间看WinPcap的入门知识。 WinPcap开发包下载：[http://www.winpcap.org/install/default.h</description>
    </item>
    
  </channel>
</rss>
