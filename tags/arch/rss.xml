<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Arch on Log4D</title>
    <link>https://blog.alswl.com/tags/arch/</link>
    <description>Recent content in Arch on Log4D</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 11 Dec 2011 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/arch/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arch Linux装机软件</title>
      <link>https://blog.alswl.com/2011/12/linux-application/</link>
      <pubDate>Sun, 11 Dec 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/12/linux-application/</guid>
      <description>&lt;p&gt;重要通知：Log4D的域名由 &lt;a href=&#34;http://dddspace.com/&#34;&gt;http://dddspace.com&lt;/a&gt; 迁移到
&lt;a href=&#34;../&#34;&gt;http://log4d.com&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;订阅地址现在改为 &lt;a href=&#34;../feed&#34;&gt;http://log4d.com/feed&lt;/a&gt; 和
&lt;a href=&#34;http://feeds.feedburner.com/dddspace&#34;&gt;http://feeds.feedburner.com/dddspace&lt;/a&gt;
。（FeedBurner的地址未发生变化）&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;&lt;a href=&#34;http://feed.dddspace.com&#34;&gt;http://feed.dddspace.com&lt;/a&gt;&lt;/strike&gt; 弃用&lt;/p&gt;
&lt;p&gt;请订阅我博客的朋友更新一下订阅地址。&lt;/p&gt;
&lt;p&gt;前天将arch32位换成64位的系统，想充分利用4G内存。 在mountpoint时候，我mount了 &lt;code&gt;/root&lt;/code&gt; 和&lt;code&gt;/home&lt;/code&gt;
盘，然后arch问需要 &lt;code&gt;(re)create&lt;/code&gt; 分区么。 选项有 &lt;code&gt;Yes&lt;/code&gt; 和 &lt;code&gt;No&lt;/code&gt; ，看上去不选 &lt;code&gt;No&lt;/code&gt; 就进行不下去，我就点了一下。&lt;/p&gt;
&lt;p&gt;结果就悲剧了有没有！！！！！！！！！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;home&lt;/code&gt; 盘有150G左右有木有！！！！！！！！&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>重要通知：Log4D的域名由 <a href="http://dddspace.com/">http://dddspace.com</a> 迁移到
<a href="../">http://log4d.com</a> 。</p>
<p>订阅地址现在改为 <a href="../feed">http://log4d.com/feed</a> 和
<a href="http://feeds.feedburner.com/dddspace">http://feeds.feedburner.com/dddspace</a>
。（FeedBurner的地址未发生变化）</p>
<p><strike><a href="http://feed.dddspace.com">http://feed.dddspace.com</a></strike> 弃用</p>
<p>请订阅我博客的朋友更新一下订阅地址。</p>
<p>前天将arch32位换成64位的系统，想充分利用4G内存。 在mountpoint时候，我mount了 <code>/root</code> 和<code>/home</code>
盘，然后arch问需要 <code>(re)create</code> 分区么。 选项有 <code>Yes</code> 和 <code>No</code> ，看上去不选 <code>No</code> 就进行不下去，我就点了一下。</p>
<p>结果就悲剧了有没有！！！！！！！！！</p>
<p><code>home</code> 盘有150G左右有木有！！！！！！！！</p>
<p>日本岛国文化都有70G有木有！！！！！！！！六七年的心血有木有！！！！！</p>
<p>上次备份是2个月前有木有，就算有Dropbox/github/cvs等等，还会丢失变更有木有！！</p>
<p>两个月的数据变化阿，各种文档，照片和音乐阿！！！！！！</p>
<p>你妹的arch格式化之前通知能不能明显一点，弄个 <code>format</code> 字眼吓不死我的！！！！</p>
<p>上次备份是放在Dell笔记本里面的，主板坏了打不开有木有！！！！！！！</p>
<p>最后我用移动硬盘装载老电脑的硬盘，勉强把数据恢复过来。</p>
<p>又是一次苦逼的装机路，我一一记录下来。</p>
<p>下面是官方指导文档配置完成之后的软件，在Arch官方库和ARU里面有。</p>
<h2 id="常用工具">常用工具</h2>
<ul>
<li>tilda 一个小巧的Terminal Emulator</li>
<li>fcitx 好用的输入法</li>
</ul>
<h2 id="应用软件">应用软件</h2>
<ul>
<li>asciidoc</li>
<li>gnucash #财务软件</li>
<li>libreoffice</li>
<li>foxitreader #yaourt</li>
<li>bc #计算器</li>
<li>text-live-core #LaTex</li>
</ul>
<h2 id="网络应用">网络应用</h2>
<ul>
<li>firefox</li>
<li>firefox-i18n-zh-cn</li>
<li>chromium</li>
<li>dropbox #yaourt</li>
<li>wakoopa #跟踪系统软件的工具 yaourt</li>
<li>wireshark-gtk #抓包用的wireshark</li>
<li>thunderbird</li>
<li>telepathy #empathy依赖</li>
<li>nmap #网络工具</li>
</ul>
<h2 id="媒体软件">媒体软件</h2>
<ul>
<li>kid3 #mp3 idv2/idv3编辑器</li>
<li>gimp</li>
<li>smplayer #播放器</li>
<li>rhythmbox #音乐播放器</li>
<li>audacity #音频编辑器</li>
<li>k3b #cd刻录</li>
</ul>
<h2 id="开发应用">开发应用</h2>
<ul>
<li>gvim</li>
<li>git/svn/mercurial/cvs</li>
<li>ctags</li>
<li>jdk #yaourt sun官方jdk</li>
<li>mysql</li>
<li>mysql-workbench #mysql wrokbench</li>
<li>nginx</li>
<li>php</li>
<li>php-fpm</li>
<li>python-virtualenv #python版本管理</li>
<li>python-virtualenvwrapper #pytohn版本管理增强工具</li>
<li>memcached</li>
</ul>
<h2 id="系统工具">系统工具</h2>
<ul>
<li>net-tools #包含ifconfig/route，这个包现在不在BASE中，默认不安装</li>
<li>inetutils #包含ftp/telnet，同上</li>
<li>networkmanager-openconnect #networkmanager相关的插件</li>
<li>networkmanager-openvpn</li>
<li>networkmanager-pptp</li>
<li>networkmanager-dispatcher-sshd</li>
<li>virtualbox</li>
<li>virtualbox-addtitions #virtualbox 增强包</li>
<li>qt</li>
<li>unrar zip unzip</li>
<li>flashplugin</li>
<li>bash-completion #bash自动完成</li>
<li>nautilus-open-terminal</li>
<li>avant-window-navigator #dock</li>
<li>hardinfo #设备信息</li>
<li>gpaste #多剪贴板 yaourt</li>
<li>gstreamer0.10-ffmpeg #预览</li>
<li>gparted #分区工具</li>
<li>conky #系统运行状态</li>
<li>ntp #网络时间校准工具</li>
<li>dnsmasq #本地dns缓存</li>
</ul>
<h2 id="gnome相关">gnome相关</h2>
<ul>
<li>gnome-tweak-tool-3.2.2-2</li>
</ul>
<h2 id="gnome-shell扩展">gnome shell扩展</h2>
<p>在 <a href="https://extensions.gnome.org/">https://extensions.gnome.org/</a> 可以下载Gnome3扩展。</p>
<ul>
<li>Alternative Status Menu</li>
<li>gTile #桌面多窗口分割</li>
<li>Places Status Indicator</li>
<li>Workspace Navigator</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Arch Linux下小红点中键</title>
      <link>https://blog.alswl.com/2011/11/archlinux-thinkpad-trackpoint/</link>
      <pubDate>Tue, 15 Nov 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/11/archlinux-thinkpad-trackpoint/</guid>
      <description>&lt;p&gt;重要通知：Log4D的域名由 &lt;a href=&#34;http://dddspace.com&#34;&gt;http://dddspace.com&lt;/a&gt; 迁移到
&lt;a href=&#34;http://log4d.com&#34;&gt;http://log4d.com&lt;/a&gt; 。 订阅地址现在改为
&lt;a href=&#34;http://log4d.com/feed&#34;&gt;http://log4d.com/feed&lt;/a&gt; 和
&lt;a href=&#34;http://feeds.feedburner.com/dddspace&#34;&gt;http://feeds.feedburner.com/dddspace&lt;/a&gt;
。（FeedBurner的地址未发生变化） 请订阅我博客的朋友更新一下订阅地址。&lt;/p&gt;
&lt;h2 id=&#34;关于arch&#34;&gt;关于Arch&lt;/h2&gt;
&lt;p&gt;Arch是一款优秀的Linux发行版，使用它可以快速的学习Linux操作技巧。 Arch崇尚的原则是&amp;quot;保持简单，且一目了然&amp;quot;，这也是我崇尚的风格。&lt;/p&gt;
&lt;p&gt;保持简单的同时也会给我带来一些小小的困扰，比如配置一下Thinkpad上面的小红帽
中键都需要设定Xorg。Arch直接向我们展示了Linux美妙的侗体，没有任何遮掩。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>重要通知：Log4D的域名由 <a href="http://dddspace.com">http://dddspace.com</a> 迁移到
<a href="http://log4d.com">http://log4d.com</a> 。 订阅地址现在改为
<a href="http://log4d.com/feed">http://log4d.com/feed</a> 和
<a href="http://feeds.feedburner.com/dddspace">http://feeds.feedburner.com/dddspace</a>
。（FeedBurner的地址未发生变化） 请订阅我博客的朋友更新一下订阅地址。</p>
<h2 id="关于arch">关于Arch</h2>
<p>Arch是一款优秀的Linux发行版，使用它可以快速的学习Linux操作技巧。 Arch崇尚的原则是&quot;保持简单，且一目了然&quot;，这也是我崇尚的风格。</p>
<p>保持简单的同时也会给我带来一些小小的困扰，比如配置一下Thinkpad上面的小红帽
中键都需要设定Xorg。Arch直接向我们展示了Linux美妙的侗体，没有任何遮掩。</p>
<p>好在Arch有最完善的<a href="https://wiki.archlinux.org/index.php/Main_Page">官方Wiki</a>，
Thinkpad爱好者也组建了一个专门的
<a href="http://www.thinkwiki.org/wiki/ThinkWiki">ThinkWiki</a>来为大家答疑解惑。
特别是官方Wiki，中文化做的非常好，是我见过最完善的中文linux wiki之一。</p>
<h2 id="小红帽的中键">小红帽的中键</h2>
<p>罗嗦完了，进入正题，我的环境是</p>
<ul>
<li>arch(Linux version 3.1.0-4-ARCH)</li>
<li>Gnome3.2.1</li>
<li>X.Org X Server 1.11.2</li>
</ul>
<p>根据 <a href="http://www.thinkwiki.org/wiki/How_to_configure_the_TrackPoint">How to configure the
TrackPoint</a>
描述，配置小红帽的中键有6种办法， 我使用的是xinput配置（这是推荐方法）。</p>
<p>运行下列代码，即可启用小红帽中键上下滑动。</p>
<pre><code>xinput set-int-prop 12 &quot;Evdev Wheel Emulation&quot; 8 1
xinput set-int-prop 12 &quot;Evdev Wheel Emulation Button&quot; 8 2
xinput set-int-prop 12 &quot;Evdev Wheel Emulation Timeout&quot; 8 200
</code></pre>
<p>现在运行下面代码，启用左右滑动。</p>
<pre><code>xinput set-int-prop 12 &quot;Evdev Wheel Emulation Axes&quot; 8 6 7 4 5
</code></pre>
<p>创建自动脚本，在系统启动时候自动执行</p>
<pre><code>#!/bin/sh
xinput list | sed -ne 's/^[^ ][^V].*id=\([0-9]*\).*/\1/p' | while read id
do
        case `xinput list-props $id` in
        *&quot;Middle Button Emulation&quot;*)
                xinput set-int-prop $id &quot;Evdev Wheel Emulation&quot; 8 1
                xinput set-int-prop $id &quot;Evdev Wheel Emulation Button&quot; 8 2
                xinput set-int-prop $id &quot;Evdev Wheel Emulation Timeout&quot; 8 200
                xinput set-int-prop $id &quot;Evdev Wheel Emulation Axes&quot; 8 6 7 4 5
                xinput set-int-prop $id &quot;Evdev Middle Button Emulation&quot; 8 0
                ;;
        esac
done
</code></pre>
<h1 id="disable-middle-button">disable middle button</h1>
<p>xmodmap -e &ldquo;pointer = 1 9 3 4 5 6 7 8 2&rdquo;</p>
<p>我将这个bash放在 <code>~/.xinitrc</code> 里面执行。</p>
<p>PS：如果你使用这个方法有问题，建议检查一下当前环境。另外可以参考一下其他的设置方法 <a href="http://www.thinkwiki.org/wiki/How_to_configure_the_TrackPoint">How to configure the
TrackPoint</a> 。</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用pptpclient连接vpn网络[译文]</title>
      <link>https://blog.alswl.com/2011/09/pptpclient/</link>
      <pubDate>Sun, 04 Sep 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/09/pptpclient/</guid>
      <description>&lt;p&gt;最近在ddwrt配置vpn，参考了arch的pptpclient配置文档[Microsoft VPN client setup with pptpclien
t](&lt;a href=&#34;https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl&#34;&gt;https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl&lt;/a&gt;
ient)，同时顺便花了一点时间翻译成中文，正文如下（使用&lt;a href=&#34;https://github.com/tanin47/wiky.js&#34;&gt;wiky.js&lt;/a&gt;转换pe
diawiki到html，原文会有更多的wiki模板样式便于查看，有问题请参照原文）。&lt;/p&gt;
&lt;p&gt;pptpclient是一个实现Microsoft PPTP协议的程序。因此它能够被用来接入另一个Microsoft VPN网络，比如学校和单位。&lt;/p&gt;
&lt;h3 id=&#34;安装pptpclient&#34;&gt;安装PPTPClient&lt;/h3&gt;
&lt;p&gt;pptpclient由安装包pptpclient提供，运行下列命令可以安装：&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>最近在ddwrt配置vpn，参考了arch的pptpclient配置文档[Microsoft VPN client setup with pptpclien
t](<a href="https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl">https://wiki.archlinux.org/index.php/Microsoft_VPN_client_setup_with_pptpcl</a>
ient)，同时顺便花了一点时间翻译成中文，正文如下（使用<a href="https://github.com/tanin47/wiky.js">wiky.js</a>转换pe
diawiki到html，原文会有更多的wiki模板样式便于查看，有问题请参照原文）。</p>
<p>pptpclient是一个实现Microsoft PPTP协议的程序。因此它能够被用来接入另一个Microsoft VPN网络，比如学校和单位。</p>
<h3 id="安装pptpclient">安装PPTPClient</h3>
<p>pptpclient由安装包pptpclient提供，运行下列命令可以安装：</p>
<h1 id="pacman--s-pptpclient">pacman -S pptpclient</h1>
<h3 id="配置">配置</h3>
<p>你需要从网络管理员获取以下信息来配置pptpclient:</p>
<ul>
<li>VPN服务器的ip或者域名</li>
<li>VPN隧道名称</li>
<li>Windows域（不是所有网络都需要）</li>
<li>VPN用户名</li>
<li>VPN密码</li>
</ul>
<h2 id="编辑配置文件">编辑配置文件</h2>
<p>用你称手的编辑器打开/etc/ppp/options.pptp。这个文件为你的VPN连接启用了一系列默认安全设置。如果你连接时候出现问题，你可以自定义配置。
你的options.pptp文件最少需要包含以下内容：</p>
<pre><code>lock
noauth
nobsdcomp
nodeflate
</code></pre>
<h2 id="编辑密码文件">编辑密码文件</h2>
<p>下一步，打开或者创建/etc/ppp/chap-
secrets。我们将在这个文件里面存储你的密码，记得修改权限让除root之外所有用户不能访问它。这个文件的格式如下：</p>
<pre><code>&lt;DOMAIN&gt;\&lt;USERNAME&gt; PPTP &lt;PASSWORD&gt; *
</code></pre>
<p>如果你的服务器不要求域，则配置如下：</p>
<pre><code>&lt;USERNAME&gt; PPTP &lt;PASSWORD&gt; *
</code></pre>
<p>替换掉上文中范例中的占位符。注意，如果你的密码包含特殊字符，比如&quot;$&quot;，你需要用双引号把它们包起来。</p>
<h2 id="命名你的vpn隧道">命名你的VPN隧道</h2>
<p>用你称手的编辑器创建类似/etc/ppp/peers/的文件，把这里替换成你的VPN连接名。这个文件设置之后看起来如下：</p>
<pre><code>pty &quot;pptp &lt;SERVER&gt; --nolaunchpppd&quot;
name &lt;DOMAIN&gt;\&lt;USERNAME&gt;
remotename PPTP
require-mppe-128
file /etc/ppp/options.pptp
ipparam &lt;TUNNEL&gt;
</code></pre>
<p>{{Note|跟刚才一样，如果你的连接不要求域，忽略范例中的&quot;&quot;}} {{Note|PPTP远程主机使用Chap-Secrets文件中的}}</p>
<p>是VPN服务器的地址，是你所属的域，是你将要用来连接服务器的用户名，是连接的名称。</p>
<p>{{Note|如果你不需要使用MPPE，你应当从/etc/ppp/options.pptp中移除require-mppe-128这个选项}}</p>
<p>创建你的连接</p>
<p>用root执行以下命令来确保配置是正确的： # pon $TUNNEL debug dump logfd 2 nodetach
如果一切都配置好了，pon命令应当不会自动结束。一旦你感觉差不多OK了，就可以终止这个命令。 {{Note|另一个用来确保配置正确的命令是ifconfig
-a，看看里面时候有一个名叫ppp0的新驱动，并且还是可用的}} 执行以下命令来连接VPN隧道： # pon
是你之前命名过的VPN隧道名称。注意使用root命令执行。</p>
<h2 id="配置路由">配置路由</h2>
<p>一旦你成功连接上VPN，你就可以和VPN服务器交互了。当然在此之前，咱们需要添加一个新的路由到你的路由表，从而可以接入远程网络。</p>
<p>{{Note|根据你的环境配置，你可能需要每次都重复添加路由信息}}</p>
<p>你可以阅读<a href="http://pptpclient.sourceforge.net/routing.phtml">PPTP Routing Howto</a>来获得更
多如何添加路由的信息，里面还有很多范例。</p>
<h2 id="选择路由">选择路由</h2>
<p>对我来说，只有传输到VPN网络的数据包才应该走VPN连接，所以我添加如下路由条目： # route add -net 192.168.10.0
netmask 255.255.255.0 dev ppp0 这将路由所有目的地址为191.168.10.xxx的数据到VPN连接。</p>
<h2 id="配置为默认路由">配置为默认路由</h2>
<p>如果你想要所有数据从VPN连接走，下面这条命令包你爽： # route add default dev ppp0
{{Note|所有数据从VPN连接走的话会比正常连接慢一些}}</p>
<h3 id="断开连接">断开连接</h3>
<p>下面这条命令用来断开VPN连接： # poff  是你VPN连接的名称。</p>
<h3 id="把一个vpn连接配为默认启动">把一个VPN连接配为默认启动</h3>
<p>你可以在rc.d创建一个快捷命令来实现自动在后台连接VPN网络。</p>
<p>{{Note|和平常一样，是你隧道的名字，是你加入路由表的命令。}}</p>
<pre><code>#!/bin/bash
</code></pre>
<p>. /etc/rc.conf</p>
<p>. /etc/rc.d/functions</p>
<p>DAEMON=<TUNNEL>-vpn</p>
<p>ARGS=</p>
<p>[ -r /etc/conf.d/$DAEMON ] &amp;&amp; . /etc/conf.d/$DAEMON</p>
<p>case &ldquo;$1&rdquo; in</p>
<p>start)</p>
<p>stat_busy &ldquo;Starting $DAEMON&rdquo;</p>
<p>pon <TUNNEL> updetach persist &amp;&gt; /dev/null &amp;&amp; <ROUTING COMMAND> &amp;&gt;/dev/null</p>
<p>if [ $? = 0 ]; then</p>
<p>add_daemon $DAEMON</p>
<p>stat_done</p>
<p>else</p>
<p>stat_fail</p>
<p>exit 1</p>
<p>fi</p>
<p>;;</p>
<p>stop)</p>
<p>stat_busy &ldquo;Stopping $DAEMON&rdquo;</p>
<p>poff MST &amp;&gt;/dev/null</p>
<p>if [ $? = 0 ]; then</p>
<p>rm_daemon $DAEMON</p>
<p>stat_done</p>
<p>else</p>
<p>stat_fail</p>
<p>exit 1</p>
<p>fi</p>
<p>;;</p>
<p>restart)</p>
<p>$0 stop</p>
<p>sleep 1</p>
<p>$0 start</p>
<p>;;</p>
<p>*)<br />
echo &ldquo;usage: $0 {start|stop|restart}&rdquo;</p>
<p>esac</p>
<p>注意，我们可以使用updetach和persist这两个附加命令在pon上。updetach保证pon阻塞知道连接被建立。另外一个命令persist保证网络
自动重练。如果需要开机自动启动，则添加@-vpn到rc.conf的DAEMONS中去。</p>
<h3 id="注意">注意</h3>
<p>你可以在<a href="http://pptpclient.sourceforge.net/">pptpclient website</a>查到更多关于pptpclient的配
置信息。Ubuntu的帮助手册也有一些帮助你配置的信息。这些范例能够很轻松的稍加变换从而添加到daemons中去，从而帮助你自动化运行。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
