<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dll on Log4D</title>
    <link>https://blog.alswl.com/tags/dll/</link>
    <description>Recent content in dll on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 23 Jan 2011 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/dll/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在.net中使用GAC</title>
      <link>https://blog.alswl.com/2011/01/gac/</link>
      <pubDate>Sun, 23 Jan 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/01/gac/</guid>
      <description>GAC GAC是什么？是用来干嘛的？GAC的全称叫做全局程序集缓存，通俗的理解就是存放各种.net平台下面需要使用的dll的地方。GAC的具体目录在windows/ assembly。
喜欢使用破解软件的朋友可能会经常使用替换DLL这招，这个DLL虽然和.net下面的DLL有所不同，但大致起的作用还是一样的：使用共同的动态链接库来提高库复用 ，减少文件体积。在.net平台之前，程序们都把可能用到的公共DLL存放到system32文件夹下。由于版本的不一致及其他原因（将控制信息存放到注册表），造成 了很有名的DLL Hell。
最近在读俞甲子的《程序员的自我修养》，中间花了很大的篇幅描述程序编译中 的链接这个过程。而比较巧合的是，我的《C#与.NET 3.5高级程序设计》也正好读到程序集这一块。微软使用了GAC来避免DLL重蹈覆辙。现在，我就来部署一个简单的通用类库到GAC中。
获取强名称（签名） 并不是随便一个DLL都可以放到GAC中，如果这样的话，和之前的DLL Hell也没什么区别了。GAC使用一个强名称（签名）的方式来区分不同的DLL。每个签名 都是独一无二的公钥私钥对。现在我们使用SDK的sn工具为我的DUtil库生成一个snk签名。
打开SDK中的Visual Studio 2008 命令提示，键入sn -k DUtil.snk，结果如下：
F:WorkSpace.netDUtilbinDebug&amp;gt;sn -k DUtil.snk Microsoft (R) .NET Framework 强名称实用工具 版本 3.5.21022.8
Copyright (c) Microsoft Corporation. All rights reserved.
密钥对被写入 DUtil.snk
这样我们就得到了一个snk签名文件。
为程序集设置签名 现在我们得到了一个签名文件，但是还没有把这个签名应用到程序中，在程序的assembly.cs文件中加入[assembly: AssemblyKeyFile(&amp;ldquo;dutil.snk&amp;rdquo;)]，这个dutil.snk可以是绝对路径，我使用的是主目录中的snk文件。
编译解决方案，生成的.dll文件就包含了签名。
此时编译器会出现一个警告：
警告 1 使用命令行选项&amp;quot;/keyfile&amp;quot;或适当的项目设置代替&amp;quot;AssemblyKeyFile&amp;quot; F:WorkSpace.netDUtilPropertiesAssemblyInfo.cs 38 12 DUtil
既然VS建议我们用选项设定，那我们就用项目选项页设定key。如下图所示：
PS：我测试过，生成DLL之后，就算删除签名使用的snk文件，依然可以正常使用。即snk文件只有在编译时候使用。
安装到GAC 安装到GAC有两种办法，一种是把DLL拖入windows/assembly目录下（不是复制粘贴，是拖动），另外一种是使用gacutil。
在Win7下，拖动的话会遇到权限问题，如下图所示
在gacutil下面也会遇到如下错误
F:WorkSpace.netDUtilbinDebug&amp;gt;gacutil -i DUtil.dll Microsoft (R) .NET Global Assembly Cache Utility. Version 3.5.21022.8 Copyright (c) Microsoft Corporation.</description>
    </item>
    
  </channel>
</rss>
