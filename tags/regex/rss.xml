<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Regex on Log4D</title>
    <link>https://blog.alswl.com/tags/regex/</link>
    <description>Recent content in Regex on Log4D</description>
    <generator>Hugo -- 0.134.2</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 19 Jan 2011 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/regex/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式抓捕替换</title>
      <link>https://blog.alswl.com/2011/01/regex-group-catch/</link>
      <pubDate>Wed, 19 Jan 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/01/regex-group-catch/</guid>
      <description>&lt;h2 id=&#34;问题情境&#34;&gt;问题情境&lt;/h2&gt;
&lt;p&gt;需要将RDL报表里的GetComment( Parameters!F0001.Value , Parameters!F0002.Value
,&amp;ldquo;total&amp;rdquo;, Parameters!Language.Value)函数修改为GetCommentForComment(
Parameters!F0001.Value , Parameters!F0002.Value ,&amp;ldquo;total&amp;rdquo;,
Parameters!Language.Value, &amp;ldquo;ReportConnection0107&amp;rdquo;)。&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;
&lt;p&gt;使用正则表达式里面的分组进行抓获，再用1将中间固定的参数取出，组成新的字符串。&lt;/p&gt;
&lt;h3 id=&#34;vim实现&#34;&gt;Vim实现&lt;/h3&gt;
&lt;p&gt;%s/GetComment(((s&lt;em&gt;w+!w+.w+s&lt;/em&gt;,){2}s*&amp;ldquo;w+&amp;ldquo;s*,s&lt;em&gt;w+!w+.w+s&lt;/em&gt;))/GetCommentForReport(1
, &amp;ldquo;ReportConnection0107&amp;rdquo;)/gc&lt;/p&gt;
&lt;p&gt;解释：%为全局替换，s为替换。后面则是表达式，和正则表达式差不多，注意是*不需要转义，+ 和 .需要转义，最后的g代表当前行替换，c代表每次替换需要确认。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="问题情境">问题情境</h2>
<p>需要将RDL报表里的GetComment( Parameters!F0001.Value , Parameters!F0002.Value
,&ldquo;total&rdquo;, Parameters!Language.Value)函数修改为GetCommentForComment(
Parameters!F0001.Value , Parameters!F0002.Value ,&ldquo;total&rdquo;,
Parameters!Language.Value, &ldquo;ReportConnection0107&rdquo;)。</p>
<h2 id="思路">思路</h2>
<p>使用正则表达式里面的分组进行抓获，再用1将中间固定的参数取出，组成新的字符串。</p>
<h3 id="vim实现">Vim实现</h3>
<p>%s/GetComment(((s<em>w+!w+.w+s</em>,){2}s*&ldquo;w+&ldquo;s*,s<em>w+!w+.w+s</em>))/GetCommentForReport(1
, &ldquo;ReportConnection0107&rdquo;)/gc</p>
<p>解释：%为全局替换，s为替换。后面则是表达式，和正则表达式差不多，注意是*不需要转义，+ 和 .需要转义，最后的g代表当前行替换，c代表每次替换需要确认。</p>
<p>目标表达式中有1，代表抓获的第一个字符串，多个字符串抓获则依次往下排列。�表示原始字符串。</p>
<h3 id="notepadeditplus实现">NotePad++/EditPlus实现</h3>
<p>GetComment(( *[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *, *&quot;[a-zA-Z0-9]+&rdquo; *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *))</p>
<p>替换为GetCommentForReport(1, &ldquo;ReportConnection0107&rdquo;)</p>
<p>解释：不知道为何，我无法使用ws匹配文字和空格，只能使用[a-zA-Z0-9]表示（完整的是[a-zA-Z0-9_]）w，用空格表示s。</p>
<h3 id="visualstudio">VisualStudio</h3>
<p>由于RDL开发必然使用VisualStudio，所以用VS替换更方便。</p>
<p>GetComment({ *[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *, *&quot;[a-zA-Z0-9]+&rdquo; *,
*[a-zA-Z0-9]+![a-zA-Z0-9]+.[a-zA-Z0-9]+ *})</p>
<p>依旧替换为GetCommentForReport(1, &ldquo;ReportConnection0107&rdquo;)</p>
<p>解释：VS除了NotePad++/EditPlus的问题外，还有一个严重的问题就是他抓取的不是分组()，而是抓获的花括号{}抓捕的字符串，官方的称呼叫做&quot;带
标记的表达式&quot;，详情可以参考<a href="http://msdn.microsoft.com/zh-cn/library/2k3te2cs.aspx">MSDN正则表达式 (Visual Studio)</a>。</p>
<h2 id="ps">PS</h2>
<p>所以咯，Vimer，你懂的~</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
