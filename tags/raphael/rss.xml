<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>raphael on Log4D</title>
    <link>https://blog.alswl.com/tags/raphael/</link>
    <description>Recent content in raphael on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 19 Jun 2012 07:03:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/raphael/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flotr2 - 我最喜欢的 Javascript 图形库[译文]</title>
      <link>https://blog.alswl.com/2012/06/flotr2/</link>
      <pubDate>Tue, 19 Jun 2012 07:03:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/06/flotr2/</guid>
      <description>原文地址：Flotr2 - my favorite javascript graph library 译者：alswl 我研究了很久，得到的终极数据可视化方案是 javascript + html ，这是唯一像样又好用的。 Gnuplot 虽然看上去不错，但是不太漂亮。 一些基于 Python 的图形化工具也有同样的问题。 Mathematica 在我看来则太正式了，所以我不怎么用它。 基于 javascript 的图形化工具其中一个巨大优势是易于共享。 通过设置 Github Page、分享链接等方法，我们都可以很方便的获取最新图表数据， 甚至可以进行交互。 那些基于 javascript 的图形化工具 有很多 javascript 图形</description>
      <content:encoded><![CDATA[<p>原文地址：<a href="http://swizec.com/blog/flotr2-my-favorite-javascript-graph-library">Flotr2 - my favorite javascript graph library</a></p>
<p>译者：<a href="http://log4d.com/2012/06/flotr2/">alswl</a></p>
<hr />
<p>我研究了很久，得到的终极数据可视化方案是 javascript + html ，这是唯一像样又好用的。</p>
<p><a href="http://www.gnuplot.info/">Gnuplot</a> 虽然看上去不错，但是不太漂亮。
一些基于 Python 的图形化工具也有同样的问题。
<a href="http://www.wolfram.com/products/mathematica/">Mathematica</a> 在我看来则太正式了，所以我不怎么用它。</p>
<p>基于 javascript 的图形化工具其中一个巨大优势是易于共享。
通过设置 Github Page、分享链接等方法，我们都可以很方便的获取最新图表数据，
甚至可以进行交互。</p>
<h2 id="那些基于-javascript-的图形化工具">那些基于 javascript 的图形化工具</h2>
<p>有很多 javascript 图形化库，从极简到复杂绚丽的风格，都极为丰富。</p>
<p>最流行的可能就是 <a href="http://d3js.org/">d3.js</a> 和 <a href="http://raphaeljs.com/">Raphael</a> 了。
他们用起来<em>相当</em>麻烦，但却能实现绚丽到超越你想象的可视化效果。</p>
<!-- more -->
<p>Raphael 还一个 web 矢量库，外观同样很漂亮。</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.41.59-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.41.59-PM.png" alt="An analytics graph in Raphael"  />


</a></p>
<p>Raphael 中的分析图表</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.12-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.12-PM.png" alt="Bubble graph in Raphael"  />


</a></p>
<p>Raphael 中的气泡图</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.31-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.31-PM.png" alt="A clock made with Raphael"  />


</a></p>
<p>Raphael 中的钟表时间图</p>
<p>D3.js 的愿景是帮助人们轻松的完成数据可视化，可惜事与愿违，
它弄得太复杂了。</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-3.03.35-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-3.03.35-PM.png" alt="HN top titles visualisation in d3.js"  />


</a></p>
<p>Hacker News 文章标题的可视化数据</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.31-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.31-PM.png" alt="House hunting in d3.js"  />


</a></p>
<p>用 d3.js 绘制购房信息</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.53-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.53-PM.png" alt="Scatterplots made with d3.js"  />


</a></p>
<p>用 d3.js 制作的散布图</p>
<h2 id="flotr2">Flotr2</h2>
<p>这些可视化工具，虽然看上去很华丽，但是<em>难以</em>使用。
他们会很浪费时间，让人捣鼓到最后却发现什么都没弄出来。
大部分 Raphael 和 d3 的功能矫正过枉了，有时我们只想要一个简单的绘图工具而已。</p>
<p>为了将<a href="http://swizec.com/blog/a-year-of-750words-com-with-shiny-graphs/swizec/4378">我去年的 750 个关键字</a>数据可视化，我使用了 <a href="http://humblesoftware.com/flotr2/">Flotr2</a>。
只花费我数分钟，就能通过操作 javascript 将数据转化成 Flotr2 能理解的函数，
然后 Flotr2 就将数据转化成漂亮的图表。</p>
<p>Flotr2 最大的优点是他没有过度设计，当你只想要一个简单图表时候，
它不会让你去操作过多东西。</p>
<p>往往只需要你设定必要的数据和一两个标签，比如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">draw_time</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">title</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span>
</span></span><span class="line"><span class="cl">	<span class="nx">start</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">DATA</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">	<span class="nx">options</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">graph</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">i</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">o</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">xaxis</span> <span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">mode</span> <span class="o">:</span> <span class="s1">&#39;time&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">labelsAngle</span> <span class="o">:</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">selection</span> <span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">mode</span> <span class="o">:</span> <span class="s1">&#39;x&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">legend</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">position</span><span class="o">:</span> <span class="s1">&#39;se&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">HtmlText</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nx">title</span> <span class="o">:</span> <span class="nx">title</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="c1">// Draw graph with default options, overwriting with passed options
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="kd">function</span> <span class="nx">drawGraph</span> <span class="p">(</span><span class="nx">opts</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">		<span class="c1">// Clone the options, so the &#39;options&#39; variable always keeps intact.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">o</span> <span class="o">=</span> <span class="nx">Flotr</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">Flotr</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">options</span><span class="p">),</span> <span class="nx">opts</span> <span class="o">||</span> <span class="p">{});</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">		<span class="c1">// Return a new graph.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="k">return</span> <span class="nx">Flotr</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nx">container</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">options</span>
</span></span><span class="line"><span class="cl">		<span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="nx">graph</span> <span class="o">=</span> <span class="nx">drawGraph</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="nx">Flotr</span><span class="p">.</span><span class="nx">EventAdapter</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="s1">&#39;flotr:select&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">area</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="c1">// Draw selected area
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">graph</span> <span class="o">=</span> <span class="nx">drawGraph</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">			<span class="nx">xaxis</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">min</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span> <span class="nx">max</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span> <span class="nx">mode</span> <span class="o">:</span> <span class="s1">&#39;time&#39;</span><span class="p">,</span> <span class="nx">labelsAngle</span> <span class="o">:</span> <span class="mi">45</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">			<span class="nx">yaxis</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">min</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span> <span class="nx">max</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">y2</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="c1">// When graph is clicked, draw the graph with default area.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">Flotr</span><span class="p">.</span><span class="nx">EventAdapter</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="s1">&#39;flotr:click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">graph</span> <span class="o">=</span> <span class="nx">drawGraph</span><span class="p">();});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>然后你就能获得下面这张图表：</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.58.02-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.58.02-PM.png" alt="A graph in Flotr2"  />


</a></p>
<p>好用吧。</p>
<p>看上去蛮漂亮，符合它简洁易用的特点。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
