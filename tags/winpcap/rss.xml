<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Winpcap on Log4D</title>
    <link>https://blog.alswl.com/tags/winpcap/</link>
    <description>Recent content in Winpcap on Log4D</description>
    <generator>Hugo -- 0.125.6</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 25 Sep 2008 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/winpcap/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>网络编程学习日记(3)_利用WinPcap实现ARP的发送和接受</title>
      <link>https://blog.alswl.com/2008/09/winpcap-arp/</link>
      <pubDate>Thu, 25 Sep 2008 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2008/09/winpcap-arp/</guid>
      <description>网络编程学习日记(2)_利用WinPcap实现ARP的发送和接受 网络编程学完以太网帧的结构，就开始正式进入IP层的学习了，在学习编程之前，对网络协议的有一定的了解，而且还要知道每个数据包，或者是报文，或者是帧他们每个字节 的含义 玩ARP么，肯定得知道他的原理，我就不做什么说明了，书上一大堆的 首先是ARP的接收，来看一下程序的流程 获取网络设备列表 pcap_findalldevs_ex(PCAP_SRC_IF_STRING, NULL, &amp;amp;alldevs, errbuf) 然后人机交互一下，获得需要工作的网卡 打开需要的网</description>
      <content:encoded><![CDATA[<p>网络编程学习日记(2)_利用WinPcap实现ARP的发送和接受</p>
<p>网络编程学完以太网帧的结构，就开始正式进入IP层的学习了，在学习编程之前，对网络协议的有一定的了解，而且还要知道每个数据包，或者是报文，或者是帧他们每个字节
的含义</p>
<p>玩ARP么，肯定得知道他的原理，我就不做什么说明了，书上一大堆的</p>
<p>首先是ARP的接收，来看一下程序的流程</p>
<p>获取网络设备列表</p>
<pre tabindex="0"><code>pcap_findalldevs_ex(PCAP_SRC_IF_STRING, NULL, &amp;alldevs, errbuf)
</code></pre><p>然后人机交互一下，获得需要工作的网卡</p>
<p>打开需要的网卡</p>
<pre tabindex="0"><code>(adhandle= pcap_open(d-&gt;name, // 设备名

65536, // 要捕捉的数据包的部分

// 65535保证能捕获到不同数据链路层上的每个数据包的全部内容

PCAP_OPENFLAG_PROMISCUOUS, // 混杂模式

1000, // 读取超时时间

NULL, // 远程机器验证

errbuf // 错误缓冲池

)
</code></pre><p>检查数据链路层，我们只考虑以太网</p>
<pre tabindex="0"><code>pcap_datalink(adhandle) != DLT_EN10MB
</code></pre><p>编译过滤器</p>
<pre tabindex="0"><code>pcap_compile(adhandle, &amp;fcode, packet_filter, 1, netmask)
</code></pre><p>设置过滤器</p>
<pre tabindex="0"><code>pcap_setfilter(adhandle, &amp;fcode)
</code></pre><p>开始捕捉数据包</p>
<pre tabindex="0"><code>pcap_loop(adhandle, 0, packet_handler, NULL)

packet_hanler回调函数，就是每次接收到过滤之后的数据包使用的函数

/* 回调函数，当收到每一个数据包时会被libpcap所调用 */

void packet_handler(u_char *param, const struct pcap_pkthdr *header, const
u_char *pkt_data)
</code></pre><p>这就是整个流程了，程序只监控，所以是没有结束的，除非用户结束</p>
<p>我不喜欢在这里贴出很多代码，只是简单说一下写时候的注意点</p>
<p>源代码我发到了CSDN，后面会给出网址，如果不能下，可以在Baidu联系我，小弟能帮上忙就一定帮的</p>
<p>整个程序的注意点</p>
<ol>
<li>
<p>结构的定义，写完整个程序，包括ARP接受，发送，欺骗，我最大的感觉就是关于数据长度的重要性，以前不以为意，只是觉得可以省空间，也不觉得64位和32位有
什么区别，不过写完网络数据包的分析，就觉得数据长度控制很重要，所以就算有指针，也是需要定义被指向目标的长度。因为指针的出现，数据的转换实在是变得太方便了。可
以直接把WinPcap捕捉到的数据直接往后移动14个单位长度，获得ip头，而忽略前面14字节的以太网头部。</p>
</li>
<li>
<p>unsigned char, unsigned short, unsigned int等非负数据的使用和转换必须非常小心，因为插入断电看到的数据未必就
是真实的数据，压根看不出真实数据，我后来使用Ethereal来进行数据包的监控，非常有效，Ethereal是一款GUI界面的网络数据包监控软件，非常好用，他
本身也是基于WinPcap的。</p>
</li>
<li>
<p>安全性的控制，程序的框架，其实我是使用的WinPcap自带代码的框架，安全控制几乎是步步为营，刚开始我认为有点大题小做，后来把程序移植到别的机子上运行
，真的发现安全控制做的真好，每一步都可以知道问题出在哪里，防止更多错误出现。</p>
</li>
<li>
<p>有一个MacToStr()的函数写的非常巧妙，是课本上面的事例程序，使用了位运算，本来还有一个IpToStr()，不过似乎出现了一些问题，于是我的Ma
c地址存储在u_char[6]里面，而Ip地址存储在ip_address里面，自定义了一个结构，这个也是学习WinPcap示例代码的。我觉得自定义结构使用更
方便高效。</p>
</li>
<li>
<p>网络存储字节高地位和本地存储高地位是相反的，有几个函数专门用来转换的,我直接使用的自己人工把那几个自己转换的</p>
</li>
<li>
<p>printf使用很方便，这点要感谢暑假Acm训练…</p>
</li>
</ol>
<p>接受数据包其实非常简单，几乎就是简单的把WinPcap使用了一下</p>
<p>本程序源代码的下载地址（[http://download.csdn.net/source/647852](<a href="http://download.csdn.net/">http://download.csdn.net/</a>
source/647852)）其实很简单，如果有WinPcap开发文档，自己写也差不多</p>
<p>我现在已经写完了欺骗了，会逐渐把自己的心的经验拿上来分享一下</p>
<p>这几天看MFC图形界面，网络编程方面在看使用WinAPI来发送数据包，这样就可以不用装WinPcap了</p>
<p>想不适用WinPcap就直接使用WinPcap的函数，我正在尝试，光考出几个dll还不够，还要一个npf.sys支持，我也是今天刚看到资料，待会儿在机房做完
测试会写个帖子的。</p>
<p>呼呼，就写这么点了，晚上图形实验课在机房做ARP欺骗，老师的防火墙一直叫，嘿嘿，不过大家都有360防火墙，倒没什么事故。</p>
<p>系统重装了，打好多补丁啊，还有好多软件重装…郁闷…</p>
<p>老系统用了2年没重装了，也到寿命了…</p>
]]></content:encoded>
    </item>
    <item>
      <title>ARP</title>
      <link>https://blog.alswl.com/2008/09/arp/</link>
      <pubDate>Tue, 23 Sep 2008 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2008/09/arp/</guid>
      <description>挺累的，连续两天忙到3点睡觉，早上9点起来继续做 开始挺没状态，但后来写着写着状态来了，一个一个新的想法也加入了。代码就变得丰富多彩起来。 这是网络编程，也就是我的专业方向课的第一份作业，我特别看中这次，当初分方向时候，鑫爷和大妈都去了软件，我留在网络了。似乎都觉得网络好学，简单，不要写程序 那么我就写 第一次将c++与系统底层结合起来，去操作网络上的数据包，感觉真是，太perfect了，不再是呆板的代码</description>
      <content:encoded><![CDATA[<p>挺累的，连续两天忙到3点睡觉，早上9点起来继续做</p>
<p>开始挺没状态，但后来写着写着状态来了，一个一个新的想法也加入了。代码就变得丰富多彩起来。</p>
<p>这是网络编程，也就是我的专业方向课的第一份作业，我特别看中这次，当初分方向时候，鑫爷和大妈都去了软件，我留在网络了。似乎都觉得网络好学，简单，不要写程序</p>
<p>那么我就写</p>
<p>第一次将c++与系统底层结合起来，去操作网络上的数据包，感觉真是，太perfect了，不再是呆板的代码，而是真实的数据，真实的操作，甚至我感觉通过键盘，我能
控制一切的感觉</p>
<p>从连接网卡，获取数据，过滤数据包，容错纠正，类型匹配，发送数据，匹配数据包，发送伪装数据攻击，我甚至写出了一套简单的ARP病毒…</p>
<p>其实说起来也不难，只要稍微组合一下几个函数而已</p>
<p>呵呵，挺开心的，自己做东西真好，真实在</p>
<p>唔…睡觉了…</p>
<p>手机打字还是挺累的…</p>
<p>待会儿放上详细流程</p>
]]></content:encoded>
    </item>
    <item>
      <title>网络编程学习日记(2)_WinPcap自带教程的一些例子的学习</title>
      <link>https://blog.alswl.com/2008/09/network-programming-learning-diary-2-_winpcap-some-examples-of-course-bring-their-own-learning/</link>
      <pubDate>Sun, 14 Sep 2008 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2008/09/network-programming-learning-diary-2-_winpcap-some-examples-of-course-bring-their-own-learning/</guid>
      <description>1.编译时候会出现函数问题 &amp;#39;pcap_findalldevs_ex&amp;#39; : undeclared identifier &amp;#39;PCAP_SRC_IF_STRING&amp;#39; : undeclared identifier &amp;#39;pcap_open&amp;#39; : undeclared identifier &amp;#39;PCAP_OPENFLAG_PROMISCUOUS&amp;#39; : undeclared identifier &amp;#39;=&amp;#39; : cannot convert from &amp;#39;int&amp;#39; to &amp;#39;struct pcap *&amp;#39; 等一系列函数找不到的问题，导致这些问题的关键在于他们的函数声明并不包含在pcap.h这个 头文件里面，而是包含在remote-ext.h这个函数里面，所以只需要在 #include &amp;ldquo;pcap.h&amp;quot;后面加上 #include &amp;ldquo;remote-ext.h&amp;rdquo; 就可以编译通过了。 网上有网友戏称说是WinPcap开发小组故意做的恶作剧或者是撰写doc说明时候忘记加入了 = =#</description>
      <content:encoded><![CDATA[<p>1.编译时候会出现函数问题</p>
<pre tabindex="0"><code>&#39;pcap_findalldevs_ex&#39; : undeclared identifier
&#39;PCAP_SRC_IF_STRING&#39; : undeclared identifier
&#39;pcap_open&#39; : undeclared identifier
&#39;PCAP_OPENFLAG_PROMISCUOUS&#39; : undeclared identifier
&#39;=&#39; : cannot convert from &#39;int&#39; to &#39;struct pcap *&#39;
</code></pre><p>等一系列函数找不到的问题，导致这些问题的关键在于他们的函数声明并不包含在pcap.h这个</p>
<p>头文件里面，而是包含在remote-ext.h这个函数里面，所以只需要在</p>
<p>#include &ldquo;pcap.h&quot;后面加上</p>
<p>#include &ldquo;remote-ext.h&rdquo;</p>
<p>就可以编译通过了。</p>
<p>网上有网友戏称说是WinPcap开发小组故意做的恶作剧或者是撰写doc说明时候忘记加入了</p>
<p>= =#</p>
<p>2.出现连接错误</p>
<pre tabindex="0"><code>Cpp3.obj : error LNK2001: unresolved external symbol
[__imp__ntohs@4](mailto:__imp__ntohs@4)

Debug/Cpp3.exe : fatal error LNK1120: 1 unresolved externals
</code></pre><p>一般添加工程只需要添加wpcap.lib这个库文件，而在分析数据包这段代码里，光这个头文件</p>
<p>已经不够了，需要再添加ws2_32.lib这个头文件。其实这个在WinPcap的配置VC里有说明，但</p>
<p>是以前懒，都只用wpcap.lib</p>
<p>3.关于程序运行时候是否需要WinPcap的支持，我无法测试出结果，因为学校上网方式的限制</p>
<p>，所有系统都是有WinPcap运行库文件的，待会儿去网上找找相关资料呢</p>
<p>4.暑假一直看的是英文说明文档，很吃力，最近在搜狗随便一搜，居然发现了有现成翻译好的</p>
<p>中文说明文档，翻译挺不错的，可以去搜索下一下。</p>
<p>终于开始开网络编程课，感叹一下WinPcap的强大，还是停留在用户层的编程，完全没能力看</p>
<p>核心的源代码。。。</p>
]]></content:encoded>
    </item>
    <item>
      <title>网络编程学习日记(1)_WinPcap和VC的配置</title>
      <link>https://blog.alswl.com/2008/08/learning-network-programming-diary-1-_winpcap-and-vc-configuration/</link>
      <pubDate>Thu, 21 Aug 2008 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2008/08/learning-network-programming-diary-1-_winpcap-and-vc-configuration/</guid>
      <description>下学期有网络变成，用的是《计算机网络高级软件编程技术》，研究生教材，感觉书写的很泛泛，毕竟是给研究生用的书籍，很多基础的细节都没有写清楚，搞不懂学校怎么弄这 种书，叹一个。 直接导致了我很多东西都得一点一点去网上查找。 很多函数都是用的WinPcap的，所以我又抓紧时间看WinPcap的入门知识。 WinPcap开发包下载：[http://www.winpcap.org/install/default.h</description>
      <content:encoded><![CDATA[<p>下学期有网络变成，用的是《计算机网络高级软件编程技术》，研究生教材，感觉书写的很泛泛，毕竟是给研究生用的书籍，很多基础的细节都没有写清楚，搞不懂学校怎么弄这
种书，叹一个。</p>
<p>直接导致了我很多东西都得一点一点去网上查找。</p>
<p>很多函数都是用的WinPcap的，所以我又抓紧时间看WinPcap的入门知识。</p>
<p>WinPcap开发包下载：[http://www.winpcap.org/install/default.htm](<a href="http://www.winpcap.o">http://www.winpcap.o</a>
rg/install/default.htm)</p>
<p>里面有开发者包Developer&rsquo;s Pack和普通使用的安装程序，宽带上网助手就是普通的安装包，而开发要使用的则是Developer&rsquo;s Pack。</p>
<p>下来之后，安装到某个目录，然后配置VC，把那个目录的include和lib两个目录放到VC的选项-&gt;目录里面。</p>
<p>WinPcap目录下有doc文档，里面的东西相当全面。我运行了两个，都不能直接运行。</p>
<p>第一个简单程序是获取网卡适配器信息，里面一个函数pcap_findalldevs_ex找不到，网上资料说是因为这个函数属于远程网卡获取，它的声明在#incl
ude &ldquo;remote-ext.h&quot;里面，加上去就可以运行了。</p>
<p>第二个程序错误更多，</p>
<pre tabindex="0"><code>F:学习网络WiPcap8_08_202Cpp1.cpp(155) : error C2065: &#39;socklen_t&#39; : undeclared
identifier

F:学习网络WiPcap8_08_202Cpp1.cpp(155) : error C2146: syntax error : missing &#39;;&#39;
before identifier &#39;sockaddrlen&#39;

F:学习网络WiPcap8_08_202Cpp1.cpp(155) : error C2065: &#39;sockaddrlen&#39; : undeclared
identifier

F:学习网络WiPcap8_08_202Cpp1.cpp(164) : error C2065: &#39;getnameinfo&#39; : undeclared
identifier

F:学习网络WiPcap8_08_202Cpp1.cpp(170) : error C2065: &#39;NI_NUMERICHOST&#39; : undeclared
identifier
</code></pre><p>错误根由是因为WinPcap支持ipv6,而VC的winsock2.h太老了，很多结构都没有被支持，所以产生错误。网上有人说可以用VS新版本调试，我电脑里面
是VS2008，但是仍然产生错误</p>
<p><code>_vsnprintf</code> 属性与生命不匹配，网上没有合适的解决方案，我感觉是WinPcap的某个头文件与stdio.h参数不匹配。</p>
<p>既然VS也无法通过，我实在没能力去修改WinPcap的头文件，所以就用最后一个方案，使用VC6.0的最新的PlatForm
SDK开发包，里面包含了新的头文件，就可以支持WinPcap了。</p>
<p>有人说PSDK只有Windows2003的版本，我在微软里面找到了WinXPSP2的PSDK。</p>
<p>网址如下</p>
<p><a href="http://www.microsoft.com/msdownload/platformsdk/sdkupdate/XPSP2FULLInstall.htm">http://www.microsoft.com/msdownload/platformsdk/sdkupdate/XPSP2FULLInstall.htm</a></p>
<p>里面好几个Cab，网页里面有完整的安装说明。</p>
<p>我正在下，搞好之后如果能用再说。</p>
<p>弄好了，下面是PlatFormSDK安装步骤</p>
<p>(1)安装过程:</p>
<p>CMD运行PSDK-FULL.bat，参数为一个目录，里面会被解压缩安装包，然后Setup，一路Next就可以了。</p>
<p>(2)配置过程</p>
<p>打开Visual C++6.0，在选项里面连接，把PSDK安装后的include和lib加入相应的位置。</p>
<p>特别注意，要把这些目录的顺序调高，我直接放到了最高层去了。</p>
<p>呵呵，编译一下，通过了，好Happy啊。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
