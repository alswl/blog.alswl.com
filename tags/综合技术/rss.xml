<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>综合技术 on Log4D</title>
    <link>https://blog.alswl.com/tags/%E7%BB%BC%E5%90%88%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 综合技术 on Log4D</description>
    <generator>Hugo -- 0.134.3</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 29 Oct 2013 22:32:00 +0800</lastBuildDate>
    <atom:link href="https://blog.alswl.com/tags/%E7%BB%BC%E5%90%88%E6%8A%80%E6%9C%AF/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>15 分钟学会 R 语言[译文]</title>
      <link>https://blog.alswl.com/2013/10/r-tutorial/</link>
      <pubDate>Tue, 29 Oct 2013 22:32:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2013/10/r-tutorial/</guid>
      <description>&lt;p&gt;仗着自己有几门语言的基础，我在学新语言时候，都会选择一些快速入门教程。
比如 &lt;a href=&#34;http://learnxinyminutes.com/&#34;&gt;Learn X in Y minuts&lt;/a&gt; 就是我经常光顾的站点。&lt;/p&gt;
&lt;p&gt;前段时间，小柒在用 R 写数据分析脚本，我就建议她把 Learn X in Y minuts 里面的
R 语言教程翻译出来。话说 Learn X in Y minuts 里面的中文贡献还是非常多的，赞。&lt;/p&gt;
&lt;p&gt;Learn X in Y minuts 的源码托管在 &lt;a href=&#34;https://github.com/adambard/learnxinyminutes-docs&#34;&gt;Github&lt;/a&gt;。
小柒被我逼着把这篇 &lt;a href=&#34;http://learnxinyminutes.com/docs/r/&#34;&gt;R 语言教程&lt;/a&gt;
翻译到 &lt;a href=&#34;http://learnxinyminutes.com/docs/zh-cn/r-cn/&#34;&gt;R 语言教程中文版&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面是译文，有不妥的地方可以留言或者直接去 Github 上面 Pull request。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;R 是一门统计语言。它有很多数据分析和挖掘程序包。可以用来统计、分析和制图。
你也可以在 LaTeX 文档中运行 &lt;code&gt;R&lt;/code&gt; 命令。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>仗着自己有几门语言的基础，我在学新语言时候，都会选择一些快速入门教程。
比如 <a href="http://learnxinyminutes.com/">Learn X in Y minuts</a> 就是我经常光顾的站点。</p>
<p>前段时间，小柒在用 R 写数据分析脚本，我就建议她把 Learn X in Y minuts 里面的
R 语言教程翻译出来。话说 Learn X in Y minuts 里面的中文贡献还是非常多的，赞。</p>
<p>Learn X in Y minuts 的源码托管在 <a href="https://github.com/adambard/learnxinyminutes-docs">Github</a>。
小柒被我逼着把这篇 <a href="http://learnxinyminutes.com/docs/r/">R 语言教程</a>
翻译到 <a href="http://learnxinyminutes.com/docs/zh-cn/r-cn/">R 语言教程中文版</a>。</p>
<p>下面是译文，有不妥的地方可以留言或者直接去 Github 上面 Pull request。</p>
<hr />
<p>R 是一门统计语言。它有很多数据分析和挖掘程序包。可以用来统计、分析和制图。
你也可以在 LaTeX 文档中运行 <code>R</code> 命令。</p>
<!-- more -->
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># 评论以 # 开始</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># R 语言原生不支持 多行注释</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 但是你可以像这样来多行注释</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 在窗口里按回车键可以执行一条命令</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">###################################################################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 不用懂编程就可以开始动手了</span>
</span></span><span class="line"><span class="cl"><span class="c1">###################################################################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">()</span>	<span class="c1"># 浏览内建的数据集</span>
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 北美主要河流的长度（数据集）</span>
</span></span><span class="line"><span class="cl"><span class="n">ls</span><span class="p">()</span>	<span class="c1"># 在工作空间中查看「河流」是否出现</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 撇一眼数据集</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 735 320 325 392 524 450</span>
</span></span><span class="line"><span class="cl"><span class="n">length</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 我们测量了多少条河流？</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 141</span>
</span></span><span class="line"><span class="cl"><span class="n">summary</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  135.0   310.0   425.0   591.2   680.0  3710.0</span>
</span></span><span class="line"><span class="cl"><span class="n">stem</span><span class="p">(</span><span class="n">rivers</span><span class="p">)</span>	<span class="c1"># 茎叶图（一种类似于直方图的展现形式）</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  The decimal point is 2 digit(s) to the right of the |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   0 | 4</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   2 | 011223334555566667778888899900001111223333344455555666688888999</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   4 | 111222333445566779001233344567</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   6 | 000112233578012234468</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   8 | 045790018</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  10 | 04507</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  12 | 1471</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  14 | 56</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  16 | 7</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  18 | 9</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  20 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  22 | 25</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  24 | 3</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  26 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  28 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  30 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  32 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  34 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  36 | 1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">stem</span><span class="p">(</span><span class="n">log</span><span class="p">(</span><span class="n">rivers</span><span class="p">))</span>	<span class="c1"># 查看数据集的方式既不是标准形式，也不是取log后的结果! 看起来，是钟形曲线形式的基本数据集</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#  The decimal point is 1 digit(s) to the left of the |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  48 | 1</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  50 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  52 | 15578</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  54 | 44571222466689</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  56 | 023334677000124455789</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  58 | 00122366666999933445777</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  60 | 122445567800133459</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  62 | 112666799035</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  64 | 00011334581257889</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  66 | 003683579</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  68 | 0019156</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  70 | 079357</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  72 | 89</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  74 | 84</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  76 | 56</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  78 | 4</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  80 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  82 | 2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">hist</span><span class="p">(</span><span class="n">rivers</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">border</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span> <span class="n">breaks</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>	<span class="c1"># 试试用这些参数画画 （译者注：给 river 做统计频数直方图，包含了这些参数：数据源，颜色，边框，空格）</span>
</span></span><span class="line"><span class="cl"><span class="n">hist</span><span class="p">(</span><span class="n">log</span><span class="p">(</span><span class="n">rivers</span><span class="p">),</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">border</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span> <span class="n">breaks</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>	<span class="c1">#你还可以做更多式样的绘图</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 还有其他一些简单的数据集可以被用来加载。R 语言包括了大量这种 data()</span>
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">discoveries</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">lwd</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">xlab</span><span class="o">=</span><span class="s2">&#34;Year&#34;</span><span class="p">,</span> <span class="n">main</span><span class="o">=</span><span class="s2">&#34;Number of important discoveries per year&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 译者注：参数为（数据源，颜色，线条宽度，X 轴名称，标题）</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">discoveries</span><span class="p">,</span> <span class="n">col</span><span class="o">=</span><span class="s2">&#34;#333333&#34;</span><span class="p">,</span> <span class="n">lwd</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="nb">type</span> <span class="o">=</span> <span class="s2">&#34;h&#34;</span><span class="p">,</span> <span class="n">xlab</span><span class="o">=</span><span class="s2">&#34;Year&#34;</span><span class="p">,</span> <span class="n">main</span><span class="o">=</span><span class="s2">&#34;Number of important discoveries per year&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 除了按照默认的年份排序，我们还可以排序来发现特征</span>
</span></span><span class="line"><span class="cl"><span class="n">sort</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  [1]  0  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1  2  2  2  2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [26]  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  3  3  3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [51]  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  4  4  4  4  4  4  4  4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [76]  4  4  4  4  5  5  5  5  5  5  5  6  6  6  6  6  6  7  7  7  7  8  9 10 12</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">stem</span><span class="p">(</span><span class="n">discoveries</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># 译者注：茎叶图（数据，放大系数）</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  The decimal point is at the |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   0 | 000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   1 | 000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   2 | 00000000000000000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   3 | 00000000000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   4 | 000000000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   5 | 0000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   6 | 000000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   7 | 0000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   8 | 0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   9 | 0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  10 | 0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  11 |</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  12 | 0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">max</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 12</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">summary</span><span class="p">(</span><span class="n">discoveries</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    0.0     2.0     3.0     3.1     4.0    12.0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#基本的统计学操作也不需要任何编程知识</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#随机生成数据</span>
</span></span><span class="line"><span class="cl"><span class="nb">round</span><span class="p">(</span><span class="n">runif</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="nb">min</span><span class="o">=</span><span class="mf">.5</span><span class="p">,</span> <span class="nb">max</span><span class="o">=</span><span class="mf">6.5</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 译者注：runif 产生随机数，round 四舍五入</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 1 4 6 1 4 6 4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 你输出的结果会和我们给出的不同，除非我们设置了相同的随机种子 random.seed(31337)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#从标准高斯函数中随机生成 9 次</span>
</span></span><span class="line"><span class="cl"><span class="n">rnorm</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1]  0.07528471  1.03499859  1.34809556 -0.82356087  0.61638975 -1.88757271</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [7] -0.59975593  0.57629164  1.08455362</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 基础编程</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 数值</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#“数值”指的是双精度的浮点数</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span>	<span class="c1"># 5</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="mf">5e4</span>	<span class="c1"># 50000				# 用科学技术法方便的处理极大值、极小值或者可变的量级</span>
</span></span><span class="line"><span class="cl"><span class="mf">6.02e23</span>	<span class="c1"># 阿伏伽德罗常数#</span>
</span></span><span class="line"><span class="cl"><span class="mf">1.6e-35</span>	<span class="c1"># 布朗克长度</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 长整数并用 L 结尾</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span><span class="n">L</span>	<span class="c1"># 5</span>
</span></span><span class="line"><span class="cl"><span class="c1">#输出5L</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="mi">5</span><span class="n">L</span><span class="p">)</span>	<span class="c1"># &#34;integer&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 可以自己试一试？用 class() 函数获取更多信息</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 事实上，你可以找一些文件查阅 `xyz` 以及xyz的差别</span>
</span></span><span class="line"><span class="cl"><span class="c1"># `xyz` 用来查看源码实现，?xyz 用来看帮助</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 算法</span>
</span></span><span class="line"><span class="cl"><span class="mi">10</span> <span class="o">+</span> <span class="mi">66</span>	<span class="c1"># 76</span>
</span></span><span class="line"><span class="cl"><span class="mf">53.2</span> <span class="o">-</span> <span class="mi">4</span>	<span class="c1"># 49.2</span>
</span></span><span class="line"><span class="cl"><span class="mi">2</span> <span class="o">*</span> <span class="mf">2.0</span>	<span class="c1"># 4</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span><span class="n">L</span> <span class="o">/</span> <span class="mi">4</span>	<span class="c1"># 0.75</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span> <span class="o">%%</span> <span class="mi">2</span>	<span class="c1"># 1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 特殊数值类型</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NaN</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">Inf</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="o">-</span><span class="n">Inf</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;		# 在以下场景中会用到 integrate( dnorm(x), 3, Inf ) -- 消除 Z 轴数据</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 但要注意，NaN 并不是唯一的特殊数值类型……</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NA</span><span class="p">)</span>	<span class="c1"># 看上面</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NULL</span><span class="p">)</span>	<span class="c1"># NULL</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 简单列表</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>	<span class="c1"># 6 8 7 5 3 0 9</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="s1">&#39;alef&#39;</span><span class="p">,</span> <span class="s1">&#39;bet&#39;</span><span class="p">,</span> <span class="s1">&#39;gimmel&#39;</span><span class="p">,</span> <span class="s1">&#39;dalet&#39;</span><span class="p">,</span> <span class="s1">&#39;he&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="s1">&#39;Z&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&#34;Zoro&#34;</span>	<span class="c1"># FALSE FALSE FALSE FALSE</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 一些优雅的内置功能</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span><span class="p">:</span><span class="mi">15</span>	<span class="c1"># 5  6  7  8  9 10 11 12 13 14 15</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">seq</span><span class="p">(</span><span class="n">from</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">to</span><span class="o">=</span><span class="mi">31337</span><span class="p">,</span> <span class="n">by</span><span class="o">=</span><span class="mi">1337</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  [1]     0  1337  2674  4011  5348  6685  8022  9359 10696 12033 13370 14707</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [13] 16044 17381 18718 20055 21392 22729 24066 25403 26740 28077 29414 30751</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">letters</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  [1] &#34;a&#34; &#34;b&#34; &#34;c&#34; &#34;d&#34; &#34;e&#34; &#34;f&#34; &#34;g&#34; &#34;h&#34; &#34;i&#34; &#34;j&#34; &#34;k&#34; &#34;l&#34; &#34;m&#34; &#34;n&#34; &#34;o&#34; &#34;p&#34; &#34;q&#34; &#34;r&#34; &#34;s&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [20] &#34;t&#34; &#34;u&#34; &#34;v&#34; &#34;w&#34; &#34;x&#34; &#34;y&#34; &#34;z&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">month</span><span class="o">.</span><span class="n">abb</span>	<span class="c1"># &#34;Jan&#34; &#34;Feb&#34; &#34;Mar&#34; &#34;Apr&#34; &#34;May&#34; &#34;Jun&#34; &#34;Jul&#34; &#34;Aug&#34; &#34;Sep&#34; &#34;Oct&#34; &#34;Nov&#34; &#34;Dec&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Access the n&#39;th element of a list with list.name[n] or sometimes list.name[[n]]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 list.name[n] 来访问第 n 个列表元素，有时候需要使用 list.name[[n]]</span>
</span></span><span class="line"><span class="cl"><span class="n">letters</span><span class="p">[</span><span class="mi">18</span><span class="p">]</span>	<span class="c1"># &#34;r&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">LETTERS</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span>	<span class="c1"># &#34;M&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">month</span><span class="o">.</span><span class="n">name</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span>	<span class="c1"># &#34;September&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">)[</span><span class="mi">3</span><span class="p">]</span>	<span class="c1"># 7</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 字符串</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 字符串和字符在 R 语言中没有区别</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;Horatio&#34;</span>	<span class="c1"># &#34;Horatio&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="s2">&#34;Horatio&#34;</span><span class="p">)</span> <span class="c1"># &#34;character&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">substr</span><span class="p">(</span><span class="s2">&#34;Fortuna multis dat nimis, nulli satis.&#34;</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">15</span><span class="p">)</span>	<span class="c1"># &#34;multis &#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">gsub</span><span class="p">(</span><span class="s1">&#39;u&#39;</span><span class="p">,</span> <span class="s1">&#39;ø&#39;</span><span class="p">,</span> <span class="s2">&#34;Fortuna multis dat nimis, nulli satis.&#34;</span><span class="p">)</span>	<span class="c1"># &#34;Fortøna møltis dat nimis, nølli satis.&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 逻辑值</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 布尔值</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">TRUE</span><span class="p">)</span>	<span class="c1"># &#34;logical&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">FALSE</span><span class="p">)</span>	<span class="c1"># &#34;logical&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 和我们预想的一样</span>
</span></span><span class="line"><span class="cl"><span class="n">TRUE</span> <span class="o">==</span> <span class="n">TRUE</span>	<span class="c1"># TRUE</span>
</span></span><span class="line"><span class="cl"><span class="n">TRUE</span> <span class="o">==</span> <span class="n">FALSE</span>	<span class="c1"># FALSE</span>
</span></span><span class="line"><span class="cl"><span class="n">FALSE</span> <span class="o">!=</span> <span class="n">FALSE</span>	<span class="c1"># FALSE</span>
</span></span><span class="line"><span class="cl"><span class="n">FALSE</span> <span class="o">!=</span> <span class="n">TRUE</span>	<span class="c1"># TRUE</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 缺失数据（NA）也是逻辑值</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">NA</span><span class="p">)</span>	<span class="c1"># &#34;logical&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#定义NA为逻辑型</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 因子</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 因子是为数据分类排序设计的（像是排序小朋友们的年级或性别）</span>
</span></span><span class="line"><span class="cl"><span class="n">levels</span><span class="p">(</span><span class="n">factor</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;male&#34;</span><span class="p">,</span> <span class="s2">&#34;male&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;NA&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">)))</span>	<span class="c1"># &#34;female&#34; &#34;male&#34;   &#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">factor</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">,</span> <span class="s2">&#34;male&#34;</span><span class="p">,</span> <span class="s2">&#34;NA&#34;</span><span class="p">,</span> <span class="s2">&#34;female&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1">#  female female male   NA     female</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Levels: female male NA</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data</span><span class="p">(</span><span class="n">infert</span><span class="p">)</span>	<span class="c1"># 自然以及引产导致的不育症</span>
</span></span><span class="line"><span class="cl"><span class="n">levels</span><span class="p">(</span><span class="n">infert</span><span class="err">$</span><span class="n">education</span><span class="p">)</span>	<span class="c1"># &#34;0-5yrs&#34;  &#34;6-11yrs&#34; &#34;12+ yrs&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 变量</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 有许多种方式用来赋值</span>
</span></span><span class="line"><span class="cl"><span class="n">x</span> <span class="o">=</span> <span class="mi">5</span> <span class="c1"># 这样可以</span>
</span></span><span class="line"><span class="cl"><span class="n">y</span> <span class="o">&lt;-</span> <span class="s2">&#34;1&#34;</span> <span class="c1"># 更推荐这样</span>
</span></span><span class="line"><span class="cl"><span class="n">TRUE</span> <span class="o">-&gt;</span> <span class="n">z</span> <span class="c1"># 这样可行，但是很怪</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#我们还可以使用强制转型</span>
</span></span><span class="line"><span class="cl"><span class="k">as</span><span class="o">.</span><span class="n">numeric</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>	<span class="c1"># 1</span>
</span></span><span class="line"><span class="cl"><span class="k">as</span><span class="o">.</span><span class="n">character</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>	<span class="c1"># &#34;5&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 循环</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># for 循环语句</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="ow">in</span> <span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nb">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># while 循环</span>
</span></span><span class="line"><span class="cl"><span class="n">a</span> <span class="o">&lt;-</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">cat</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="s2">&#34;...&#34;</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">a</span> <span class="o">&lt;-</span> <span class="n">a</span> <span class="o">-</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 记住，在 R 语言中 for / while 循环都很慢</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 建议使用 apply()（我们一会介绍）来错做一串数据（比如一列或者一行数据）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># IF/ELSE</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 再来看这些优雅的标准</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="mi">4</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Huzzah! It worked!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Noooo! This is blatantly illogical!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1] &#34;Huzzah! It worked!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 函数</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 定义如下</span>
</span></span><span class="line"><span class="cl"><span class="n">jiggle</span> <span class="o">&lt;-</span> <span class="n">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">+</span> <span class="n">rnorm</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">sd</span><span class="o">=</span><span class="mf">.1</span><span class="p">)</span>	<span class="c1">#add in a bit of (controlled) noise</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 和其他 R 语言函数一样调用</span>
</span></span><span class="line"><span class="cl"><span class="n">jiggle</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>	<span class="c1"># 5±ε. 使用 set.seed(2716057) 后， jiggle(5)==5.005043</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 数据容器：vectors, matrices, data frames, and arrays</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 单维度</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以将目前我们学习到的任何类型矢量化，只要它们拥有相同的类型</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span>	<span class="c1">#  8  9 10 11</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 矢量的类型是这一组数据元素的类型</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># If you vectorize items of different classes, weird coercions happen</span>
</span></span><span class="line"><span class="cl"><span class="c1">#如果你强制的将不同类型数值矢量化，会出现特殊值</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="n">TRUE</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>	<span class="c1"># 1 4</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>	<span class="c1"># &#34;dog&#34;  &#34;TRUE&#34; &#34;4&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#我们这样来取内部数据，（R 的下标索引顺序 1 开始）</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>	<span class="c1"># 8</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 我们可以根据条件查找特定数据</span>
</span></span><span class="line"><span class="cl"><span class="n">which</span><span class="p">(</span><span class="n">vec</span> <span class="o">%%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>	<span class="c1"># 1 3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 抓取矢量中第一个和最后一个字符</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>	<span class="c1"># 8</span>
</span></span><span class="line"><span class="cl"><span class="n">tail</span><span class="p">(</span><span class="n">vec</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>	<span class="c1"># 11</span>
</span></span><span class="line"><span class="cl"><span class="c1">#如果下标溢出或不存会得到 NA</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span>	<span class="c1"># NA</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以使用 length() 获取矢量的长度</span>
</span></span><span class="line"><span class="cl"><span class="n">length</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以直接操作矢量或者矢量的子集</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span> <span class="o">*</span> <span class="mi">4</span>	<span class="c1"># 16 20 24 28</span>
</span></span><span class="line"><span class="cl"><span class="n">vec</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="o">*</span> <span class="mi">5</span>	<span class="c1"># 25 30</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 这里有许多内置的函数，来表现向量</span>
</span></span><span class="line"><span class="cl"><span class="n">mean</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 9.5</span>
</span></span><span class="line"><span class="cl"><span class="n">var</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 1.666667</span>
</span></span><span class="line"><span class="cl"><span class="n">sd</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 1.290994</span>
</span></span><span class="line"><span class="cl"><span class="nb">max</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 11</span>
</span></span><span class="line"><span class="cl"><span class="nb">min</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 8</span>
</span></span><span class="line"><span class="cl"><span class="nb">sum</span><span class="p">(</span><span class="n">vec</span><span class="p">)</span>	<span class="c1"># 38</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 二维（相同元素类型）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#你可以为同样类型的变量建立矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span> <span class="o">&lt;-</span> <span class="n">matrix</span><span class="p">(</span><span class="n">nrow</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="n">ncol</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    2    5</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    3    6</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 和 vector 不一样的是，一个矩阵的类型真的是 「matrix」，而不是内部元素的类型</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span> <span class="c1"># =&gt; &#34;matrix&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 访问第一行的字符</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span><span class="p">[</span><span class="mi">1</span><span class="p">,]</span>	<span class="c1"># 1 4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 操作第一行数据</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span> <span class="o">*</span> <span class="n">mat</span><span class="p">[,</span><span class="mi">1</span><span class="p">]</span>	<span class="c1"># 3 6 9</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 访问一个特定数据</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>	<span class="c1"># 6</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 转置整个矩阵（译者注：变成 2 行 3 列）</span>
</span></span><span class="line"><span class="cl"><span class="n">t</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2] [,3]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    2    3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    4    5    6</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 cbind() 函数把两个矩阵按列合并，形成新的矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">mat2</span> <span class="o">&lt;-</span> <span class="n">cbind</span><span class="p">(</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;bird&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">mat2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,] &#34;1&#34;  &#34;dog&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,] &#34;2&#34;  &#34;cat&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,] &#34;3&#34;  &#34;bird&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [4,] &#34;4&#34;  &#34;dog&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">mat2</span><span class="p">)</span>	<span class="c1"># matrix</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Again, note what happened!</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 注意</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 因为矩阵内部元素必须包含同样的类型</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 所以现在每一个元素都转化成字符串</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span><span class="p">(</span><span class="n">class</span><span class="p">(</span><span class="n">mat2</span><span class="p">[,</span><span class="mi">1</span><span class="p">]),</span> <span class="n">class</span><span class="p">(</span><span class="n">mat2</span><span class="p">[,</span><span class="mi">2</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 按行合并两个向量，建立新的矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">mat3</span> <span class="o">&lt;-</span> <span class="n">rbind</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span> <span class="n">c</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">mat3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2] [,3] [,4]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    2    4    5</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    6    7    0    4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 哈哈，数据类型都一样的，没有发生强制转换，生活真美好</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 二维(不同的元素类型)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 利用 data frame 可以将不同类型数据放在一起</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span> <span class="o">&lt;-</span> <span class="n">data</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;bird&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">names</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span> <span class="o">&lt;-</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;number&#34;</span><span class="p">,</span> <span class="s2">&#34;species&#34;</span><span class="p">)</span> <span class="c1"># 给数据列命名</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span>	<span class="c1"># &#34;data.frame&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   number species</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 1      5     dog</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 2      2     cat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 3      1    bird</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 4      4     dog</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">dat</span><span class="err">$</span><span class="n">number</span><span class="p">)</span>	<span class="c1"># &#34;numeric&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">class</span><span class="p">(</span><span class="n">dat</span><span class="p">[,</span><span class="mi">2</span><span class="p">])</span>	<span class="c1"># &#34;factor&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># data.frame() 会将字符向量转换为 factor 向量</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 有很多精妙的方法来获取 data frame 的子数据集</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span><span class="err">$</span><span class="n">number</span>	<span class="c1"># 5 2 1 4</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span><span class="p">[,</span><span class="mi">1</span><span class="p">]</span>	<span class="c1"># 5 2 1 4</span>
</span></span><span class="line"><span class="cl"><span class="n">dat</span><span class="p">[,</span><span class="s2">&#34;number&#34;</span><span class="p">]</span>	<span class="c1"># 5 2 1 4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 多维（相同元素类型）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 arry 创造一个 n 维的表格</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You can make a two-dimensional table (sort of like a matrix)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以建立一个 2 维表格（有点像矩阵）</span>
</span></span><span class="line"><span class="cl"><span class="n">array</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span><span class="n">c</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)),</span> <span class="n">dim</span><span class="o">=</span><span class="n">c</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2] [,3] [,4]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    4    8    3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    2    5    9    6</span>
</span></span><span class="line"><span class="cl"><span class="c1">#你也可以利用数组建立一个三维的矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">array</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">300</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">c</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="n">c</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">60</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="n">c</span><span class="p">(</span><span class="mi">66</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">847</span><span class="p">))),</span> <span class="n">dim</span><span class="o">=</span><span class="n">c</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># , , 1</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    2    8</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]  300    9</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    4    0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># , , 2</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    5   66</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]   60    7</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    0  847</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#列表（多维的，不同类型的）</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># R语言有列表的形式</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span> <span class="o">&lt;-</span> <span class="nb">list</span><span class="p">(</span><span class="n">time</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="mi">40</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span><span class="err">$</span><span class="n">price</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="n">rnorm</span><span class="p">(</span><span class="mi">40</span><span class="p">,</span><span class="mf">.5</span><span class="o">*</span><span class="n">list1</span><span class="err">$</span><span class="n">time</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span> <span class="c1"># 随机</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># You can get items in the list like so</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你可以这样获得列表的元素</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span><span class="err">$</span><span class="n">time</span>
</span></span><span class="line"><span class="cl"><span class="c1"># You can subset list items like vectors</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 你也可以和矢量一样获取他们的子集</span>
</span></span><span class="line"><span class="cl"><span class="n">list1</span><span class="err">$</span><span class="n">price</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># apply()函数家族</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 还记得 mat 么？</span>
</span></span><span class="line"><span class="cl"><span class="n">mat</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    1    4</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    2    5</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]    3    6</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Use apply(X, MARGIN, FUN) to apply function FUN to a matrix X</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 使用(X, MARGIN, FUN)将函数 FUN 应用到矩阵 X 的行 (MAR = 1) 或者 列 (MAR = 2)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># That is, R does FUN to each row (or column) of X, much faster than a</span>
</span></span><span class="line"><span class="cl"><span class="c1"># R 在 X 的每一行/列使用 FUN，比循环要快很多</span>
</span></span><span class="line"><span class="cl"><span class="n">apply</span><span class="p">(</span><span class="n">mat</span><span class="p">,</span> <span class="n">MAR</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="n">myFunc</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># =&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#      [,1] [,2]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [1,]    3   15</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [2,]    7   19</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [3,]   11   23</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 还有其他家族函数 ?lapply, ?sapply</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 不要被吓到，虽然许多人在此都被搞混</span>
</span></span><span class="line"><span class="cl"><span class="c1"># plyr 程序包的作用是用来改进 apply() 函数家族</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">install</span><span class="o">.</span><span class="n">packages</span><span class="p">(</span><span class="s2">&#34;plyr&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">require</span><span class="p">(</span><span class="n">plyr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="err">?</span><span class="n">plyr</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 载入数据</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># &#34;pets.csv&#34; 是网上的一个文本</span>
</span></span><span class="line"><span class="cl"><span class="n">pets</span> <span class="o">&lt;-</span> <span class="n">read</span><span class="o">.</span><span class="n">csv</span><span class="p">(</span><span class="s2">&#34;http://learnxinyminutes.com/docs/pets.csv&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">pets</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span><span class="p">(</span><span class="n">pets</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1"># 前两行</span>
</span></span><span class="line"><span class="cl"><span class="n">tail</span><span class="p">(</span><span class="n">pets</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="c1"># 最后一行</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 以 .csv 格式来保存数据集或者矩阵</span>
</span></span><span class="line"><span class="cl"><span class="n">write</span><span class="o">.</span><span class="n">csv</span><span class="p">(</span><span class="n">pets</span><span class="p">,</span> <span class="s2">&#34;pets2.csv&#34;</span><span class="p">)</span> <span class="c1"># 保存到新的文件 pets2.csv</span>
</span></span><span class="line"><span class="cl"><span class="c1"># set working directory with setwd(), look it up with getwd()</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 使用 setwd() 改变工作目录，使用 getwd() 查看当前工作目录</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 尝试使用 ?read.csv 和 ?write.csv 来查看更多信息</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 画图</span>
</span></span><span class="line"><span class="cl"><span class="c1">#########################</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 散点图</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">list1</span><span class="err">$</span><span class="n">time</span><span class="p">,</span> <span class="n">list1</span><span class="err">$</span><span class="n">price</span><span class="p">,</span> <span class="n">main</span> <span class="o">=</span> <span class="s2">&#34;fake data&#34;</span><span class="p">)</span> <span class="c1"># 译者注：横轴 list1$time，纵轴 wlist1$price，标题 fake data</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 回归图</span>
</span></span><span class="line"><span class="cl"><span class="n">linearModel</span> <span class="o">&lt;-</span> <span class="n">lm</span><span class="p">(</span><span class="n">price</span>  <span class="o">~</span> <span class="n">time</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">list1</span><span class="p">)</span> <span class="c1"># 译者注：线性模型，数据集为list1，以价格对时间做相关分析模型</span>
</span></span><span class="line"><span class="cl"><span class="n">linearModel</span> <span class="c1"># 拟合结果</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 将拟合结果展示在图上，颜色设为红色</span>
</span></span><span class="line"><span class="cl"><span class="n">abline</span><span class="p">(</span><span class="n">linearModel</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="s2">&#34;red&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 也可以获取各种各样漂亮的分析图</span>
</span></span><span class="line"><span class="cl"><span class="n">plot</span><span class="p">(</span><span class="n">linearModel</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 直方图</span>
</span></span><span class="line"><span class="cl"><span class="n">hist</span><span class="p">(</span><span class="n">rpois</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">10000</span><span class="p">,</span> <span class="k">lambda</span> <span class="o">=</span> <span class="mi">5</span><span class="p">),</span> <span class="n">col</span> <span class="o">=</span> <span class="s2">&#34;thistle&#34;</span><span class="p">)</span> <span class="c1"># 译者注：统计频数直方图</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 柱状图</span>
</span></span><span class="line"><span class="cl"><span class="n">barplot</span><span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span> <span class="n">names</span><span class="o">.</span><span class="n">arg</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="s2">&#34;red&#34;</span><span class="p">,</span><span class="s2">&#34;blue&#34;</span><span class="p">,</span><span class="s2">&#34;purple&#34;</span><span class="p">,</span><span class="s2">&#34;green&#34;</span><span class="p">,</span><span class="s2">&#34;yellow&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 可以尝试着使用 ggplot2 程序包来美化图片</span>
</span></span><span class="line"><span class="cl"><span class="n">install</span><span class="o">.</span><span class="n">packages</span><span class="p">(</span><span class="s2">&#34;ggplot2&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">require</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="err">?</span><span class="n">ggplot2</span>
</span></span></code></pre></div><h2 id="获得-r">获得 R</h2>
<ul>
<li>从 <a href="http://www.r-project.org/">http://www.r-project.org/</a> 获得安装包和图形化界面</li>
<li><a href="http://www.rstudio.com/ide/">RStudio</a> 是另一个图形化界面</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>读《大规模Web服务开发技术》</title>
      <link>https://blog.alswl.com/2013/06/web-technology/</link>
      <pubDate>Sat, 29 Jun 2013 00:17:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2013/06/web-technology/</guid>
      <description>&lt;p&gt;年前看了这本书《大规模Web服务开发技术》，当时给的评价是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很好，让我这个渣渣看的很感动，数据翔实，经历可靠，翻译的也不错，我给 4.2 分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在经历过 Python / Django / 烂代码的阵痛，开始有更多的想法，
在整理这些粗糙的想法之前，我又把这本书翻了一遍，写个流水帐读书笔记。&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201306/s6818566.jpg&#34; alt=&#34;大规模Web服务开发技术&#34;  /&gt;


&lt;/p&gt;
&lt;p&gt;《大规模Web服务开发技术》@豆瓣： &lt;a href=&#34;http://book.douban.com/subject/6758780/&#34;&gt;http://book.douban.com/subject/6758780/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;规模&#34;&gt;规模&lt;/h2&gt;
&lt;p&gt;小规模 / 大规模 /
超大规模的侧重点各不相同：保持扩展性/保持冗余/低成本运维/开发合作方便&lt;/p&gt;
&lt;h2 id=&#34;内存磁盘负载&#34;&gt;内存、磁盘、负载&lt;/h2&gt;
&lt;p&gt;内存快，磁盘慢，ＩＯ 速度的差异&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>年前看了这本书《大规模Web服务开发技术》，当时给的评价是：</p>
<blockquote>
<p>很好，让我这个渣渣看的很感动，数据翔实，经历可靠，翻译的也不错，我给 4.2 分</p>
</blockquote>
<p>现在经历过 Python / Django / 烂代码的阵痛，开始有更多的想法，
在整理这些粗糙的想法之前，我又把这本书翻了一遍，写个流水帐读书笔记。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201306/s6818566.jpg" alt="大规模Web服务开发技术"  />


</p>
<p>《大规模Web服务开发技术》@豆瓣： <a href="http://book.douban.com/subject/6758780/">http://book.douban.com/subject/6758780/</a></p>
<h2 id="规模">规模</h2>
<p>小规模 / 大规模 /
超大规模的侧重点各不相同：保持扩展性/保持冗余/低成本运维/开发合作方便</p>
<h2 id="内存磁盘负载">内存、磁盘、负载</h2>
<p>内存快，磁盘慢，ＩＯ 速度的差异</p>
<h2 id="数据分布式">数据分布式</h2>
<ol>
<li>使用局部分布式，热数据独立出来。</li>
<li>Partition 分布式，按模块分割数据。</li>
<li>按 ID 分割，比如 a-g, h-z</li>
<li>按访问类型，一般请求 / feed / 图像（#毒药计划的原理）</li>
</ol>
<!-- more -->
<h2 id="索引">索引</h2>
<p>索引，B 树（是一颗平衡树，log n 速度查找，顺序读取，插入，删除） / Ｂ+
树（节点只保存子节点指针，叶子保存数据）</p>
<p>使用 MySQL 索引的语句：</p>
<ul>
<li>where</li>
<li>order by</li>
<li>group by</li>
</ul>
<p>多个查询时候要使用复合索引，每次查询只会走单一一个索引。</p>
<h2 id="算法">算法</h2>
<p>感受算法 log n, 线性的差距。</p>
<h3 id="字符匹配">字符匹配</h3>
<p>正则到 Trie</p>
<h3 id="贝叶斯匹配">贝叶斯匹配</h3>
<h3 id="全文搜索">全文搜索</h3>
<p>逆向索引</p>
<h2 id="基础设施">基础设施</h2>
<ul>
<li>云 / 自己构建</li>
<li>评估服务器性能极限</li>
<li>负载跟踪：平均负载 / 内存 / CPU 信息</li>
</ul>
<h2 id="冗余">冗余</h2>
<ul>
<li>Web 服务器冗余</li>
<li>DB 冗余</li>
<li>存储系统</li>
</ul>
<h2 id="维稳">维稳</h2>
<ul>
<li>功能增加 / 内存泄漏</li>
<li>特定 URL 的地雷，资源循环</li>
<li>访问暴增</li>
<li>数据量增加</li>
<li>外部 API 稳定（新浪等）</li>
<li>硬件故障</li>
</ul>
<h3 id="对策">对策</h3>
<ul>
<li>保持余量， 在 70% 极限内运行</li>
<li>异常时候的自动重启 / 自动中止耗时查询</li>
</ul>
<h2 id="虚拟化">虚拟化</h2>
<ul>
<li>解除物理限制</li>
<li>软件层面主机控制</li>
</ul>
<h2 id="番外-寻找瓶颈">番外： 寻找瓶颈</h2>
<p>调优的意义：「找出负载原因并去除」</p>
<ul>
<li>查看平均负载</li>
<li>top / uptime</li>
<li>确认 CPU、 I/O 瓶颈</li>
<li>sar / vmstat 检查交换区状态</li>
</ul>
<h2 id="番外-负载">番外： 负载</h2>
<p>负载的含义：等待 CPU / IO 资源的进程数。 知道了负载还要知道如何看 CPU
还是 IO 负载。</p>
<h2 id="番外sar">番外：sar</h2>
<ul>
<li>sar-P ALL</li>
<li>sar -u</li>
<li>sar -q</li>
<li>sar -r</li>
</ul>
<h2 id="番外henata-的选择">番外：Henata 的选择</h2>
<p>队列系统：</p>
<ul>
<li><a href="/TheSchwartz">TheSchwartz</a></li>
<li>Gearman</li>
</ul>
<p>DB 类型：</p>
<ul>
<li>Key Value： memcached / <a href="/TokyoTyrant">TokyoTyrant</a></li>
<li>MyISAM / InnoDB</li>
</ul>
<p>文件系统：</p>
<ul>
<li>MogileFS</li>
<li>NFS</li>
<li>WebDAV</li>
<li>DRBD</li>
<li>HDFS</li>
</ul>
<p>缓存系统：</p>
<ul>
<li>Squid</li>
<li>Vanish</li>
</ul>
<p>计算集群：</p>
<ul>
<li>Hadoop</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>服务器 Push 技术</title>
      <link>https://blog.alswl.com/2012/05/comet/</link>
      <pubDate>Wed, 30 May 2012 10:40:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2012/05/comet/</guid>
      <description>&lt;p&gt;服务器 Push 技术表示服务器可以主动推送消息给客户端浏览器。&lt;/p&gt;
&lt;h2 id=&#34;实现方式&#34;&gt;实现方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Comet
&lt;ul&gt;
&lt;li&gt;Ajax 轮询&lt;/li&gt;
&lt;li&gt;iframe / htmlfile&lt;/li&gt;
&lt;li&gt;script tag （不中断的连续请求）&lt;/li&gt;
&lt;li&gt;Flash 通讯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WebSocket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comet 本意是彗星，彗星尾巴痕迹很像长连接工作方式，所以 Comet 指代长连接。
在 Ajax 轮询的分类上，存在一些分歧，这里我把轮询认为一种 Comet 方式。&lt;/p&gt;
&lt;p&gt;ps：「长连接」在一些场景下，是另外一种意义「HTTP: Keep alive」。不在本文讨论的范围中。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/cn/web/wa-lo-comet/&#34;&gt;Comet：基于 HTTP 长连接的「服务器推」技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://socket.io/#browser-support&#34;&gt;Socket.IO Supported transports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- more --&gt;
&lt;h3 id=&#34;浏览器支持情况&#34;&gt;浏览器支持情况&lt;/h3&gt;
&lt;p&gt;WebSocket 属于 HTML5 规范，需要「先进」浏览器支持，
Flash 通讯需要浏览器安装 Flash 插件，其他方式都可以适应常见浏览器。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>服务器 Push 技术表示服务器可以主动推送消息给客户端浏览器。</p>
<h2 id="实现方式">实现方式</h2>
<ul>
<li>Comet
<ul>
<li>Ajax 轮询</li>
<li>iframe / htmlfile</li>
<li>script tag （不中断的连续请求）</li>
<li>Flash 通讯</li>
</ul>
</li>
<li>WebSocket</li>
</ul>
<p>Comet 本意是彗星，彗星尾巴痕迹很像长连接工作方式，所以 Comet 指代长连接。
在 Ajax 轮询的分类上，存在一些分歧，这里我把轮询认为一种 Comet 方式。</p>
<p>ps：「长连接」在一些场景下，是另外一种意义「HTTP: Keep alive」。不在本文讨论的范围中。</p>
<p>参考链接：</p>
<ul>
<li><a href="http://www.ibm.com/developerworks/cn/web/wa-lo-comet/">Comet：基于 HTTP 长连接的「服务器推」技术</a></li>
<li><a href="http://socket.io/#browser-support">Socket.IO Supported transports</a></li>
</ul>
<!-- more -->
<h3 id="浏览器支持情况">浏览器支持情况</h3>
<p>WebSocket 属于 HTML5 规范，需要「先进」浏览器支持，
Flash 通讯需要浏览器安装 Flash 插件，其他方式都可以适应常见浏览器。</p>
<p>参考连接：</p>
<ul>
<li><a href="http://zh.wikipedia.org/wiki/HTTP%E6%8C%81%E4%B9%85%E9%93%BE%E6%8E%A5">HTTP持久链接</a></li>
<li>[Comet (programming)](<a href="http://en.wikipedia.org/wiki/Comet_(programming">http://en.wikipedia.org/wiki/Comet_(programming</a>))</li>
<li><a href="http://www.cnblogs.com/tianzhiliang/archive/2011/06/13/2079564.html">一个误解: 单个服务器程序可承受最大连接数「理论」上是「65535」</a></li>
<li><a href="http://www.zeitoun.net/articles/comet_and_php/start">How to implement COMET with PHP</a></li>
</ul>
<h2 id="各大网站连接情况">各大网站连接情况</h2>
<p>可以通过 url 请求来揣测一些东西，比如说，它们没有用 WebSocket，
否则 FireBug 是无法监测的，WebSocket 可以双向通讯。</p>
<h3 id="新浪微博">新浪微博</h3>
<p>未读信息链接： <code>http://rm.api.weibo.com/remind/unread_count.json?target=api&amp;_pid=10001&amp;count=2&amp;source=3818214747&amp;callback=STK_133834300664875</code></p>
<p>未读信息大约每20秒触发一次，像是 Ajax 轮询。</p>
<p>IM 长连接：
<code>http://4.46.web1.im.weibo.com/im?jsonp=parent.org.cometd.script._callback5&amp;message=%5B%7B%22channel%22%3A%22%2Fmeta%2Fconnect%22%2C%22connectionType%22%3A%22callback-polling%22%2C%22id%22%3A6%2C%22clientId%22%3A%22b02qp9qw9cgiuxxyn3%22%7D%5D&amp;1338343019008</code></p>
<p>可以看出新浪在使用 JSONP 跨域做 IM 长连接，FireBug 中也始终有链接请求，
看上去像 Script Tag 请求方式。</p>
<h3 id="知乎">知乎</h3>
<p>请求链接：
<code>http://comet.zhihu.com/update?loc=http%3A%2F%2Fwww.zhihu.com%2F&amp;channel=13781e6817833300f0a70f19&amp;callback=zhp13781e6a6f22349b9865b47c8</code></p>
<p>依然能在 FireBug 中看到请求地址，说明客户端请求数据还是走 HTTP 方式，
并且会出现 update 动作链接一直出于请求状态，猜测知乎仍然使用 Script Tag 请求。</p>
<h2 id="框架支持">框架支持</h2>
<h3 id="orbited2">orbited2</h3>
<p><a href="http://labs.gameclosure.com/orbited2/">http://labs.gameclosure.com/orbited2/</a></p>
<ul>
<li>跨浏览器</li>
<li>容易集成：IRC / XMPP / ActiveMQ / RabbitMQ</li>
<li>Python</li>
</ul>
<h3 id="streamhub">StreamHub</h3>
<p><a href="http://www.stream-hub.com/">http://www.stream-hub.com/</a></p>
<ul>
<li>免费版仅支持 10 个在线</li>
<li>支持 Java / .net / iPhone</li>
</ul>
<h3 id="socketio">socket.io</h3>
<p><a href="http://socket.io/">http://socket.io/</a></p>
<ul>
<li>NodeJS</li>
<li>推送方式：
<ul>
<li>WebSocket</li>
<li>Adobe® Flash® Socket</li>
<li>AJAX long polling</li>
<li>AJAX multipart streaming</li>
<li>Forever Iframe</li>
<li>JSONP Polling</li>
</ul>
</li>
<li>支持浏览器：
<ul>
<li>Internet Explorer 5.5+</li>
<li>Safari 3+</li>
<li>Google Chrome 4+</li>
<li>Firefox 3+</li>
<li>Opera 10.61+</li>
<li>iPhone Safari</li>
<li>iPad Safari</li>
<li>Android WebKit</li>
<li>WebOs WebKit</li>
</ul>
</li>
</ul>
<h3 id="sockjs-client">sockjs-client</h3>
<p><a href="https://github.com/sockjs/sockjs-client">https://github.com/sockjs/sockjs-client</a></p>
<ul>
<li>支持 Node.js / Erlang / Lua / Python-Tornado</li>
<li>跨浏览器</li>
</ul>
<h2 id="实战-socketio">实战 Socket.io</h2>
<p>考虑到上述候选框架的使用场景，这里选择 Socket.IO 作为 Comet 框架。</p>
<h3 id="尴尬的-pylons">尴尬的 Pylons</h3>
<p>Pylons 和 Comet 配合有问题，问题处在标准 WSGI 是非异步的。
（看邮件列表里面，似乎新的标准准备支持）。</p>
<ul>
<li><a href="http://stackoverflow.com/a/3090118">http://stackoverflow.com/a/3090118</a></li>
<li><a href="http://mail.python.org/pipermail/web-sig/2008-July/003545.html">http://mail.python.org/pipermail/web-sig/2008-July/003545.html</a></li>
<li><a href="http://pypi.python.org/pypi/Spawning/">Spawning</a></li>
</ul>
<p>这样的话，我就直接选择使用 Node.JS 做 Comet 服务器，Nginx 负责转发。</p>
<h3 id="简单demo">简单Demo</h3>
<p>node.js 代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/* global __dirname, console */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">).</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">handler</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="nx">io</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;socket.io&#39;</span><span class="p">).</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">handler</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">&#39;/index.html&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Error loading index.html&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">io</span><span class="p">.</span><span class="nx">sockets</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;connection&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">socket</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="nx">socket</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s1">&#39;news&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">hello</span><span class="o">:</span> <span class="s1">&#39;world, for everyone!&#39;</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="nx">socket</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;my other event&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="nx">socket</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;private message&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">from</span><span class="p">,</span> <span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I received a private message by &#39;</span><span class="p">,</span> <span class="nx">from</span><span class="p">,</span> <span class="s1">&#39; saying &#39;</span><span class="p">,</span> <span class="nx">msg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><p>页面代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;content-type&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;text/html; charset=utf-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Socket.io Demo<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;/socket.io/socket.io.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">socket</span> <span class="o">=</span> <span class="nx">io</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="nx">socket</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;news&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="nx">socket</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s1">&#39;my other event&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">my</span><span class="o">:</span> <span class="s1">&#39;data&#39;</span> <span class="p">});</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></div><p>连接成功之后，在浏览器控制台里面，可以使用 <code>socket.emit('my other event', {biu: 'biu'});</code>
向服务器发送消息。</p>
<p>服务器也可以通过 <code>socket.emit()</code> 来向客户端推送消息。</p>
<p>私有信息发送，使用 <code>socket.emit('private message', 'James', {some: 'message'});</code> 。</p>
<h3 id="跨平台">跨平台</h3>
<p>实测看来，在 IE8 下面， Socket.io 会降级使用 <code>htmlfile</code> 来实现 Comet。</p>
<p>而 Firefox 中会有 <code>websocket / htmlfile / xhr-polling / jsonp-polling</code> 依次备选，
首选 websocket。</p>
<h3 id="安全性">安全性</h3>
<p>问题：提交数据的身份认证过程，以前在后台由 Web 框架自动完成，而现在流程是
Socket.IO -&gt; RabbitMQ -&gt; Web App，身份验证的复杂度增加了。</p>
<p>思路：Socket.IO 使用 Nginx 代理转发，从而保留同一域名下面的 cookie 信息，
这样能够提交到 Socket.IO 服务器，每次 RabbitMQ Message 都记录 cookie 信息，
后台从 RabbitMQ 读取信息时候，再进行认证。</p>
<p>实际操作：由于 Comet 中的数据流仅负责推送，客户端继续使用原始 POST
方式发送数据到服务器，所以暂时不会产生身份认证问题。</p>
<h2 id="node-ampq-驱动">Node AMPQ 驱动</h2>
<p>Socket.IO 提供了一个通用的 Comet 解决方案，下面就需要点润滑剂，将整个数据流跑通。
消息队列 RabbitMQ 正好适合用来做这个。</p>
<p>Rabbit 官网提到了一个套件 <a href="https://github.com/squaremo/rabbit.js">rabbit.js</a> 。
遗憾的是这个库是混合了 RabbitMQ 和 Node.JS，提供了一个封装好的 Node.JS 库，
而我想要的仅仅是一个 AMPQ 协议驱动。<a href="https://github.com/postwait/node-amqp/blob/master/amqp.js">node-amqp</a> 则是我们需要的驱动。</p>
<h3 id="demo">Demo</h3>
<p>服务器接收者脚本：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/* global __dirname, console */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">conn</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;amqp&#39;</span><span class="p">).</span><span class="nx">createConnection</span><span class="p">({</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;amqp://localhost&#39;</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;socket works&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">conn</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;ready&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;conn ready&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nx">conn</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="s1">&#39;socket.io&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">passive</span><span class="o">:</span> <span class="kc">true</span><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">queue</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="nx">queue</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">json</span><span class="p">,</span> <span class="nx">headers</span><span class="p">,</span> <span class="nx">deliveryInfo</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;#json:&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nx">view</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;#headers:&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nx">view</span><span class="p">(</span><span class="nx">headers</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;#deliveryInfo:&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nx">view</span><span class="p">(</span><span class="nx">deliveryInfo</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">conn</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">view</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="s1">&#39;: &#39;</span> <span class="o">+</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>用 Python 写的发送者脚本：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># coding=utf-8</span>
</span></span><span class="line"><span class="cl"><span class="c1">#! /usr/bin/env python2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pika</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">logging</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">logger</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">getLogger</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="n">conn</span> <span class="o">=</span> <span class="n">pika</span><span class="o">.</span><span class="n">BlockingConnection</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">pika</span><span class="o">.</span><span class="n">ConnectionParameters</span><span class="p">(</span><span class="s1">&#39;localhost&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">chan</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">channel</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">chan</span><span class="o">.</span><span class="n">queue_declare</span><span class="p">(</span><span class="n">queue</span><span class="o">=</span><span class="s1">&#39;socket.io&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">count</span> <span class="o">=</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">message</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;no&#39;</span><span class="p">:</span> <span class="n">count</span><span class="p">,</span> <span class="s1">&#39;some&#39;</span><span class="p">:</span> <span class="s1">&#39;Message&#39;</span><span class="p">,</span> <span class="sa">u</span><span class="s1">&#39;比如&#39;</span><span class="p">:</span> <span class="sa">u</span><span class="s1">&#39;中文信息&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">publish_text</span><span class="p">(</span><span class="n">chan</span><span class="p">,</span> <span class="s1">&#39;socket.io&#39;</span><span class="p">,</span> <span class="sa">u</span><span class="s1">&#39;text </span><span class="si">%d</span><span class="s1">&#39;</span> <span class="o">%</span><span class="n">count</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">publish_json</span><span class="p">(</span><span class="n">chan</span><span class="p">,</span> <span class="s1">&#39;socket.io&#39;</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s1">&#39;add one message to RabbitMQ&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#time.sleep(5) # sleep 5 sec</span>
</span></span><span class="line"><span class="cl">        <span class="n">count</span> <span class="o">-=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">publish_text</span><span class="p">(</span><span class="n">channel</span><span class="p">,</span> <span class="n">queue</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">channel</span><span class="o">.</span><span class="n">basic_publish</span><span class="p">(</span><span class="n">exchange</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                          <span class="n">routing_key</span><span class="o">=</span><span class="n">queue</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                          <span class="n">body</span><span class="o">=</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">message</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                          <span class="n">properties</span><span class="o">=</span><span class="n">pika</span><span class="o">.</span><span class="n">BasicProperties</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                              <span class="n">content_type</span><span class="o">=</span><span class="s1">&#39;text/plain&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                              <span class="n">content_encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                              <span class="n">delivery_mode</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                         <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">publish_json</span><span class="p">(</span><span class="n">channel</span><span class="p">,</span> <span class="n">queue</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">channel</span><span class="o">.</span><span class="n">basic_publish</span><span class="p">(</span><span class="n">exchange</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                          <span class="n">routing_key</span><span class="o">=</span><span class="n">queue</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                          <span class="n">body</span><span class="o">=</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">message</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                          <span class="n">properties</span><span class="o">=</span><span class="n">pika</span><span class="o">.</span><span class="n">BasicProperties</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                              <span class="n">content_type</span><span class="o">=</span><span class="s1">&#39;application/json&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                              <span class="n">content_encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                              <span class="n">delivery_mode</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                         <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">main</span><span class="p">()</span>
</span></span></code></pre></div><p>使用 <code>node ./app-amqp.js</code> 运行 Node.JS 服务器，然后运行 <code>producter.py</code> 产生
RabbitMQ Message，我使用的数据格式是序列化的 JSON 字串，
还有 <code>JSON, Thrift, Protocol Buffers, MessagePack</code> 这些格式可供选择。运行结果如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">#json:
</span></span><span class="line"><span class="cl">data: &#34;text 1&#34;
</span></span><span class="line"><span class="cl">UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters in position 0-3: ordinal not icontentType: text/plain
</span></span><span class="line"><span class="cl">#headers:
</span></span><span class="line"><span class="cl">#deliveryInfo:
</span></span><span class="line"><span class="cl">contentType: text/plain
</span></span><span class="line"><span class="cl">contentEncoding: utf-8
</span></span><span class="line"><span class="cl">deliveryMode: 1
</span></span><span class="line"><span class="cl">queue: socket.io
</span></span><span class="line"><span class="cl">deliveryTag: 19
</span></span><span class="line"><span class="cl">redelivered: false
</span></span><span class="line"><span class="cl">exchange:
</span></span><span class="line"><span class="cl">routingKey: socket.io
</span></span><span class="line"><span class="cl">consumerTag: node-amqp-10880-0.06487216474488378
</span></span><span class="line"><span class="cl">#json:
</span></span><span class="line"><span class="cl">比如: 中文信息
</span></span><span class="line"><span class="cl">some: Message
</span></span><span class="line"><span class="cl">no: 1
</span></span><span class="line"><span class="cl">#headers:
</span></span><span class="line"><span class="cl">#deliveryInfo:
</span></span><span class="line"><span class="cl">contentType: application/json
</span></span><span class="line"><span class="cl">contentEncoding: utf-8
</span></span><span class="line"><span class="cl">deliveryMode: 1
</span></span><span class="line"><span class="cl">queue: socket.io
</span></span><span class="line"><span class="cl">deliveryTag: 20
</span></span><span class="line"><span class="cl">redelivered: false
</span></span><span class="line"><span class="cl">exchange:
</span></span><span class="line"><span class="cl">routingKey: socket.io
</span></span><span class="line"><span class="cl">consumerTag: node-amqp-10880-0.06487216474488378
</span></span></code></pre></div><p>里面有两个 Message，发送数据格式为 <code>text/plain</code> 和 <code>application/json</code> 。</p>
<p>参考链接：</p>
<ul>
<li><a href="http://pika.github.com/">Pika Document</a></li>
</ul>
<h2 id="socketio--rabbitmq">Socket.IO + RabbitMQ</h2>
<p>最后提供 Socket.IO + RabbitMQ 的完整 Demo，客户端会实时接受到来自消息发送者的消息。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="cm">/* global __dirname, console */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">).</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">handler</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="nx">io</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;socket.io&#39;</span><span class="p">).</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">handler</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">&#39;/index.html&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Error loading index.html&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">			<span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">io</span><span class="p">.</span><span class="nx">sockets</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;connection&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">socket</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;io ready&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">conn</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;amqp&#39;</span><span class="p">).</span><span class="nx">createConnection</span><span class="p">({</span> <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;amqp://localhost&#39;</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="nx">conn</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;ready&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;conn ready&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="nx">conn</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="s1">&#39;socket.io&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">passive</span><span class="o">:</span> <span class="kc">true</span><span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">queue</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">			<span class="nx">queue</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">json</span><span class="p">,</span> <span class="nx">headers</span><span class="p">,</span> <span class="nx">deliveryInfo</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">				<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">deliveryInfo</span><span class="p">.</span><span class="nx">contentType</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">				<span class="k">if</span> <span class="p">(</span><span class="nx">deliveryInfo</span><span class="p">.</span><span class="nx">contentType</span> <span class="o">==</span> <span class="s1">&#39;application/json&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="nx">socket</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s1">&#39;news&#39;</span><span class="p">,</span> <span class="nx">json</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">				<span class="p">}</span>
</span></span><span class="line"><span class="cl">				<span class="k">if</span> <span class="p">(</span><span class="nx">deliveryInfo</span><span class="p">.</span><span class="nx">contentType</span> <span class="o">==</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">					<span class="nx">socket</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s1">&#39;news&#39;</span><span class="p">,</span> <span class="nx">json</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">				<span class="p">}</span>
</span></span><span class="line"><span class="cl">			<span class="p">});</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><p>在运行 <code>producter.py</code> 后，Python 脚本持续产生 Message 到 RabbitMQ，
<code>app-amqp-socket.js</code> 订阅读取 Message 并推送到浏览器端。
浏览器可以在 Console 里面看到日志：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Object { 比如=&#34;中文信息&#34;, some=&#34;Message&#34;, no=1}
</span></span></code></pre></div><p>至此，我们可以完成 WebApp -&gt; RabbitMQ -&gt; Socket.IO -&gt; Browser 的实时推送。</p>
]]></content:encoded>
    </item>
    <item>
      <title>再读《重构》</title>
      <link>https://blog.alswl.com/2012/02/refactory/</link>
      <pubDate>Sun, 05 Feb 2012 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2012/02/refactory/</guid>
      <description>&lt;p&gt;Martin Fowler 的「&lt;a href=&#34;http://book.douban.com/subject/1229923/&#34;&gt;重构-改善既有代码的设计&lt;/a&gt;」这本书，是我大学老师推荐给我的。
当时我在撰写代码过程中，发现当代码量到某个数量级时候（1000+行），
就会逐渐失去对代码的控制能力。
昆哥推荐了两本书「&lt;a href=&#34;http://book.douban.com/subject/1792387/&#34;&gt;UML 和模式应用&lt;/a&gt;」和「重构」这本书。&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201202/s1669771_l.jpg&#34; alt=&#34;Refactory&#34;  /&gt;


&lt;/p&gt;
&lt;p&gt;这本书是2年前购买的，可惜以我当时的代码感知和撰写能力，看起来颇为吃力。 半途就看得云里雾里而中断了。最近我又重新拾起这本书，
将书中所写的境况与我这两年多来遇到的问题相互印证，才感受到这本经典的力量。&lt;/p&gt;
&lt;p&gt;Martin 其人：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ThoughtWorks 的首席科学家，当今世界软件开发领域最具影响力的五位大师之一。
他在 UML 推广普及、领域建模、企业应用开发和敏捷方法等方面建树卓著，被称为软件开发的教父。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Martin Fowler 的「<a href="http://book.douban.com/subject/1229923/">重构-改善既有代码的设计</a>」这本书，是我大学老师推荐给我的。
当时我在撰写代码过程中，发现当代码量到某个数量级时候（1000+行），
就会逐渐失去对代码的控制能力。
昆哥推荐了两本书「<a href="http://book.douban.com/subject/1792387/">UML 和模式应用</a>」和「重构」这本书。</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201202/s1669771_l.jpg" alt="Refactory"  />


</p>
<p>这本书是2年前购买的，可惜以我当时的代码感知和撰写能力，看起来颇为吃力。 半途就看得云里雾里而中断了。最近我又重新拾起这本书，
将书中所写的境况与我这两年多来遇到的问题相互印证，才感受到这本经典的力量。</p>
<p>Martin 其人：</p>
<blockquote>
<p>ThoughtWorks 的首席科学家，当今世界软件开发领域最具影响力的五位大师之一。
他在 UML 推广普及、领域建模、企业应用开发和敏捷方法等方面建树卓著，被称为软件开发的教父。</p>
</blockquote>
<p>大学时候有段时间我对 Martin 的敏捷非常痴迷。现在对技术的选择没以前那么冲动了， 但是毫不妨碍我对 Martin 的敬仰之情。</p>
<h2 id="1-重构原则">1. 重构原则</h2>
<h3 id="11-重构的定义">1.1. 重构的定义</h3>
<blockquote>
<p>对软件内部结构的一种调整，目的是在不改变&quot;软件之可察行为&quot;前提下，提高其可理解性，降低其修改成本。</p>
</blockquote>
<p>重构就是在代码写好之后改进它的设计。</p>
<ul>
<li>重构和添加新功能并不冲突，但是当开发者身份在两者之间切换时候，不能混淆在一起。</li>
</ul>
<h3 id="12-重构的意义">1.2. 重构的意义</h3>
<ul>
<li>优秀设计的根本是：消除重复部分！（DRY = Don&rsquo;t repeat yourself）</li>
<li>重构让代码更清晰，更容易理解</li>
<li>清晰的代码可以更方便的找到 bug ，重构可以写出更强健的代码</li>
<li>良好的设计可以在长远时间上提高开发速度</li>
</ul>
<h3 id="13-重构的时间">1.3. 重构的时间</h3>
<ul>
<li>随时进行重构（在我看来，重构更是一种开发的习惯）</li>
<li>事不过三，代码重复不要超过三次（否则就要&quot;抽&quot;出来）</li>
<li>添加功能时候并一一重构（个人理解是，添加新功能之前，分析并重构，从而更方便添加新功能）</li>
<li>修补错误时</li>
<li>Code Review 时</li>
</ul>
<h3 id="14-重构和开发进度">1.4. 重构和开发进度</h3>
<p>重构的意义之一也是提高开发进度。杀手锏是&quot;不要告诉经理&quot;。</p>
<h3 id="15-重构的难题">1.5. 重构的难题</h3>
<ul>
<li>数据层（数据模型）的变更压力</li>
<li>修改接口</li>
<li>那些难以通过重构改变的设计改动</li>
<li>代码不能运行</li>
<li>项目期限压力 Deadline</li>
</ul>
<h3 id="16-重构与设计">1.6. 重构与设计</h3>
<ul>
<li>编程不是机械的开发，（软件开发是艺术行为！）</li>
<li>设计和重构的平衡（预先设计的难度和重构灵活性的平衡）</li>
</ul>
<h3 id="17-重构与性能">1.7. 重构与性能</h3>
<ul>
<li>重构确实会在短期内降低代码执行效率，但优化阶段是可以调整的，而且调整会更容易。</li>
<li>提前优化是万恶之源</li>
</ul>
<h3 id="18-那些bad-smell">1.8. 那些Bad Smell</h3>
<ul>
<li>重复的代码（这才是真正万恶之源，鄙视一切Ctrl+C/P）</li>
<li>过长函数，会导致责任不明确/难以切割/难以理解等一系列问题</li>
<li>过大类，职责不明确，垃圾滋生地</li>
<li>过长参数列（面向对象不是说说而已）</li>
<li>发散式变化，一个类会响应多种需求而被修改</li>
<li>散弹式修改（其实就是没有封装变化处，由于一个需求，多处需要被修改）</li>
<li>依赖情节（一个类对其他类过多的依赖）</li>
<li>数据泥团（如果数据有意义，就将结构数据变成对象）</li>
<li>Type code，使用 Class 替代</li>
<li><code>switch</code>，少用，考虑多态</li>
<li>过多平行的类，使用类继承并联起来</li>
<li>冗余类，去除它</li>
<li>夸夸其谈的未来性（Matin 的文字，侯俊杰的翻译真是…出彩…）</li>
<li>临时值域，封装它</li>
<li>过度耦合的消息链，使用真正需要的函数和对象，而不要依赖于消息链</li>
<li>过度的 Deleate</li>
<li>过度使用其他类 <code>private</code> 值域</li>
<li>重复作用的类</li>
<li>不完美的类库，（类库老了，使用者也没办法阿）</li>
<li>纯数据类（类需要行为）</li>
<li>不纯粹的继承（拒绝父类的接口的类）</li>
<li>过多注释，注释多了，就说明代码不清楚了</li>
</ul>
<h3 id="19-从测试开始">1.9. 从测试开始</h3>
<p>无测试，无重构，只依赖手工测试，重构时候人会崩溃的。</p>
<ul>
<li>重构的保真就是自动化测试（如果真的要无聊的手工测试，我也不反对）</li>
<li>单元测试</li>
<li>功能测试</li>
</ul>
<h3 id="110-kent-back说">1.10. Kent Back说</h3>
<blockquote>
<p>如果我纯粹为今天工作，明天我将完全无法工作。</p>
</blockquote>
<p>间接层的价值：</p>
<ul>
<li>允许逻辑共享</li>
<li>分开解释&quot;意图&quot;和&quot;实现&quot;</li>
<li>将变化加以隔离</li>
<li>将条件逻辑加以编码</li>
</ul>
<blockquote>
<p>计算机科学是这样一门学科：它相信所有问题都可以通过一个间接层来解决。</p>
<p>&ndash;Dennis DeBruler</p>
</blockquote>
<p>我相信，撰写代码时候不仅仅考虑当下功能，要考虑到有可能出现的情况，
在可能的平衡下面，为将来的扩展做好准备。（也许不仅仅是自己的明天，
还要考虑团队成员的今天工作内容）</p>
<h2 id="2-重构名录">2. 重构名录</h2>
<h3 id="21-重新组织函数">2.1. 重新组织函数</h3>
<p>Extract Method（提炼函数）</p>
<blockquote>
<p>将一段独立的，不依赖上下文的代码组织并独立出来。</p>
</blockquote>
<p>Inline Method（将函数内联化）</p>
<blockquote>
<p>当函数内部代码简短而容易理解时候，去除这个非必要的间接层。</p>
</blockquote>
<p>Inline Temp（将临时变量内联化）</p>
<blockquote>
<p>去除只被赋值一次的临时变量。（当有意义时候，应该保留）</p>
</blockquote>
<p>Replace Temp with Query（以查询取代临时变量）</p>
<blockquote>
<p>将临时变量提取到一个独立函数，并将原来变量引用替换为函数调用。 （我还是担心性能的问题，另外将临时变量限定在一个段落中，可以避免额外的引用）</p>
</blockquote>
<p>Introduce Explainning Variable（引入解释性变量）</p>
<blockquote>
<p>将复杂表达式的结果放入临时变量，并用变量名来解释表达式用途。 （自注释代码的表现）</p>
</blockquote>
<p>Split Temporary Variable（剖析临时变量）</p>
<blockquote>
<p>除了循环变量和临时集合变量，临时变量赋值不能超过一次。</p>
</blockquote>
<p>Remove Assignments to Parameters（移除对参数的赋值动作）</p>
<blockquote>
<p>不对函数参数进行赋值动作，如果要赋值，创建一个新的临时变量。</p>
</blockquote>
<p>Replace Method with Method Object（以函数对象取代函数）</p>
<blockquote>
<p>把函数变成对象，再把临时变量变成对象值域。该方法在分解函数时候常用。 （Martin 对小型函数特别迷恋，我认为这个方法更应该用在有逻辑意义的方法上面）</p>
</blockquote>
<p>Substitute Algorithm（替换算法）</p>
<blockquote>
<p>用更清晰的算法。 （码农都知道）</p>
</blockquote>
<h3 id="22-在对象之间搬移特性">2.2. 在对象之间搬移特性</h3>
<p>（面向对象编程原则之一就是职责归属，搬移其实也就意味着职责重新规划）</p>
<p>Move Method（搬移函数）</p>
<blockquote>
<p>将函数移动到被最多次调用的类里面去。 （往往在逻辑意义上，这个函数就应该归属于这个类）</p>
</blockquote>
<p>Move Field（搬移值域）</p>
<blockquote>
<p>将值域移动到被最多次调用的类里面去。</p>
</blockquote>
<p>Extract Class（提炼类）</p>
<blockquote>
<p>将开发过程中逐渐变得臃肿的类拆分成数个类，形成清楚的抽象，明确的职责。</p>
</blockquote>
<p>Inline Class（将类内联化）</p>
<blockquote>
<p>将不再担任足够职责的类搬到另外一个类中，并移除这个原始类。</p>
</blockquote>
<p>Hide Delegate（隐藏委托关系）</p>
<blockquote>
<p>将直接调用变成间接，在中间添加一层，从而从容面对变更，隔离变化。 （&ldquo;哪里变化，封装哪里&quot;这是设计模式的一个经典原则）</p>
</blockquote>
<p>Remove Middle Man（移除中间人）</p>
<blockquote>
<p>和Hide Delegate相反，移除做了过多简单委托的类。 （应该Hide Delegate需要加入成本，多维护一层，这需要控制一种平衡）</p>
</blockquote>
<p>Introduce Foreign Method（引入外加函数）</p>
<blockquote>
<p>当类无法进行修改时候，使用静态函数接受这种类型的类实例，</p>
</blockquote>
<p>Introduce Local Extenstion（引入本地扩展）</p>
<blockquote>
<p>使用子类继承/Wrapper 类来实现额外的函数。</p>
</blockquote>
<h3 id="23-重新组织数据">2.3. 重新组织数据</h3>
<p>Self Encapsulate Field（自封装值域）</p>
<blockquote>
<p>使用getter/setter。 （个人觉得这样很繁琐，.net 中的属性方式处理的不错）</p>
</blockquote>
<p>Replace Date Value with Object （以对象取代数据值）</p>
<blockquote>
<p>当数据项有额外的数据和行为时候，将它变成一个类</p>
</blockquote>
<p>Change Value to Reference（将实值对象改为引用对象）</p>
<blockquote>
<p>有一些类型，比如日期、星期，不需要保存太多副本。</p>
</blockquote>
<p>Change Reference to Value（将引用对象改为实值对象）</p>
<blockquote>
<p>和楼上相反的情况，引用会带来复杂的内存分配，在分布式系统中，实值对象特别有用。</p>
</blockquote>
<p>Replace Array with Object（以对象取代数组）</p>
<blockquote>
<p>不应该将不同的元素存放到数组中，应该使用值域。</p>
</blockquote>
<p>Duplicate Observed Data（复制被监视数据）</p>
<blockquote>
<p>通过观察者模式，将业务数据和 GUI 数据进行同步控制</p>
</blockquote>
<p>Change Unidirectional Association to Bidirectional（将单向关联改为双向）</p>
<blockquote>
<p>使用双向连接，从而能让两个类能互相使用对方特性。</p>
</blockquote>
<p>Change Bidirectional Assicuation to Unidirectional（将双向关联改为单向）</p>
<blockquote>
<p>当一个类不再需要另外一个类特性时候作修改。</p>
</blockquote>
<p>Replace Magic Number with Symbolic Constant（以符号常量/字面常量取代魔法数）</p>
<blockquote>
<p>使用有意义的名称，比如pi, gravity。</p>
</blockquote>
<p>Encapsulate Field（封装值域）</p>
<blockquote>
<p>使用getter/setter。</p>
</blockquote>
<p>Encapsulate Collection（封装集群）</p>
<blockquote>
<p>避免直接修改容器对象，而是封装出类方法来修改。将变化控制在既有方法内。</p>
</blockquote>
<p>Replace Record with Data Class（以数据类取代记录）</p>
<blockquote>
<p>将传统编程中的结构体转换为数据类。</p>
</blockquote>
<p>Replace Type Code with Class（以类别取代型别码）</p>
<blockquote>
<p>使用类型集合类来替换型别码。</p>
</blockquote>
<p>Replace Type Code with Subclass（以子类取代型别码）</p>
<blockquote>
<p>使用多态来替换型别码，发挥面向对象编程的优势。 （小心处理 ORM 映射）</p>
</blockquote>
<p>Replace Type Code with State/Strategy（以State/Strategy取代型别码）</p>
<blockquote>
<p>使用State/Strategy模式来因对type code会发生变化的情况。 将状态类作为父类，再进行继承。</p>
</blockquote>
<p>Replace Subclass with Fields（以值域取代子类）</p>
<blockquote>
<p>当子类的差异仅仅体现在返回常量数据的函数上时候，进行这样的替换。</p>
</blockquote>
<h3 id="24-简化条件表达式">2.4. 简化条件表达式</h3>
<p>简化的核心思想，是将过程式的 <code>if</code> / <code>else</code> 替换为面向对象的多态。</p>
<p>Decompose Conditional（分解条件式）</p>
<blockquote>
<p>将复杂的条件式提炼为独立函数。</p>
</blockquote>
<p>Consolidate Conditional Expression（合并条件式）</p>
<blockquote>
<p>将多个条件式判断提炼成一个独立函数。这和上面的分解条件式都需要一个前提： 这几个条件式是要有逻辑关联的。</p>
</blockquote>
<p>Consolidate Duplicate Conditional Fragments（合并重复的条件判断）</p>
<blockquote>
<p>将所有分支里面都拥有的代码提炼到分支判断之后运行。</p>
</blockquote>
<p>Remove Control Flag（移除控制标志）</p>
<blockquote>
<p>使用 break/return 取代控制标记。单一出口，多出口。控制标记让程序接口看上去混乱。</p>
</blockquote>
<p>Replace Nested Conditional with Guard Clauses（以卫语句取代嵌套条件式）</p>
<blockquote>
<p>保留正常情况下面下的顺序执行，提前对非正常情况进行单独检查并返回。 （我更倾向于使用 Exception）</p>
</blockquote>
<p>Replace Conditional with Polymorphism（以多态取代条件式）</p>
<blockquote>
<p>将条件式的每个分支放入一个Subclass 内覆写函数中，然后将原始函数生命为抽象函数。
（这个方法之前的 5 种重构手段是代码小手段，引入多态才能充分发挥 OOP 优势）</p>
</blockquote>
<p>Introduce Null Object（引入 Null 对象）</p>
<blockquote>
<p>将无效值替换为Null Object，从而可以让程序正常运行。 （这好象是一种 Hack 方法，我倾向使用 Exception，作者的用以可能是通过 Null 来减少判断代码）</p>
</blockquote>
<p>Introduce Assertion（引入断言）</p>
<blockquote>
<p>通过断言来发现程序错误，实际使用中，可以配合 Debug Mode 使用。</p>
</blockquote>
<h3 id="25-简化函数调用">2.5. 简化函数调用</h3>
<p>Rename Method（重命名函数）</p>
<blockquote>
<p>A good name is better than a line of comment.</p>
</blockquote>
<p>Add Parameter（添加参数）</p>
<blockquote>
<p>你没看错，就是添加参数。 （啊？Matin老师，不带这么水的阿）</p>
</blockquote>
<p>Remove Parameter（移除参数）</p>
<blockquote>
<p>不要就丢掉。</p>
</blockquote>
<p>Separate Query from Modifier（将查询参数和修改参数分离）</p>
<blockquote>
<p>将一个即查询状态又修改状态的函数分离开来，职责分离清楚。 （我以前很喜欢写多面手函数～）</p>
</blockquote>
<p>Parameterize Method（令函数携带参数）</p>
<blockquote>
<p>同一逻辑功能函数，通过重载接受不同参数。而不要建立多个同样的函数。</p>
</blockquote>
<p>Replace Parameter with Explicit Methods（以明确函数取代参数）</p>
<blockquote>
<p>将单一函数分解为多个函数从而去掉参数，前提是这几个函数的逻辑功能区别较大。</p>
</blockquote>
<p>Preserve Whole Object（保持对象完整）</p>
<blockquote>
<p>传递完整的对象，取代几个参数的传递。</p>
</blockquote>
<p>Replace Parameter with Methods（以函数取代参数）</p>
<blockquote>
<p>如果目标函数需要的是几个参数操作的结果，就直接传递这个结果，而不是数个参数。</p>
</blockquote>
<p>Introduce Parameter Object(引入参数对象)</p>
<blockquote>
<p>当几个参数经常同时出现，就封装他们。 （他们之间往往就有逻辑关系）</p>
</blockquote>
<p>Remove Setting Method（移除设值函数）</p>
<blockquote>
<p>如果类的某个值域初始化后不再改变，就去掉它的 setting 方法。 （我理解为原则：&ldquo;减少疑惑，保持唯一&rdquo;）</p>
</blockquote>
<p>Hide Method（隐藏某个函数）</p>
<blockquote>
<p>使用 private 标记未被其他类调用的方法。</p>
</blockquote>
<p>Replace Constructor with Factory Method（以工厂函数取代构造函数）</p>
<blockquote>
<p>引入工厂模式。</p>
</blockquote>
<p>Encapsulate Downcast（封装向下转型动作）</p>
<blockquote>
<p>当知道什么类型时候，将其封装在产生函数里面，减少引用者的困扰。</p>
</blockquote>
<p>Replace Error Code with Exception（以异常取代错误码）</p>
<blockquote>
<p>如其名。 （关于异常使用的时机，抛出的方式，捕捉的粒度，我困惑了很久。 最后的总结的经验是：在什么层级处理并且仅处理该层级的异常。等有时间详细成文送出）</p>
</blockquote>
<p>Replace Exception with Test（以测试取代异常）</p>
<blockquote>
<p>异常不是条件判断。</p>
</blockquote>
<h3 id="26-处理概括关系">2.6. 处理概括关系</h3>
<p>关于 OOP 继承的那些事儿。</p>
<p>Pull Up Field（值域上移）</p>
<blockquote>
<p>子类重复的值域放到父类去。 （其实还是基于责任归属的问题）</p>
</blockquote>
<p>Pull Up Method（函数上移）</p>
<blockquote>
<p>子类中重复函数移到父类。</p>
</blockquote>
<p>Pull Up Construction Body（构造函数本体上移）</p>
<blockquote>
<p>共用的构造函数片段上移。</p>
</blockquote>
<p>Push Down Method（函数下移）</p>
<blockquote>
<p>将父类中近被某个子类调用的函数下移。</p>
</blockquote>
<p>Push Down Field（值域下移）</p>
<blockquote>
<p>同上。</p>
</blockquote>
<p>Extract Subclass（提炼子类）</p>
<blockquote>
<p>当某个类只有部分特性被用到，就需要提取出子类。</p>
</blockquote>
<p>Extract Superclass（提炼超类）</p>
<blockquote>
<p>和上面相反。</p>
</blockquote>
<p>Extract Interface（提炼接口）</p>
<blockquote>
<p>将相同的子集提取接口。</p>
</blockquote>
<p>Collapse hierarchy（折叠继承体系）</p>
<blockquote>
<p>父类和子类并无太大区别时候，合体吧亲。</p>
</blockquote>
<p>From Template Mehod（塑造模板函数）</p>
<blockquote>
<p>将子类的同功能不同实现函数上移到父类，并在子类提供同名不同实现被调用的子函数。</p>
</blockquote>
<p>Replace Inheritance with Delegation（以委托取代继承）</p>
<blockquote>
<p>将父类变成一个值域，在调用这个值域的方法。is-a -&gt; has-a （继承太多就会出问题）</p>
</blockquote>
<p>Replace Delegation with Inheritance（以继承取代委托）</p>
<blockquote>
<p>和上面相反的应用，当子类和父类出现明显的继承关系时候使用。</p>
</blockquote>
<h3 id="27-大型重构">2.7. 大型重构</h3>
<p>这一章讲的内容有点高屋建瓴，这里就不概括了，建议读原文。</p>
<ul>
<li>Tease Apart Inheritance（梳理并分解继承体系）</li>
<li>Convert Procedural Design to Objects（将过程化设计转化为对象设计）</li>
<li>Separate Domain from Presentation（将领域和表述/显示分离）</li>
<li>Extract hierarchy（提炼继承体系）</li>
</ul>
<p>少年，Coding 时候重构你的代码吧！</p>
]]></content:encoded>
    </item>
    <item>
      <title>《卓有成效的程序员》读后感</title>
      <link>https://blog.alswl.com/2011/11/the-productive-programmer/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2011/11/the-productive-programmer/</guid>
      <description>&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201111/s3668809.jpg&#34; alt=&#34;卓有成效的程序员&#34;  /&gt;


&lt;/p&gt;
&lt;p&gt;《卓有成效的程序员》，上次在京东半价买了这本书，一直没来得及看， 前几周在地铁上把这本书看完了。&lt;/p&gt;
&lt;p&gt;说实话，书里面的观点我很赞同，但是没有觉得惊艳， 因为我本身已经在尝试实践这些观点。&lt;/p&gt;
&lt;p&gt;书中的这些观点有如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加速法则：减少输入次数，用快捷键/方法启用常用操作&lt;/li&gt;
&lt;li&gt;专注法则：集中注意力处理工作，避免额外的信息干扰&lt;/li&gt;
&lt;li&gt;自动化法则：贯彻&amp;quot;懒&amp;quot;的原则，减少重复劳动&lt;/li&gt;
&lt;li&gt;规范性法则：DRY&lt;/li&gt;
&lt;li&gt;书中第二部分是撰写代码时候的一些意识，这些我就不复述了， 是比较常见的软件工程思想。这些思想由ThoughWorks的咨询师娓娓道来也是值得一看的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我觉得这本书在学完第一门语言/数据结构/操作系统之后就可以开始阅读。 也就是学生在大三-大四阶段阅读，会对代码撰写规范和风格形成大有帮助。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201111/s3668809.jpg" alt="卓有成效的程序员"  />


</p>
<p>《卓有成效的程序员》，上次在京东半价买了这本书，一直没来得及看， 前几周在地铁上把这本书看完了。</p>
<p>说实话，书里面的观点我很赞同，但是没有觉得惊艳， 因为我本身已经在尝试实践这些观点。</p>
<p>书中的这些观点有如下：</p>
<ul>
<li>加速法则：减少输入次数，用快捷键/方法启用常用操作</li>
<li>专注法则：集中注意力处理工作，避免额外的信息干扰</li>
<li>自动化法则：贯彻&quot;懒&quot;的原则，减少重复劳动</li>
<li>规范性法则：DRY</li>
<li>书中第二部分是撰写代码时候的一些意识，这些我就不复述了， 是比较常见的软件工程思想。这些思想由ThoughWorks的咨询师娓娓道来也是值得一看的。</li>
</ul>
<p>我觉得这本书在学完第一门语言/数据结构/操作系统之后就可以开始阅读。 也就是学生在大三-大四阶段阅读，会对代码撰写规范和风格形成大有帮助。</p>
]]></content:encoded>
    </item>
    <item>
      <title>char nchar varchar nvarchar 区别</title>
      <link>https://blog.alswl.com/2010/07/difference-between-char-nchar-varchar-nvarchar/</link>
      <pubDate>Fri, 16 Jul 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/07/difference-between-char-nchar-varchar-nvarchar/</guid>
      <description>&lt;p&gt;在开发时候，发现数据库的一个字段用的是nchar(16)，让我感觉很奇怪，我知道nvarchar可以变长，nchar会用空格填充，这在存取时候需要Trim(
)操作，所以我一直不用nchar。而现在在产品中发现nchar的使用，不由觉得很奇怪。&lt;/p&gt;
&lt;p&gt;私底下认为是效率的问题，一番Google之后发现一段文章详述了几种数据库文字类型存储的差异。&lt;/p&gt;
&lt;p&gt;原文出处：&lt;a href=&#34;http://www.cnblogs.com/yoyozhou/archive/2008/11/21/1338452.html&#34;&gt;char nchar varchar nvarchar 区别 - Rainbow - 博客园&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;联机帮助上的：&lt;/p&gt;
&lt;p&gt;char(n)&lt;/p&gt;
&lt;p&gt;定长&lt;/p&gt;
&lt;p&gt;索引效率高 程序里面使用trim去除多余的空白&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>在开发时候，发现数据库的一个字段用的是nchar(16)，让我感觉很奇怪，我知道nvarchar可以变长，nchar会用空格填充，这在存取时候需要Trim(
)操作，所以我一直不用nchar。而现在在产品中发现nchar的使用，不由觉得很奇怪。</p>
<p>私底下认为是效率的问题，一番Google之后发现一段文章详述了几种数据库文字类型存储的差异。</p>
<p>原文出处：<a href="http://www.cnblogs.com/yoyozhou/archive/2008/11/21/1338452.html">char nchar varchar nvarchar 区别 - Rainbow - 博客园</a></p>
<p>联机帮助上的：</p>
<p>char(n)</p>
<p>定长</p>
<p>索引效率高 程序里面使用trim去除多余的空白</p>
<p>n 必须是一个介于 1 和 8,000 之间的数值,存储大小为 n 个字节</p>
<p>varchar(n)</p>
<p>变长</p>
<p>效率没char高 灵活</p>
<p>n 必须是一个介于 1 和 8,000 之间的数值。存储大小为输入数据的字节的实际长度，而不是 n 个字节</p>
<p>text(n)</p>
<p>变长</p>
<p>非Unicode数据</p>
<p>nchar(n)</p>
<p>定长</p>
<p>处理unicode数据类型(所有的字符使用两个字节表示)</p>
<p>n 的值必须介于 1 与 4,000 之间。存储大小为 n 字节的两倍</p>
<p>nvarchar(n)</p>
<p>变长</p>
<p>处理unicode数据类型(所有的字符使用两个字节表示)</p>
<p>n 的值必须介于 1 与 4,000 之间。字节的存储大小是所输入字符个数的两倍。所输入的数据字符长度可以为零</p>
<p>ntext(n)</p>
<p>变长</p>
<p>处理unicode数据类型(所有的字符使用两个字节表示)</p>
<h2 id="1char">1、CHAR。</h2>
<p>CHAR存储定长数据很方便，CHAR字段上的索引效率级高，比如定义char(10)，那么不论你存储的数据是否达到了10个字节，都要占去10个字节的空间,不足
的自动用空格填充，所以在读取的时候可能要多次用到trim（）。</p>
<h2 id="2varchar">2、VARCHAR。</h2>
<p>存储变长数据，但存储效率没有CHAR高。如果一个字段可能的值是不固定长度的，我们只知道它不可能超过10个字符，把它定义为 VARCHAR(10)是最合算的。
VARCHAR类型的实际长度是它的值的实际长度+1。为什么&quot;+1&quot;呢？这一个字节用于保存实际使用了多大的长度。从空间上考虑，用varchar合适；从效率上考
虑，用char合适，关键是根据实际情况找到权衡点。</p>
<h2 id="3text">3、TEXT。</h2>
<p>text存储可变长度的非Unicode数据，最大长度为2^31-1(2,147,483,647)个字符。</p>
<h2 id="4ncharnvarcharntext">4、NCHAR、NVARCHAR、NTEXT。</h2>
<p>这三种从名字上看比前面三种多了个&quot;N&quot;。它表示存储的是Unicode数据类型的字符。我们知道字符中，英文字符只需要一个字节存储就足够了，但汉字众多，需要两个
字节存储，英文与汉字同时存在时容易造成混乱，Unicode字符集就是为了解决字符集这种不兼容的问题而产生的，它所有的字符都用两个字节表示，即英文字符也是用两
个字节表示。nchar、nvarchar的长度是在1到4000之间。和char、varchar比较起来，nchar、nvarchar则最多存储4000个字符
，不论是英文还是汉字；而char、varchar最多能存储8000个英文，4000个汉字。可以看出使用nchar、nvarchar数据类型时不用担心输入的字
符是英文还是汉字，较为方便，但在存储英文时数量上有些损失。</p>
<p>所以一般来说，如果含有中文字符，用nchar/nvarchar，如果纯英文和数字，用char/varchar</p>
<p>我把他们的区别概括成：</p>
<p>CHAR，NCHAR 定长，速度快，占空间大，需处理</p>
<p>VARCHAR，NVARCHAR，TEXT 不定长，空间小，速度慢，无需处理</p>
<p>NCHAR、NVARCHAR、NTEXT处理Unicode码</p>
]]></content:encoded>
    </item>
    <item>
      <title>正则表达式中的零宽断言</title>
      <link>https://blog.alswl.com/2010/01/regular-expressions-in-the-zero-width-assertion/</link>
      <pubDate>Tue, 26 Jan 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/01/regular-expressions-in-the-zero-width-assertion/</guid>
      <description>&lt;p&gt;这文是上个月开始写的，本来想深入的分析一下零宽断言，可惜工作一直忙，现在又要去转战&lt;strong&gt;DWR&lt;/strong&gt;&amp;hellip;OMG~~&lt;/p&gt;
&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;将要上线的系统中有一个字符规则：&amp;ldquo;13位的字符串，其中有8位连续数字&amp;rdquo;，需要用这则表达式对这个字符串进行判断。而我之前对正则的认识仅仅停留在匹配固定的字符上
，对这个问题一筹莫展。&lt;/p&gt;
&lt;p&gt;这时候热心的小邪出现了，我在他的博客 &lt;a href=&#34;http://www.evlos.org&#34;&gt;邪罗刹的菠萝阁&lt;/a&gt;
留下这个[问题](&lt;a href=&#34;http://www.evlos.org/2010/01/05/use-regex-to-clear-the-mix-of-tag-&#34;&gt;http://www.evlos.org/2010/01/05/use-regex-to-clear-the-mix-of-tag-&lt;/a&gt;
img/#comment-5968)&lt;/p&gt;
&lt;p&gt;




&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.alswl.com/images/upload_dropbox/201001/alswl_ask.jpg&#34; alt=&#34;image&#34;  /&gt;


&lt;/p&gt;
&lt;p&gt;小邪很热心的撰写了一篇文章给出回答：&lt;a href=&#34;http://www.evlos.org/2010/01/07/a-cuptool-and-a-washtool&#34;&gt; 一个杯具和一个洗具与最近学习手记 :
邪罗刹的菠萝阁&lt;/a&gt;。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>这文是上个月开始写的，本来想深入的分析一下零宽断言，可惜工作一直忙，现在又要去转战<strong>DWR</strong>&hellip;OMG~~</p>
<h2 id="起因">起因</h2>
<p>将要上线的系统中有一个字符规则：&ldquo;13位的字符串，其中有8位连续数字&rdquo;，需要用这则表达式对这个字符串进行判断。而我之前对正则的认识仅仅停留在匹配固定的字符上
，对这个问题一筹莫展。</p>
<p>这时候热心的小邪出现了，我在他的博客 <a href="http://www.evlos.org">邪罗刹的菠萝阁</a>
留下这个[问题](<a href="http://www.evlos.org/2010/01/05/use-regex-to-clear-the-mix-of-tag-">http://www.evlos.org/2010/01/05/use-regex-to-clear-the-mix-of-tag-</a>
img/#comment-5968)</p>
<p>




<img loading="lazy" src="https://e25ba8-log4d-c.dijingchao.com/upload_dropbox/201001/alswl_ask.jpg" alt="image"  />


</p>
<p>小邪很热心的撰写了一篇文章给出回答：<a href="http://www.evlos.org/2010/01/07/a-cuptool-and-a-washtool"> 一个杯具和一个洗具与最近学习手记 :
邪罗刹的菠萝阁</a>。</p>
<h2 id="解答">解答</h2>
<p>核心字符串如下： &lsquo;/^(?!(.<em>?d){9,})(?!(.</em>?D){6,}).{13}$/&rsquo;;</p>
<p>小邪的文章给了很详细的解答，比我自己解释要好得多～我就索性copy过来，如下：</p>
<blockquote>
<blockquote>
<p>小邪是这个样子解答的，首先两边的斜杠是 Perl 正则式的要求。</p>
</blockquote>
</blockquote>
<blockquote>
<p>然后两边的 ^ 和 $ 用来表示对应的是字符串的开始和结束。</p>
</blockquote>
<blockquote>
<p>接着<code> .{13}</code>，. 表示除了换行以外的所有字符，<code>13</code> 规定了匹配长度。</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>我们这里前面用了两次零宽断言，第一次，<code>(?!exp) </code>这里的 exp 是 <code>(.*?d){9,}</code>。</p>
</blockquote>
</blockquote>
<blockquote>
<p>表示数字的个数大于等于 9，零宽断言把它反过来就是数字的个数小于 9。</p>
</blockquote>
<blockquote>
<p>第二次 exp 是<code> (.*?D){6,}</code> 表示非数字大于等于 6 个以上。</p>
</blockquote>
<blockquote>
<p>即表示非数字的个数大于等于 6，把它反过来就是非数字的个数小于 6。</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>而这里<code>.*</code>表示<code> ?d</code> 和 <code>?D </code>的前面可能有零次或更多次的其他字符。</p>
</blockquote>
</blockquote>
<blockquote>
<p>而这里的 <code>? </code>表示这段连续的字符会重复零次或一次。</p>
</blockquote>
<h3 id="python下的实现和测试代码">Python下的实现和测试代码</h3>
<pre tabindex="0"><code>import re

def fun(p, datas):

for data in datas:

print p.match(data)

if __name__ == &#39;__main__&#39;:

p = re.compile(r&#39;^(?!(.*?d){9,})(?!(.*?D){6,}).{13}$&#39;);

datas = [&#39;asss13336644ss&#39;, &#39;aas15151515ss&#39;, &#39;aa15151515sss&#39;,

&#39;aa15151515ss1&#39;, &#39;aa15151515ss11&#39;, &#39;aa151515151ss&#39;,

&#39;aa15151511ssss&#39;]

fun(p, datas)
</code></pre><p>恩，问题解决了，不过，如果想把零宽断言彻底搞清楚，还需要深入学习一下～</p>
<h2 id="深入零宽断言">深入零宽断言</h2>
<p><a href="http://www.cnblogs.com/xiehuiqi220/archive/2009/02/06/1385481.html">正则表达式的零宽断言的一个小应用 - 楼兰之风&hellip; - 博客园</a></p>
<p><a href="http://blog.csdn.net/panhf2003/archive/2008/11/19/3337163.aspx">正则表达式&ndash;零宽断言 - panhf2003的专栏 - CSDN博客</a></p>
<p><a href="http://deerchao.net/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></p>
<p><a href="http://wiki.ubuntu.org.cn/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97#.E5.8F.8D.E6.96.9C.E6.9D.A0.E7.9A.84.E9.BA.BB.E7.83.A6">Python正则表达式操作指南 - Ubuntu中文</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Oracle PL/SQL编程规范</title>
      <link>https://blog.alswl.com/2010/01/oracle-pl-sql-coding-standards/</link>
      <pubDate>Thu, 14 Jan 2010 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2010/01/oracle-pl-sql-coding-standards/</guid>
      <description>&lt;p&gt;学习PL/SQL不可避免遇到规范的问题，这里转载一篇比较精的文章。&lt;/p&gt;
&lt;p&gt;当然，各个公司和个人有自己的风格和规范，甚至Oracle官方的教程代码也没有完全遵守这些规则，这里只是一个推荐和介绍。&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&#34;http://database.51cto.com/art/200907/138973.htm&#34;&gt;Oracle PL/SQL编程规范指南 -51CTO.COM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多参考：&lt;a href=&#34;http://blog.chinaunix.net/u1/57759/showart_458439.html&#34;&gt;SQL,PL/SQL编程规范 - PL/SQL -IT民工杂谈&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;分割线，Google真汉子&lt;/strong&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;一plsql编程规范之大小写&#34;&gt;一、PL/SQL编程规范之大小写&lt;/h2&gt;
&lt;p&gt;就像在SQL中一样，PL / SQL中是不区分大小写的。其一般准则如下：&lt;/p&gt;
&lt;p&gt;关键字(&lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;EXCEPTION&lt;/code&gt;, &lt;code&gt;END&lt;/code&gt;, &lt;code&gt;IF THEN ELSE&lt;/code&gt;,&lt;code&gt;LOOP&lt;/code&gt;, &lt;code&gt;END LOOP&lt;/code&gt;)、数据类型(&lt;code&gt;VARCHAR2&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt;)、内部函数(&lt;code&gt;LEAST&lt;/code&gt;,
&lt;code&gt;SUBSTR&lt;/code&gt;)和用户定义的子程序(&lt;code&gt;procedures&lt;/code&gt;, &lt;code&gt;functions&lt;/code&gt;,&lt;code&gt;packages&lt;/code&gt;)，使用大写。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>学习PL/SQL不可避免遇到规范的问题，这里转载一篇比较精的文章。</p>
<p>当然，各个公司和个人有自己的风格和规范，甚至Oracle官方的教程代码也没有完全遵守这些规则，这里只是一个推荐和介绍。</p>
<p>来源：<a href="http://database.51cto.com/art/200907/138973.htm">Oracle PL/SQL编程规范指南 -51CTO.COM</a></p>
<p>更多参考：<a href="http://blog.chinaunix.net/u1/57759/showart_458439.html">SQL,PL/SQL编程规范 - PL/SQL -IT民工杂谈</a></p>
<p><em><strong><strong>分割线，Google真汉子</strong></strong></em></p>
<h2 id="一plsql编程规范之大小写">一、PL/SQL编程规范之大小写</h2>
<p>就像在SQL中一样，PL / SQL中是不区分大小写的。其一般准则如下：</p>
<p>关键字(<code>BEGIN</code>, <code>EXCEPTION</code>, <code>END</code>, <code>IF THEN ELSE</code>,<code>LOOP</code>, <code>END LOOP</code>)、数据类型(<code>VARCHAR2</code>, <code>NUMBER</code>)、内部函数(<code>LEAST</code>,
<code>SUBSTR</code>)和用户定义的子程序(<code>procedures</code>, <code>functions</code>,<code>packages</code>)，使用大写。</p>
<p>变量名以及SQL中的列名和表名，使用小写。</p>
<h2 id="二plsql编程规范之空白">二、PL/SQL编程规范之空白</h2>
<p>空白（空行和空格）在PL/SQL中如同在SQL中一样重要，因为它是提高代码可读性的一个重要因素。换句话说，可以通过在代码中使用缩进来体现程序的逻辑结构。以下
是一些建议：</p>
<p>在等号或比较操作符的左右各留一个空格；</p>
<p>结构词（<code>DECLARE</code>, <code>BEGIN</code>, <code>EXCEPTION</code>, <code>END</code>,<code>IF and END IF</code>,<code> LOOP and END LOOP</code>）居左排列。另外，结构中的嵌套结构要缩进三个空格（使用空格键，而不是Tab键）；</p>
<p>主要代码段之间用空行隔开；</p>
<p>把同一结构的不同逻辑部分分开写在独立的行，即使这个结构很短。例如，<code>IF</code>和<code>THEN</code>被放在同一行，而<code>ELSE </code>和<code>END IF</code>则放在独立的行。</p>
<h2 id="三plsql编程规范之命名约定">三、PL/SQL编程规范之命名约定</h2>
<p>使用以下前缀对于避免与关键字和表名列名相冲突是很有帮助的：</p>
<p>v_变量名</p>
<p>con_常量名</p>
<p>i_输入参数名，o_输出参数名，io_输入输出参数名</p>
<p>c_游标名 或者 游标名_cur</p>
<p>rc_ Ref Cursor名</p>
<p>r_Record名 或者 Record名_rec</p>
<p>FOR r_stud IN c_stud LOOP…</p>
<p>FOR stud_rec IN stud_cur LOOP</p>
<p>type_名称，名称_type (用户定义的类型)</p>
<p>t_表名，表名_tab （PL/SQL 表）</p>
<p>rec_Record名，Record名_rec （Record变量）</p>
<p>e_异常名 （用户定义的异常）</p>
<p>包的名称应该描述包内的存储过程和函数主要所完成的功能</p>
<p>存储过程的名称应该描述该存储过程所执行的动作</p>
<p>函数的名称应该描述所返回的变量</p>
<p>例如：</p>
<p>​ <br />
PACKAGE student_admin
&ndash;admin 后缀可能是用于表示管理功能.
PROCEDURE remove_student (i_student_id IN student.studid%TYPE);
FUNCTION student_enroll_count (i_student_id student.studid%TYPE)
RETURN INTEGER;</p>
<h2 id="四plsql编程规范之注释">四、PL/SQL编程规范之注释</h2>
<p>PL/SQL中的注释如同SQL中的注释一样重要。他们应该解释程序的主要部分和所有关键的逻辑步骤。</p>
<p>使用单行注释(-)而不是多行注释(/*)。即使PL/SQL对这些注释做同样处理，这样在代码完成后进行调试也会容易些，因为你不能在多行注释中嵌入多行注释。换句
话说，单行注释代码中可以部分取消注释，而在多行注释代码中则不行。</p>
<h2 id="五其他的建议">五、其他的建议</h2>
<p>对于PL/SQL中嵌入的SQL声明，使用相同的格式化指南来决定这些声明应该如何在代码块中出现</p>
<p>提供一个头部注释，用于说明代码块的用途并列出创建日期和作者名字。并且每个修订版都要有一行注释，包含作者名、日期和修订版描述。</p>
<p>例如：下面的这个示例体现了上述建议。请注意该示例还使用了等宽字体（Courier
New），因为每个字体占据同等宽度可以使格式化更加简便。等比例空格字体会隐藏空格使得行间对齐比较困难。多数文本和程序编辑器默认使用等宽字体。</p>
<p>​ <br />
/********************************************************
* 文件名：coursediscount01.sql<br />
* 版本：1<br />
* 用途：对于至少有一部分超过十个学生登记的课程给予折扣<br />
* 参数：无<br />
*<br />
* 作者：s.tashi  时间：2000.1.1<br />
* 修改者：y.sonam 时间：2000.2.1<br />
* 描述：修正游标，添加缩进和注释。<br />
********************************************************/
DECLARE
&ndash; C_DISCOUNT_COURSE 找出那些至少有一部分超过十个学生登记的课程<br />
CURSOR c_discount_course IS
SELECT DISTINCT course_no
FROM section sect
WHERE 10 &lt;= (SELECT COUNT(*)
FROM enrollment enr
WHERE enr.section_id = sect.section_id);
&ndash; 费用超过 $2000.00的课程的折扣率<br />
con_discount_2000 CONSTANT NUMBER := .90;
&ndash; 费用在$1001.00和$2000.00之间的课程的折扣率<br />
con_discount_other CONSTANT NUMBER := .95;
v_current_course_cost course.cost%TYPE;
v_discount_all        NUMBER;
e_update_is_problematic EXCEPTION;
BEGIN
&ndash; 对于那些要打折的课程, 确定当前费用和新的费用<br />
FOR r_discount_course in c_discount_course LOOP
SELECT cost
INTO v_current_course_cost
FROM course
WHERE course_no = r_discount_course.course_no;
IF v_current_course_cost &gt; 2000 THEN
v_discount_all := con_discount_2000;
ELSE
IF v_current_course_cost &gt; 1000 THEN
v_discount_all := con_discount_other;
ELSE
v_discount_all := 1;
END IF;
END IF;
BEGIN
UPDATE course
SET cost = cost * v_discount_all
WHERE course_no = r_discount_course.course_no;
EXCEPTION
WHEN OTHERS THEN
RAISE e_update_is_problematic;
END; &ndash; 更新记录的子代码块结束<br />
END LOOP; &ndash; 主循环结束<br />
COMMIT;
EXCEPTION
WHEN e_update_is_problematic THEN
&ndash; 事务回滚<br />
ROLLBACK;
DBMS_OUTPUT.PUT_LINE(&lsquo;There was a problem updating a course cost.&rsquo;);
WHEN OTHERS THEN
NULL;
END;</p>
<p>-EOF-</p>
]]></content:encoded>
    </item>
    <item>
      <title>python&#43;django MTV框架 和php MVC框架</title>
      <link>https://blog.alswl.com/2009/10/python-django-mtv-framework-and-php-mvc-framework/</link>
      <pubDate>Thu, 01 Oct 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/10/python-django-mtv-framework-and-php-mvc-framework/</guid>
      <description>&lt;p&gt;首先，祝福祖国60华诞，我爱这个国家。&lt;/p&gt;
&lt;p&gt;刚才在GR读到&lt;a href=&#34;http://www.classicning.com&#34;&gt;Here Comes The Sun&lt;/a&gt;的[A shorten url app](&lt;a href=&#34;http://www.classicning.com/blog/2009/09/a-shorten-url-app/-shorten-url-&#34;&gt;http://www.classicning.com/blog/2009/09/a-shorten-url-app/-shorten-url-&lt;/a&gt;
app/)，其中提到了Python下Django框架的一些问题，我很感兴趣，搜索了一下MTV模型，资料很少。但有一篇我读后很有启发，现在转载如下。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&#34;http://bbs.thinkphp.cn/viewthread.php?tid=5022&#34;&gt;python+django MTV框架 和php MVC框架的不同之处 - PHP+MYSQL+APACHE -ThinkPHP官方论坛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：乔峰&lt;/p&gt;
&lt;p&gt;*&lt;em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;残酷的分割线&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;pythondjango-mtv框架-和php-mvc框架的不同之处&#34;&gt;python+django MTV框架 和php MVC框架的不同之处&lt;/h2&gt;
&lt;p&gt;最近学习了python语言和djangoMTV框架，感觉用的很爽啊。这里给大家粗略的介绍一下。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>首先，祝福祖国60华诞，我爱这个国家。</p>
<p>刚才在GR读到<a href="http://www.classicning.com">Here Comes The Sun</a>的[A shorten url app](<a href="http://www.classicning.com/blog/2009/09/a-shorten-url-app/-shorten-url-">http://www.classicning.com/blog/2009/09/a-shorten-url-app/-shorten-url-</a>
app/)，其中提到了Python下Django框架的一些问题，我很感兴趣，搜索了一下MTV模型，资料很少。但有一篇我读后很有启发，现在转载如下。</p>
<p>原文链接：<a href="http://bbs.thinkphp.cn/viewthread.php?tid=5022">python+django MTV框架 和php MVC框架的不同之处 - PHP+MYSQL+APACHE -ThinkPHP官方论坛</a></p>
<p>作者：乔峰</p>
<p>*<em><strong><strong><strong><strong><strong><strong><strong><strong>残酷的分割线</strong></strong></strong></strong></strong></strong></strong></strong></em></p>
<h2 id="pythondjango-mtv框架-和php-mvc框架的不同之处">python+django MTV框架 和php MVC框架的不同之处</h2>
<p>最近学习了python语言和djangoMTV框架，感觉用的很爽啊。这里给大家粗略的介绍一下。</p>
<p>Django是一个开放源代码的Web应用框架，由Python写成。采用了MTV的设计模式，即模型M，模版T和视图控制器V。它最初是被开发来用于管理劳伦斯出版
集团旗下的一些以新闻内容为主的网站的。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。</p>
<p>Django的主要目标是使得开发复杂的、数据库驱动的网站变得简单。Django注重组件的重用性和「可插拔性」，敏捷开发和DRY法则（Don&rsquo;t Repeat
Yourself）。在Django中Python被普遍使用，甚至包括配置文件和数据模型。</p>
<p>关键一点是Django框架把控制层(Ctronl layer)给封装了，无非与数据交互这层都是数据库表的读,写,删除,更新的操作.在写程序的时候，只要调用方
法就行了.感觉很方便.用户可以用很少的代码完成很多的事情.代码可读性强.运行的速度比php要快.</p>
<p>python是嵌入式的语言,它可以把C和JAVA语言的写的东西结合在一起.也难怪Google公司主导议语言用python,c++,java的比较多.大的公司
比较重视系统管理和总体的架构.</p>
<p>有人说最有发展的语言是python,不过都值得大家去探讨的.因为结果都很预料,前段时间闹的很热的是Ruby语言,Ruby刚出来时,传说也很了得,现在看起来也
不怎么行了.</p>
<h2 id="python的前景">Python的前景</h2>
<p>Python在编程领域的占有率一直处于稳步上升之中，根据最新的数据，Python排名第七。前六名分别是Java,C,VB,C++,PHP和Perl.
作为一个很年轻的语言，Python的位置已经相当令人振奋了。随着微软将Python纳入.Net 平台，相信Python的将来会更加强劲发展。Python
很可能会成为.Net平台快速开发的主流语言。</p>
<p>欲了解这方面情况，请参考Iron Python的相关信息.</p>
<p>著名的搜索引擎 Google 也大量使用Python。 现在中国的搜狐(sohu)网站邮箱系统也是用python开发的.更加令人吃惊的是，在Nokia智能手
机所采用的Symbian操作系统上，Python成为继C++,Java之后的第三个编程语言！可见Python的影响力之巨大。</p>
<p>我在学python语言和django MTV框架的一点体会,拿来教程,都说该语言如何简单易学,都是乱说,入门很简单,想要学深点,都不容易的.</p>
<p>个人感觉还是学PHP入门时最简单,不过现在弄出哪么框架,组件,也变得越来越不简单,PHP也越来越像JAVA的儿子JSP(当然PHP是C语言的儿子),个人觉得
他们越来越接近,但又有好多差异.</p>
<p>python语言不仅可以做WEB应用,而且可以做桌面,服务器软件和手机软件开发(有的诺基亚手机系统就是用python做的),而PHP专注做WEB 应用的,P
HP开发祖师也为PHP为什么不能转向照顾到做桌面,服务器软件和手机软件开发的应用听说也苦耐了好久,但最终没能成功转型.哪是因为他们在最初的底层定位搞死了(网
上评论观点).</p>
<p>不过我看到网上语言排名,PHP在Python之前,也说明PHP在近期表现不俗.</p>
<p>我喜欢用Python,Django,也很喜欢用php,thinkphp,特别是升级后的1.5版,但是可不可也做成MTV的框架模式呢.用精良的代码完成很多工作
.加快开发速度呢.大家都要努力哦.加油兄弟们.</p>
<h3 id="2楼回复">2楼回复：</h3>
<p>美國太空總署NASA使用Python，Google使用Python，Youtube使用Python.阿里巴巴也用python开发,搜狐邮箱是用python2
.6开发的</p>
<h3 id="5楼回复">5楼回复：</h3>
<p>MVC与MTV有什么不同呢.</p>
<p>大家都知道</p>
<p>MVC 中的M是代表MODLE层,V代表VIEW层,C代表Contrl层.</p>
<p>MTV 中的M是代表MODLE层,T代表Template(模板层),V代表VIEW层.</p>
<p>Django 是MTV模式框架,它把Control控制层容合到   Django 框架里边了,</p>
<p>程序员把  Control控制层东西交给Django自动完成了,  只需要编写非常少的代码完成很多的事情.所以,它比MVC框架考虑的问题要深一步.因为我们程
序员大都写程序在Contrl层,现在这个工作交给了框架,仅需写很少的调用代码,自然工作效率就提高了.</p>
]]></content:encoded>
    </item>
    <item>
      <title>编码: ASCII(ANSI), GB-2312, UNICODE, UTF-8，UTF-16</title>
      <link>https://blog.alswl.com/2009/09/encoding-ascii-ansi-gb-2312-unicode-utf-8-utf-16/</link>
      <pubDate>Sat, 12 Sep 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/09/encoding-ascii-ansi-gb-2312-unicode-utf-8-utf-16/</guid>
      <description>&lt;h2 id=&#34;ascii字符集&#34;&gt;ASCII字符集&lt;/h2&gt;
&lt;p&gt;7位的编码方案，总共表示128个字符，其中包括了大小写英文字母、数字、标点符号等常用字符。英语世界已经足够应付。&lt;/p&gt;
&lt;h2 id=&#34;iso-8859-1字符集&#34;&gt;ISO-8859-1字符集&lt;/h2&gt;
&lt;p&gt;也称ISO-Latin字符集，它扩展了ASCII字符集，用到了8bit字节里的最高一位，这样它就有256个字符，前128个字符和ASCII字符集相同
。有了ISO-Latin字符集，西方世界的一些其它语言，如西班牙语、法语、德语、意大利语都够用了。&lt;/p&gt;
&lt;h2 id=&#34;gb系列字符集gb2312gbkgb18030&#34;&gt;GB系列字符集（GB2312，GBK，GB18030）&lt;/h2&gt;
&lt;p&gt;由于一个字节是无论如何也表达不了哪怕是最长用的汉字字符集的，所以为了用计算机存储汉字，必须使用多个字节。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="ascii字符集">ASCII字符集</h2>
<p>7位的编码方案，总共表示128个字符，其中包括了大小写英文字母、数字、标点符号等常用字符。英语世界已经足够应付。</p>
<h2 id="iso-8859-1字符集">ISO-8859-1字符集</h2>
<p>也称ISO-Latin字符集，它扩展了ASCII字符集，用到了8bit字节里的最高一位，这样它就有256个字符，前128个字符和ASCII字符集相同
。有了ISO-Latin字符集，西方世界的一些其它语言，如西班牙语、法语、德语、意大利语都够用了。</p>
<h2 id="gb系列字符集gb2312gbkgb18030">GB系列字符集（GB2312，GBK，GB18030）</h2>
<p>由于一个字节是无论如何也表达不了哪怕是最长用的汉字字符集的，所以为了用计算机存储汉字，必须使用多个字节。</p>
<p>多字节字符集就是使用可变长的编码长度来编码字符，有的字符用一个字节编码，比如ASCII字符，有的字符用两个字节编码，比如汉字。在VC里，多字节字符集等同于双
字节字符集，VC不支持多于2个字节编码长度的字符。GB系列的字符集和ISO-Latin字符集一样，前128个字符和ASCII字符集相同。GB系列字符集是兼容
的，相同的中文字符在这3个字符集里有相同的编码。GB2312和GBK一个字符最多2个字节表示，GB18030可多达4个字节。在这种编码里表示汉字时，需要一个
leading byte，它总是大于127，这个字节的含义是说明它和后面的字节（们）一起表示一个字符。</p>
<p>这些字符集（ISO-Latin字符集，GB系列字符集）都是以ASCII为基础扩展而来，统称为ANSI字符集。</p>
<p>记事本在默认情况下（选择ANSI编码）就是使用多字节字符集保存文件的，至于使用的是GB2312，GBK，还是GB18030我不清楚。</p>
<h2 id="unicode字符集">Unicode字符集</h2>
<p>每个地区的人都试图扩展ASCII编码来支持本地的语言，最终的结果是导致互不兼容。因为除了最低的128个字符相同以外，其它的字符都使用自己特殊的编码方案。</p>
<p>当使用与文件保存时的编码方案不同的编码来读取文件时，就会产生错误——比如Windows记事本那个著名的「联通BUG」。</p>
<p>统一所有字符的编码是Unicode被设计出来的初衷。</p>
<p>长久以来，Unicode在我心中的概念就是：使用2个字节来编码字符，使用Unicode可以表示世界上所有的字符。但这种理解并不准确！</p>
<p>其实Unicode可以看成是一种理想：这种理想就是世界上的所有字符都只有一个唯一的标识！至于怎样去实现这种理想，有很多的实现方式：UTF-
8,UTF-16,UTF-32,甚至在Unicode标准里还介绍了一种压缩的实现方式。Unicode把这个唯一的标识称之为代码点（code
point），字符的代码点以U+XXXX的方式表示，这个可以打开Windows自带的字符映射表看得到。</p>
<p>Unicode最初被设计出来的时候希望使用2个字节就可以表示世界上的所有字符。因此，实现Unicode最直接的想法就是用两个字节来存储一个字符，如果大家都这
么想就好了，这样一个字符就可以用2个字节长的短整形来存储。但是偏偏还有一个叫做大端小端东西存在，这样2个字节的短整型在内存中的表示顺序就有2种可能，这就是为
什么当用记事本保存文本文件时可以选择Unicode或者Unicode big endian的原因。</p>
<p>1个字符=2个字节在现实中却遇到了麻烦。一方面，用2个字节表示一个字符，浪费了大量的空间（如果仅仅用来存储ISO-
Latin字符集里的字符的话），而且还会有大端小端的问题，解决的方案是UTF-
8编码；另一方面，人们在实践中发现即使用2个字节编码也无法表示所有字符，因此出现了UTF- 16。UTF-16除了使用2个字节编码外，还使用一对2个字节来表
示Unicode里很少用到的字符；另外还有UTF-32，它使用单独的4个字节来编码所有的Unicode字符。</p>
<h2 id="utf-8编码">UTF-8编码</h2>
<p>我想最早提出UTF-8的一定是美国人，「用2个字节来表示一个英语字母这太浪费了！」，他们肯定会这么说的。顾名思义，那个8说明UTF-
8编码中最小的单位是8bit的字节。采用UTF-
8编码，Unicode代码点中U+007F以下（包含U+007F）的字符用一个字节编码，其它的字符用多个字节编码，最多一个字符用4个字节编码。这样UTF-
8兼容ASCII，但是不兼容ISO-Latin字符集。</p>
<h3 id="unicode字符采用utf-8编码方案时的对照表">Unicode字符采用UTF-8编码方案时的对照表</h3>
<p>U-00000000 - U-0000007F:  0xxxxxxx</p>
<p>U-00000080 - U-000007FF:  110xxxxx 10xxxxxx</p>
<p>U-00000800 - U-0000FFFF:  1110xxxx 10xxxxxx 10xxxxxx</p>
<p>U-00010000 - U-001FFFFF:  11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</p>
<p>U-00200000 - U-03FFFFFF:  111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx</p>
<p>U-04000000 - U-7FFFFFFF:  1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx
10xxxxxx</p>
<p>网上的很多文章都有这个表，可以看到一个Unicode代码点采用UTF-8编码时最多可达6个字节。但是从Unicode官方网站上看到的是UTF-
8编码的最大字节长度是4个字节。也就是说最下面的两行没有了。</p>
<p>UTF-8编码的实现方式比较好理解：例如「汉」字的Unicode编码是6C49，6C49在0800-FFFF之间，所以最终编码应该是3个字节。
6C49的二进制位串是：110110001001001，把这个位串从右向左填充到那3个字节的x部分，高位不够的用0补。最终得到的3个字节是：11100110
10110001 10001001，即E6 B1 89。注意由于UTF-
8的最小编码单元是字节，所以不存在大端小端的问题。在各种Unicode编码方案之间转换的标准算法（诸如从UTF-16到UTF-
8或者反过来）已经有了，在Unicode的官方网站上可以找到。</p>
<p>这样Unicode至少就有5种编码方案了（UTF-8，UTF-16两种，UTF-32两种），怎么区分它们呢？</p>
<p>区分各种不同Unicode编码方案的技巧被称为Byte Order Mark（BOM）</p>
<p>Byte order mark     Description</p>
<p>EF BB BF     UTF-8</p>
<p>FF FE     UTF-16, little endian</p>
<p>FE FF     UTF-16, big endian</p>
<p>FF FE 00 00     UTF-32</p>
<p>「像记事本、EditPlus这些软件，如果另存为unicode类型，会在文件最开头添加BOM码，如果一个文件没有BOM码，那么就很难识别，需要人工识别了。另
外，一般说Unicode编码，其实和Unicode-le(小头端)一个概念，Unicode Big endian会单独作为一种编码类型放置的。」-alswl</p>
]]></content:encoded>
    </item>
    <item>
      <title>中国省份与城市数据SQL</title>
      <link>https://blog.alswl.com/2009/08/zhong-guo-sheng-fen-yu-cheng-shi-shu-ju-sql/</link>
      <pubDate>Sat, 22 Aug 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/08/zhong-guo-sheng-fen-yu-cheng-shi-shu-ju-sql/</guid>
      <description>&lt;p&gt;本文来源：&lt;a href=&#34;http://blog.csdn.net/xielingxu/archive/2007/08/26/1759471.aspx&#34;&gt;中国省份与城市数据插入 - xlx - CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在Google找到这个，实在是爱不释手，就转过来了，很多项目都需要用到这些数据。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if exists (select * from sysobjects where id = OBJECT_ID(&amp;#39;[province]&amp;#39;) and OBJECTPROPERTY(id, &amp;#39;IsUserTable&amp;#39;) = 1)
DROP TABLE [province]

CREATE TABLE [province] (

[id] [int] NOT NULL,

[provinceID] [nvarchar] (12) NOT NULL,

[province] [nvarchar] (80) NOT NULL)

ALTER TABLE [province] WITH NOCHECK ADD CONSTRAINT [PK_province] PRIMARY KEY
NONCLUSTERED ( [id] )INSERT [province] ([id],[provinceID],[province]) VALUES (
1,&amp;#39;110000&amp;#39;,&amp;#39;北京市&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 2,&amp;#39;120000&amp;#39;,&amp;#39;天津市&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 3,&amp;#39;130000&amp;#39;,&amp;#39;河北省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 4,&amp;#39;140000&amp;#39;,&amp;#39;山西省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 5,&amp;#39;150000&amp;#39;,&amp;#39;内蒙古自治区&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 6,&amp;#39;210000&amp;#39;,&amp;#39;辽宁省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 7,&amp;#39;220000&amp;#39;,&amp;#39;吉林省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 8,&amp;#39;230000&amp;#39;,&amp;#39;黑龙江省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 9,&amp;#39;310000&amp;#39;,&amp;#39;上海市&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 10,&amp;#39;320000&amp;#39;,&amp;#39;江苏省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 11,&amp;#39;330000&amp;#39;,&amp;#39;浙江省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 12,&amp;#39;340000&amp;#39;,&amp;#39;安徽省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 13,&amp;#39;350000&amp;#39;,&amp;#39;福建省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 14,&amp;#39;360000&amp;#39;,&amp;#39;江西省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 15,&amp;#39;370000&amp;#39;,&amp;#39;山东省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 16,&amp;#39;410000&amp;#39;,&amp;#39;河南省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 17,&amp;#39;420000&amp;#39;,&amp;#39;湖北省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 18,&amp;#39;430000&amp;#39;,&amp;#39;湖南省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 19,&amp;#39;440000&amp;#39;,&amp;#39;广东省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
20,&amp;#39;450000&amp;#39;,&amp;#39;广西壮族自治区&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 21,&amp;#39;460000&amp;#39;,&amp;#39;海南省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 22,&amp;#39;500000&amp;#39;,&amp;#39;重庆市&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 23,&amp;#39;510000&amp;#39;,&amp;#39;四川省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 24,&amp;#39;520000&amp;#39;,&amp;#39;贵州省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 25,&amp;#39;530000&amp;#39;,&amp;#39;云南省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 26,&amp;#39;540000&amp;#39;,&amp;#39;西藏自治区&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 27,&amp;#39;610000&amp;#39;,&amp;#39;陕西省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 28,&amp;#39;620000&amp;#39;,&amp;#39;甘肃省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 29,&amp;#39;630000&amp;#39;,&amp;#39;青海省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
30,&amp;#39;640000&amp;#39;,&amp;#39;宁夏回族自治区&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
31,&amp;#39;650000&amp;#39;,&amp;#39;新疆维吾尔自治区&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 32,&amp;#39;710000&amp;#39;,&amp;#39;台湾省&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
33,&amp;#39;810000&amp;#39;,&amp;#39;香港特别行政区&amp;#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
34,&amp;#39;820000&amp;#39;,&amp;#39;澳门特别行政区&amp;#39;)

if exists (select * from sysobjects where id = OBJECT_ID(&amp;#39;[area]&amp;#39;) and
OBJECTPROPERTY(id, &amp;#39;IsUserTable&amp;#39;) = 1)

DROP TABLE [area]

CREATE TABLE [area] (

[id] [int] NOT NULL,

[cityID] [nvarchar] (12) NOT NULL,

[city] [nvarchar] (100) NOT NULL,

[father] [nvarchar] (12) NOT NULL)

ALTER TABLE [area] WITH NOCHECK ADD CONSTRAINT [PK_area] PRIMARY KEY
NONCLUSTERED ( [id] )INSERT [area] ([id],[cityID],[city],[father]) VALUES (
1,&amp;#39;110100&amp;#39;,&amp;#39;市辖区&amp;#39;,&amp;#39;110000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
2,&amp;#39;110200&amp;#39;,&amp;#39;县&amp;#39;,&amp;#39;110000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
3,&amp;#39;120100&amp;#39;,&amp;#39;市辖区&amp;#39;,&amp;#39;120000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
4,&amp;#39;120200&amp;#39;,&amp;#39;县&amp;#39;,&amp;#39;120000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
5,&amp;#39;130100&amp;#39;,&amp;#39;石家庄市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
6,&amp;#39;130200&amp;#39;,&amp;#39;唐山市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
7,&amp;#39;130300&amp;#39;,&amp;#39;秦皇岛市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
8,&amp;#39;130400&amp;#39;,&amp;#39;邯郸市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
9,&amp;#39;130500&amp;#39;,&amp;#39;邢台市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
10,&amp;#39;130600&amp;#39;,&amp;#39;保定市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
11,&amp;#39;130700&amp;#39;,&amp;#39;张家口市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
12,&amp;#39;130800&amp;#39;,&amp;#39;承德市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
13,&amp;#39;130900&amp;#39;,&amp;#39;沧州市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
14,&amp;#39;131000&amp;#39;,&amp;#39;廊坊市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
15,&amp;#39;131100&amp;#39;,&amp;#39;衡水市&amp;#39;,&amp;#39;130000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
16,&amp;#39;140100&amp;#39;,&amp;#39;太原市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
17,&amp;#39;140200&amp;#39;,&amp;#39;大同市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
18,&amp;#39;140300&amp;#39;,&amp;#39;阳泉市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
19,&amp;#39;140400&amp;#39;,&amp;#39;长治市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
20,&amp;#39;140500&amp;#39;,&amp;#39;晋城市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
21,&amp;#39;140600&amp;#39;,&amp;#39;朔州市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
22,&amp;#39;140700&amp;#39;,&amp;#39;晋中市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
23,&amp;#39;140800&amp;#39;,&amp;#39;运城市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
24,&amp;#39;140900&amp;#39;,&amp;#39;忻州市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
25,&amp;#39;141000&amp;#39;,&amp;#39;临汾市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
26,&amp;#39;141100&amp;#39;,&amp;#39;吕梁市&amp;#39;,&amp;#39;140000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
27,&amp;#39;150100&amp;#39;,&amp;#39;呼和浩特市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
28,&amp;#39;150200&amp;#39;,&amp;#39;包头市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
29,&amp;#39;150300&amp;#39;,&amp;#39;乌海市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
30,&amp;#39;150400&amp;#39;,&amp;#39;赤峰市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
31,&amp;#39;150500&amp;#39;,&amp;#39;通辽市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
32,&amp;#39;150600&amp;#39;,&amp;#39;鄂尔多斯市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
33,&amp;#39;150700&amp;#39;,&amp;#39;呼伦贝尔市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
34,&amp;#39;150800&amp;#39;,&amp;#39;巴彦淖尔市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
35,&amp;#39;150900&amp;#39;,&amp;#39;乌兰察布市&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
36,&amp;#39;152200&amp;#39;,&amp;#39;兴安盟&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
37,&amp;#39;152500&amp;#39;,&amp;#39;锡林郭勒盟&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
38,&amp;#39;152900&amp;#39;,&amp;#39;阿拉善盟&amp;#39;,&amp;#39;150000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
39,&amp;#39;210100&amp;#39;,&amp;#39;沈阳市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
40,&amp;#39;210200&amp;#39;,&amp;#39;大连市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
41,&amp;#39;210300&amp;#39;,&amp;#39;鞍山市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
42,&amp;#39;210400&amp;#39;,&amp;#39;抚顺市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
43,&amp;#39;210500&amp;#39;,&amp;#39;本溪市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
44,&amp;#39;210600&amp;#39;,&amp;#39;丹东市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
45,&amp;#39;210700&amp;#39;,&amp;#39;锦州市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
46,&amp;#39;210800&amp;#39;,&amp;#39;营口市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
47,&amp;#39;210900&amp;#39;,&amp;#39;阜新市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
48,&amp;#39;211000&amp;#39;,&amp;#39;辽阳市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
49,&amp;#39;211100&amp;#39;,&amp;#39;盘锦市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
50,&amp;#39;211200&amp;#39;,&amp;#39;铁岭市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
51,&amp;#39;211300&amp;#39;,&amp;#39;朝阳市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
52,&amp;#39;211400&amp;#39;,&amp;#39;葫芦岛市&amp;#39;,&amp;#39;210000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
53,&amp;#39;220100&amp;#39;,&amp;#39;长春市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
54,&amp;#39;220200&amp;#39;,&amp;#39;吉林市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
55,&amp;#39;220300&amp;#39;,&amp;#39;四平市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
56,&amp;#39;220400&amp;#39;,&amp;#39;辽源市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
57,&amp;#39;220500&amp;#39;,&amp;#39;通化市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
58,&amp;#39;220600&amp;#39;,&amp;#39;白山市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
59,&amp;#39;220700&amp;#39;,&amp;#39;松原市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
60,&amp;#39;220800&amp;#39;,&amp;#39;白城市&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
61,&amp;#39;222400&amp;#39;,&amp;#39;延边朝鲜族自治州&amp;#39;,&amp;#39;220000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
62,&amp;#39;230100&amp;#39;,&amp;#39;哈尔滨市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
63,&amp;#39;230200&amp;#39;,&amp;#39;齐齐哈尔市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
64,&amp;#39;230300&amp;#39;,&amp;#39;鸡西市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
65,&amp;#39;230400&amp;#39;,&amp;#39;鹤岗市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
66,&amp;#39;230500&amp;#39;,&amp;#39;双鸭山市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
67,&amp;#39;230600&amp;#39;,&amp;#39;大庆市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
68,&amp;#39;230700&amp;#39;,&amp;#39;伊春市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
69,&amp;#39;230800&amp;#39;,&amp;#39;佳木斯市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
70,&amp;#39;230900&amp;#39;,&amp;#39;七台河市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
71,&amp;#39;231000&amp;#39;,&amp;#39;牡丹江市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
72,&amp;#39;231100&amp;#39;,&amp;#39;黑河市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
73,&amp;#39;231200&amp;#39;,&amp;#39;绥化市&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
74,&amp;#39;232700&amp;#39;,&amp;#39;大兴安岭地区&amp;#39;,&amp;#39;230000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
75,&amp;#39;310100&amp;#39;,&amp;#39;市辖区&amp;#39;,&amp;#39;310000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
76,&amp;#39;310200&amp;#39;,&amp;#39;县&amp;#39;,&amp;#39;310000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
77,&amp;#39;320100&amp;#39;,&amp;#39;南京市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
78,&amp;#39;320200&amp;#39;,&amp;#39;无锡市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
79,&amp;#39;320300&amp;#39;,&amp;#39;徐州市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
80,&amp;#39;320400&amp;#39;,&amp;#39;常州市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
81,&amp;#39;320500&amp;#39;,&amp;#39;苏州市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
82,&amp;#39;320600&amp;#39;,&amp;#39;南通市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
83,&amp;#39;320700&amp;#39;,&amp;#39;连云港市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
84,&amp;#39;320800&amp;#39;,&amp;#39;淮安市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
85,&amp;#39;320900&amp;#39;,&amp;#39;盐城市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
86,&amp;#39;321000&amp;#39;,&amp;#39;扬州市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
87,&amp;#39;321100&amp;#39;,&amp;#39;镇江市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
88,&amp;#39;321200&amp;#39;,&amp;#39;泰州市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
89,&amp;#39;321300&amp;#39;,&amp;#39;宿迁市&amp;#39;,&amp;#39;320000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
90,&amp;#39;330100&amp;#39;,&amp;#39;杭州市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
91,&amp;#39;330200&amp;#39;,&amp;#39;宁波市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
92,&amp;#39;330300&amp;#39;,&amp;#39;温州市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
93,&amp;#39;330400&amp;#39;,&amp;#39;嘉兴市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
94,&amp;#39;330500&amp;#39;,&amp;#39;湖州市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
95,&amp;#39;330600&amp;#39;,&amp;#39;绍兴市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
96,&amp;#39;330700&amp;#39;,&amp;#39;金华市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
97,&amp;#39;330800&amp;#39;,&amp;#39;衢州市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
98,&amp;#39;330900&amp;#39;,&amp;#39;舟山市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
99,&amp;#39;331000&amp;#39;,&amp;#39;台州市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
100,&amp;#39;331100&amp;#39;,&amp;#39;丽水市&amp;#39;,&amp;#39;330000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
101,&amp;#39;340100&amp;#39;,&amp;#39;合肥市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
102,&amp;#39;340200&amp;#39;,&amp;#39;芜湖市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
103,&amp;#39;340300&amp;#39;,&amp;#39;蚌埠市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
104,&amp;#39;340400&amp;#39;,&amp;#39;淮南市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
105,&amp;#39;340500&amp;#39;,&amp;#39;马鞍山市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
106,&amp;#39;340600&amp;#39;,&amp;#39;淮北市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
107,&amp;#39;340700&amp;#39;,&amp;#39;铜陵市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
108,&amp;#39;340800&amp;#39;,&amp;#39;安庆市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
109,&amp;#39;341000&amp;#39;,&amp;#39;黄山市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
110,&amp;#39;341100&amp;#39;,&amp;#39;滁州市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
111,&amp;#39;341200&amp;#39;,&amp;#39;阜阳市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
112,&amp;#39;341300&amp;#39;,&amp;#39;宿州市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
113,&amp;#39;341400&amp;#39;,&amp;#39;巢湖市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
114,&amp;#39;341500&amp;#39;,&amp;#39;六安市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
115,&amp;#39;341600&amp;#39;,&amp;#39;亳州市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
116,&amp;#39;341700&amp;#39;,&amp;#39;池州市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
117,&amp;#39;341800&amp;#39;,&amp;#39;宣城市&amp;#39;,&amp;#39;340000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
118,&amp;#39;350100&amp;#39;,&amp;#39;福州市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
119,&amp;#39;350200&amp;#39;,&amp;#39;厦门市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
120,&amp;#39;350300&amp;#39;,&amp;#39;莆田市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
121,&amp;#39;350400&amp;#39;,&amp;#39;三明市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
122,&amp;#39;350500&amp;#39;,&amp;#39;泉州市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
123,&amp;#39;350600&amp;#39;,&amp;#39;漳州市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
124,&amp;#39;350700&amp;#39;,&amp;#39;南平市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
125,&amp;#39;350800&amp;#39;,&amp;#39;龙岩市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
126,&amp;#39;350900&amp;#39;,&amp;#39;宁德市&amp;#39;,&amp;#39;350000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
127,&amp;#39;360100&amp;#39;,&amp;#39;南昌市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
128,&amp;#39;360200&amp;#39;,&amp;#39;景德镇市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
129,&amp;#39;360300&amp;#39;,&amp;#39;萍乡市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
130,&amp;#39;360400&amp;#39;,&amp;#39;九江市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
131,&amp;#39;360500&amp;#39;,&amp;#39;新余市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
132,&amp;#39;360600&amp;#39;,&amp;#39;鹰潭市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
133,&amp;#39;360700&amp;#39;,&amp;#39;赣州市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
134,&amp;#39;360800&amp;#39;,&amp;#39;吉安市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
135,&amp;#39;360900&amp;#39;,&amp;#39;宜春市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
136,&amp;#39;361000&amp;#39;,&amp;#39;抚州市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
137,&amp;#39;361100&amp;#39;,&amp;#39;上饶市&amp;#39;,&amp;#39;360000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
138,&amp;#39;370100&amp;#39;,&amp;#39;济南市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
139,&amp;#39;370200&amp;#39;,&amp;#39;青岛市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
140,&amp;#39;370300&amp;#39;,&amp;#39;淄博市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
141,&amp;#39;370400&amp;#39;,&amp;#39;枣庄市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
142,&amp;#39;370500&amp;#39;,&amp;#39;东营市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
143,&amp;#39;370600&amp;#39;,&amp;#39;烟台市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
144,&amp;#39;370700&amp;#39;,&amp;#39;潍坊市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
145,&amp;#39;370800&amp;#39;,&amp;#39;济宁市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
146,&amp;#39;370900&amp;#39;,&amp;#39;泰安市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
147,&amp;#39;371000&amp;#39;,&amp;#39;威海市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
148,&amp;#39;371100&amp;#39;,&amp;#39;日照市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
149,&amp;#39;371200&amp;#39;,&amp;#39;莱芜市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
150,&amp;#39;371300&amp;#39;,&amp;#39;临沂市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
151,&amp;#39;371400&amp;#39;,&amp;#39;德州市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
152,&amp;#39;371500&amp;#39;,&amp;#39;聊城市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
153,&amp;#39;371600&amp;#39;,&amp;#39;滨州市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
154,&amp;#39;371700&amp;#39;,&amp;#39;荷泽市&amp;#39;,&amp;#39;370000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
155,&amp;#39;410100&amp;#39;,&amp;#39;郑州市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
156,&amp;#39;410200&amp;#39;,&amp;#39;开封市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
157,&amp;#39;410300&amp;#39;,&amp;#39;洛阳市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
158,&amp;#39;410400&amp;#39;,&amp;#39;平顶山市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
159,&amp;#39;410500&amp;#39;,&amp;#39;安阳市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
160,&amp;#39;410600&amp;#39;,&amp;#39;鹤壁市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
161,&amp;#39;410700&amp;#39;,&amp;#39;新乡市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
162,&amp;#39;410800&amp;#39;,&amp;#39;焦作市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
163,&amp;#39;410900&amp;#39;,&amp;#39;濮阳市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
164,&amp;#39;411000&amp;#39;,&amp;#39;许昌市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
165,&amp;#39;411100&amp;#39;,&amp;#39;漯河市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
166,&amp;#39;411200&amp;#39;,&amp;#39;三门峡市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
167,&amp;#39;411300&amp;#39;,&amp;#39;南阳市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
168,&amp;#39;411400&amp;#39;,&amp;#39;商丘市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
169,&amp;#39;411500&amp;#39;,&amp;#39;信阳市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
170,&amp;#39;411600&amp;#39;,&amp;#39;周口市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
171,&amp;#39;411700&amp;#39;,&amp;#39;驻马店市&amp;#39;,&amp;#39;410000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
172,&amp;#39;420100&amp;#39;,&amp;#39;武汉市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
173,&amp;#39;420200&amp;#39;,&amp;#39;黄石市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
174,&amp;#39;420300&amp;#39;,&amp;#39;十堰市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
175,&amp;#39;420500&amp;#39;,&amp;#39;宜昌市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
176,&amp;#39;420600&amp;#39;,&amp;#39;襄樊市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
177,&amp;#39;420700&amp;#39;,&amp;#39;鄂州市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
178,&amp;#39;420800&amp;#39;,&amp;#39;荆门市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
179,&amp;#39;420900&amp;#39;,&amp;#39;孝感市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
180,&amp;#39;421000&amp;#39;,&amp;#39;荆州市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
181,&amp;#39;421100&amp;#39;,&amp;#39;黄冈市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
182,&amp;#39;421200&amp;#39;,&amp;#39;咸宁市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
183,&amp;#39;421300&amp;#39;,&amp;#39;随州市&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
184,&amp;#39;422800&amp;#39;,&amp;#39;恩施土家族苗族自治州&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
185,&amp;#39;429000&amp;#39;,&amp;#39;省直辖行政单位&amp;#39;,&amp;#39;420000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
186,&amp;#39;430100&amp;#39;,&amp;#39;长沙市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
187,&amp;#39;430200&amp;#39;,&amp;#39;株洲市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
188,&amp;#39;430300&amp;#39;,&amp;#39;湘潭市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
189,&amp;#39;430400&amp;#39;,&amp;#39;衡阳市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
190,&amp;#39;430500&amp;#39;,&amp;#39;邵阳市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
191,&amp;#39;430600&amp;#39;,&amp;#39;岳阳市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
192,&amp;#39;430700&amp;#39;,&amp;#39;常德市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
193,&amp;#39;430800&amp;#39;,&amp;#39;张家界市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
194,&amp;#39;430900&amp;#39;,&amp;#39;益阳市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
195,&amp;#39;431000&amp;#39;,&amp;#39;郴州市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
196,&amp;#39;431100&amp;#39;,&amp;#39;永州市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
197,&amp;#39;431200&amp;#39;,&amp;#39;怀化市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
198,&amp;#39;431300&amp;#39;,&amp;#39;娄底市&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
199,&amp;#39;433100&amp;#39;,&amp;#39;湘西土家族苗族自治州&amp;#39;,&amp;#39;430000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
200,&amp;#39;440100&amp;#39;,&amp;#39;广州市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
201,&amp;#39;440200&amp;#39;,&amp;#39;韶关市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
202,&amp;#39;440300&amp;#39;,&amp;#39;深圳市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
203,&amp;#39;440400&amp;#39;,&amp;#39;珠海市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
204,&amp;#39;440500&amp;#39;,&amp;#39;汕头市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
205,&amp;#39;440600&amp;#39;,&amp;#39;佛山市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
206,&amp;#39;440700&amp;#39;,&amp;#39;江门市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
207,&amp;#39;440800&amp;#39;,&amp;#39;湛江市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
208,&amp;#39;440900&amp;#39;,&amp;#39;茂名市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
209,&amp;#39;441200&amp;#39;,&amp;#39;肇庆市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
210,&amp;#39;441300&amp;#39;,&amp;#39;惠州市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
211,&amp;#39;441400&amp;#39;,&amp;#39;梅州市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
212,&amp;#39;441500&amp;#39;,&amp;#39;汕尾市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
213,&amp;#39;441600&amp;#39;,&amp;#39;河源市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
214,&amp;#39;441700&amp;#39;,&amp;#39;阳江市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
215,&amp;#39;441800&amp;#39;,&amp;#39;清远市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
216,&amp;#39;441900&amp;#39;,&amp;#39;东莞市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
217,&amp;#39;442000&amp;#39;,&amp;#39;中山市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
218,&amp;#39;445100&amp;#39;,&amp;#39;潮州市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
219,&amp;#39;445200&amp;#39;,&amp;#39;揭阳市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
220,&amp;#39;445300&amp;#39;,&amp;#39;云浮市&amp;#39;,&amp;#39;440000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
221,&amp;#39;450100&amp;#39;,&amp;#39;南宁市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
222,&amp;#39;450200&amp;#39;,&amp;#39;柳州市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
223,&amp;#39;450300&amp;#39;,&amp;#39;桂林市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
224,&amp;#39;450400&amp;#39;,&amp;#39;梧州市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
225,&amp;#39;450500&amp;#39;,&amp;#39;北海市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
226,&amp;#39;450600&amp;#39;,&amp;#39;防城港市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
227,&amp;#39;450700&amp;#39;,&amp;#39;钦州市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
228,&amp;#39;450800&amp;#39;,&amp;#39;贵港市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
229,&amp;#39;450900&amp;#39;,&amp;#39;玉林市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
230,&amp;#39;451000&amp;#39;,&amp;#39;百色市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
231,&amp;#39;451100&amp;#39;,&amp;#39;贺州市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
232,&amp;#39;451200&amp;#39;,&amp;#39;河池市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
233,&amp;#39;451300&amp;#39;,&amp;#39;来宾市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
234,&amp;#39;451400&amp;#39;,&amp;#39;崇左市&amp;#39;,&amp;#39;450000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
235,&amp;#39;460100&amp;#39;,&amp;#39;海口市&amp;#39;,&amp;#39;460000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
236,&amp;#39;460200&amp;#39;,&amp;#39;三亚市&amp;#39;,&amp;#39;460000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
237,&amp;#39;469000&amp;#39;,&amp;#39;省直辖县级行政单位&amp;#39;,&amp;#39;460000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
238,&amp;#39;500100&amp;#39;,&amp;#39;市辖区&amp;#39;,&amp;#39;500000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
239,&amp;#39;500200&amp;#39;,&amp;#39;县&amp;#39;,&amp;#39;500000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
240,&amp;#39;500300&amp;#39;,&amp;#39;市&amp;#39;,&amp;#39;500000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
241,&amp;#39;510100&amp;#39;,&amp;#39;成都市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
242,&amp;#39;510300&amp;#39;,&amp;#39;自贡市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
243,&amp;#39;510400&amp;#39;,&amp;#39;攀枝花市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
244,&amp;#39;510500&amp;#39;,&amp;#39;泸州市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
245,&amp;#39;510600&amp;#39;,&amp;#39;德阳市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
246,&amp;#39;510700&amp;#39;,&amp;#39;绵阳市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
247,&amp;#39;510800&amp;#39;,&amp;#39;广元市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
248,&amp;#39;510900&amp;#39;,&amp;#39;遂宁市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
249,&amp;#39;511000&amp;#39;,&amp;#39;内江市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
250,&amp;#39;511100&amp;#39;,&amp;#39;乐山市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
251,&amp;#39;511300&amp;#39;,&amp;#39;南充市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
252,&amp;#39;511400&amp;#39;,&amp;#39;眉山市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
253,&amp;#39;511500&amp;#39;,&amp;#39;宜宾市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
254,&amp;#39;511600&amp;#39;,&amp;#39;广安市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
255,&amp;#39;511700&amp;#39;,&amp;#39;达州市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
256,&amp;#39;511800&amp;#39;,&amp;#39;雅安市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
257,&amp;#39;511900&amp;#39;,&amp;#39;巴中市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
258,&amp;#39;512000&amp;#39;,&amp;#39;资阳市&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
259,&amp;#39;513200&amp;#39;,&amp;#39;阿坝藏族羌族自治州&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
260,&amp;#39;513300&amp;#39;,&amp;#39;甘孜藏族自治州&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
261,&amp;#39;513400&amp;#39;,&amp;#39;凉山彝族自治州&amp;#39;,&amp;#39;510000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
262,&amp;#39;520100&amp;#39;,&amp;#39;贵阳市&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
263,&amp;#39;520200&amp;#39;,&amp;#39;六盘水市&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
264,&amp;#39;520300&amp;#39;,&amp;#39;遵义市&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
265,&amp;#39;520400&amp;#39;,&amp;#39;安顺市&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
266,&amp;#39;522200&amp;#39;,&amp;#39;铜仁地区&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
267,&amp;#39;522300&amp;#39;,&amp;#39;黔西南布依族苗族自治州&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
268,&amp;#39;522400&amp;#39;,&amp;#39;毕节地区&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
269,&amp;#39;522600&amp;#39;,&amp;#39;黔东南苗族侗族自治州&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
270,&amp;#39;522700&amp;#39;,&amp;#39;黔南布依族苗族自治州&amp;#39;,&amp;#39;520000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
271,&amp;#39;530100&amp;#39;,&amp;#39;昆明市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
272,&amp;#39;530300&amp;#39;,&amp;#39;曲靖市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
273,&amp;#39;530400&amp;#39;,&amp;#39;玉溪市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
274,&amp;#39;530500&amp;#39;,&amp;#39;保山市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
275,&amp;#39;530600&amp;#39;,&amp;#39;昭通市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
276,&amp;#39;530700&amp;#39;,&amp;#39;丽江市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
277,&amp;#39;530800&amp;#39;,&amp;#39;思茅市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
278,&amp;#39;530900&amp;#39;,&amp;#39;临沧市&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
279,&amp;#39;532300&amp;#39;,&amp;#39;楚雄彝族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
280,&amp;#39;532500&amp;#39;,&amp;#39;红河哈尼族彝族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
281,&amp;#39;532600&amp;#39;,&amp;#39;文山壮族苗族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
282,&amp;#39;532800&amp;#39;,&amp;#39;西双版纳傣族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
283,&amp;#39;532900&amp;#39;,&amp;#39;大理白族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
284,&amp;#39;533100&amp;#39;,&amp;#39;德宏傣族景颇族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
285,&amp;#39;533300&amp;#39;,&amp;#39;怒江傈僳族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
286,&amp;#39;533400&amp;#39;,&amp;#39;迪庆藏族自治州&amp;#39;,&amp;#39;530000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
287,&amp;#39;540100&amp;#39;,&amp;#39;拉萨市&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
288,&amp;#39;542100&amp;#39;,&amp;#39;昌都地区&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
289,&amp;#39;542200&amp;#39;,&amp;#39;山南地区&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
290,&amp;#39;542300&amp;#39;,&amp;#39;日喀则地区&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
291,&amp;#39;542400&amp;#39;,&amp;#39;那曲地区&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
292,&amp;#39;542500&amp;#39;,&amp;#39;阿里地区&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
293,&amp;#39;542600&amp;#39;,&amp;#39;林芝地区&amp;#39;,&amp;#39;540000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
294,&amp;#39;610100&amp;#39;,&amp;#39;西安市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
295,&amp;#39;610200&amp;#39;,&amp;#39;铜川市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
296,&amp;#39;610300&amp;#39;,&amp;#39;宝鸡市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
297,&amp;#39;610400&amp;#39;,&amp;#39;咸阳市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
298,&amp;#39;610500&amp;#39;,&amp;#39;渭南市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
299,&amp;#39;610600&amp;#39;,&amp;#39;延安市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
300,&amp;#39;610700&amp;#39;,&amp;#39;汉中市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
301,&amp;#39;610800&amp;#39;,&amp;#39;榆林市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
302,&amp;#39;610900&amp;#39;,&amp;#39;安康市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
303,&amp;#39;611000&amp;#39;,&amp;#39;商洛市&amp;#39;,&amp;#39;610000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
304,&amp;#39;620100&amp;#39;,&amp;#39;兰州市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
305,&amp;#39;620200&amp;#39;,&amp;#39;嘉峪关市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
306,&amp;#39;620300&amp;#39;,&amp;#39;金昌市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
307,&amp;#39;620400&amp;#39;,&amp;#39;白银市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
308,&amp;#39;620500&amp;#39;,&amp;#39;天水市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
309,&amp;#39;620600&amp;#39;,&amp;#39;武威市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
310,&amp;#39;620700&amp;#39;,&amp;#39;张掖市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
311,&amp;#39;620800&amp;#39;,&amp;#39;平凉市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
312,&amp;#39;620900&amp;#39;,&amp;#39;酒泉市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
313,&amp;#39;621000&amp;#39;,&amp;#39;庆阳市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
314,&amp;#39;621100&amp;#39;,&amp;#39;定西市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
315,&amp;#39;621200&amp;#39;,&amp;#39;陇南市&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
316,&amp;#39;622900&amp;#39;,&amp;#39;临夏回族自治州&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
317,&amp;#39;623000&amp;#39;,&amp;#39;甘南藏族自治州&amp;#39;,&amp;#39;620000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
318,&amp;#39;630100&amp;#39;,&amp;#39;西宁市&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
319,&amp;#39;632100&amp;#39;,&amp;#39;海东地区&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
320,&amp;#39;632200&amp;#39;,&amp;#39;海北藏族自治州&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
321,&amp;#39;632300&amp;#39;,&amp;#39;黄南藏族自治州&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
322,&amp;#39;632500&amp;#39;,&amp;#39;海南藏族自治州&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
323,&amp;#39;632600&amp;#39;,&amp;#39;果洛藏族自治州&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
324,&amp;#39;632700&amp;#39;,&amp;#39;玉树藏族自治州&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
325,&amp;#39;632800&amp;#39;,&amp;#39;海西蒙古族藏族自治州&amp;#39;,&amp;#39;630000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
326,&amp;#39;640100&amp;#39;,&amp;#39;银川市&amp;#39;,&amp;#39;640000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
327,&amp;#39;640200&amp;#39;,&amp;#39;石嘴山市&amp;#39;,&amp;#39;640000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
328,&amp;#39;640300&amp;#39;,&amp;#39;吴忠市&amp;#39;,&amp;#39;640000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
329,&amp;#39;640400&amp;#39;,&amp;#39;固原市&amp;#39;,&amp;#39;640000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
330,&amp;#39;640500&amp;#39;,&amp;#39;中卫市&amp;#39;,&amp;#39;640000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
331,&amp;#39;650100&amp;#39;,&amp;#39;乌鲁木齐市&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
332,&amp;#39;650200&amp;#39;,&amp;#39;克拉玛依市&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
333,&amp;#39;652100&amp;#39;,&amp;#39;吐鲁番地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
334,&amp;#39;652200&amp;#39;,&amp;#39;哈密地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
335,&amp;#39;652300&amp;#39;,&amp;#39;昌吉回族自治州&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
336,&amp;#39;652700&amp;#39;,&amp;#39;博尔塔拉蒙古自治州&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
337,&amp;#39;652800&amp;#39;,&amp;#39;巴音郭楞蒙古自治州&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
338,&amp;#39;652900&amp;#39;,&amp;#39;阿克苏地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
339,&amp;#39;653000&amp;#39;,&amp;#39;克孜勒苏柯尔克孜自治州&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
340,&amp;#39;653100&amp;#39;,&amp;#39;喀什地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
341,&amp;#39;653200&amp;#39;,&amp;#39;和田地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
342,&amp;#39;654000&amp;#39;,&amp;#39;伊犁哈萨克自治州&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
343,&amp;#39;654200&amp;#39;,&amp;#39;塔城地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
344,&amp;#39;654300&amp;#39;,&amp;#39;阿勒泰地区&amp;#39;,&amp;#39;650000&amp;#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
345,&amp;#39;659000&amp;#39;,&amp;#39;省直辖行政单位&amp;#39;,&amp;#39;650000&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;</description>
      <content:encoded><![CDATA[<p>本文来源：<a href="http://blog.csdn.net/xielingxu/archive/2007/08/26/1759471.aspx">中国省份与城市数据插入 - xlx - CSDN博客</a></p>
<p>在Google找到这个，实在是爱不释手，就转过来了，很多项目都需要用到这些数据。</p>
<pre tabindex="0"><code>if exists (select * from sysobjects where id = OBJECT_ID(&#39;[province]&#39;) and OBJECTPROPERTY(id, &#39;IsUserTable&#39;) = 1)
DROP TABLE [province]

CREATE TABLE [province] (

[id] [int] NOT NULL,

[provinceID] [nvarchar] (12) NOT NULL,

[province] [nvarchar] (80) NOT NULL)

ALTER TABLE [province] WITH NOCHECK ADD CONSTRAINT [PK_province] PRIMARY KEY
NONCLUSTERED ( [id] )INSERT [province] ([id],[provinceID],[province]) VALUES (
1,&#39;110000&#39;,&#39;北京市&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 2,&#39;120000&#39;,&#39;天津市&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 3,&#39;130000&#39;,&#39;河北省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 4,&#39;140000&#39;,&#39;山西省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 5,&#39;150000&#39;,&#39;内蒙古自治区&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 6,&#39;210000&#39;,&#39;辽宁省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 7,&#39;220000&#39;,&#39;吉林省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 8,&#39;230000&#39;,&#39;黑龙江省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 9,&#39;310000&#39;,&#39;上海市&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 10,&#39;320000&#39;,&#39;江苏省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 11,&#39;330000&#39;,&#39;浙江省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 12,&#39;340000&#39;,&#39;安徽省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 13,&#39;350000&#39;,&#39;福建省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 14,&#39;360000&#39;,&#39;江西省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 15,&#39;370000&#39;,&#39;山东省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 16,&#39;410000&#39;,&#39;河南省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 17,&#39;420000&#39;,&#39;湖北省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 18,&#39;430000&#39;,&#39;湖南省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 19,&#39;440000&#39;,&#39;广东省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
20,&#39;450000&#39;,&#39;广西壮族自治区&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 21,&#39;460000&#39;,&#39;海南省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 22,&#39;500000&#39;,&#39;重庆市&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 23,&#39;510000&#39;,&#39;四川省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 24,&#39;520000&#39;,&#39;贵州省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 25,&#39;530000&#39;,&#39;云南省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 26,&#39;540000&#39;,&#39;西藏自治区&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 27,&#39;610000&#39;,&#39;陕西省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 28,&#39;620000&#39;,&#39;甘肃省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 29,&#39;630000&#39;,&#39;青海省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
30,&#39;640000&#39;,&#39;宁夏回族自治区&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
31,&#39;650000&#39;,&#39;新疆维吾尔自治区&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES ( 32,&#39;710000&#39;,&#39;台湾省&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
33,&#39;810000&#39;,&#39;香港特别行政区&#39;)

INSERT [province] ([id],[provinceID],[province]) VALUES (
34,&#39;820000&#39;,&#39;澳门特别行政区&#39;)

if exists (select * from sysobjects where id = OBJECT_ID(&#39;[area]&#39;) and
OBJECTPROPERTY(id, &#39;IsUserTable&#39;) = 1)

DROP TABLE [area]

CREATE TABLE [area] (

[id] [int] NOT NULL,

[cityID] [nvarchar] (12) NOT NULL,

[city] [nvarchar] (100) NOT NULL,

[father] [nvarchar] (12) NOT NULL)

ALTER TABLE [area] WITH NOCHECK ADD CONSTRAINT [PK_area] PRIMARY KEY
NONCLUSTERED ( [id] )INSERT [area] ([id],[cityID],[city],[father]) VALUES (
1,&#39;110100&#39;,&#39;市辖区&#39;,&#39;110000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
2,&#39;110200&#39;,&#39;县&#39;,&#39;110000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
3,&#39;120100&#39;,&#39;市辖区&#39;,&#39;120000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
4,&#39;120200&#39;,&#39;县&#39;,&#39;120000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
5,&#39;130100&#39;,&#39;石家庄市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
6,&#39;130200&#39;,&#39;唐山市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
7,&#39;130300&#39;,&#39;秦皇岛市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
8,&#39;130400&#39;,&#39;邯郸市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
9,&#39;130500&#39;,&#39;邢台市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
10,&#39;130600&#39;,&#39;保定市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
11,&#39;130700&#39;,&#39;张家口市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
12,&#39;130800&#39;,&#39;承德市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
13,&#39;130900&#39;,&#39;沧州市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
14,&#39;131000&#39;,&#39;廊坊市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
15,&#39;131100&#39;,&#39;衡水市&#39;,&#39;130000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
16,&#39;140100&#39;,&#39;太原市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
17,&#39;140200&#39;,&#39;大同市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
18,&#39;140300&#39;,&#39;阳泉市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
19,&#39;140400&#39;,&#39;长治市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
20,&#39;140500&#39;,&#39;晋城市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
21,&#39;140600&#39;,&#39;朔州市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
22,&#39;140700&#39;,&#39;晋中市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
23,&#39;140800&#39;,&#39;运城市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
24,&#39;140900&#39;,&#39;忻州市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
25,&#39;141000&#39;,&#39;临汾市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
26,&#39;141100&#39;,&#39;吕梁市&#39;,&#39;140000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
27,&#39;150100&#39;,&#39;呼和浩特市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
28,&#39;150200&#39;,&#39;包头市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
29,&#39;150300&#39;,&#39;乌海市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
30,&#39;150400&#39;,&#39;赤峰市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
31,&#39;150500&#39;,&#39;通辽市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
32,&#39;150600&#39;,&#39;鄂尔多斯市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
33,&#39;150700&#39;,&#39;呼伦贝尔市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
34,&#39;150800&#39;,&#39;巴彦淖尔市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
35,&#39;150900&#39;,&#39;乌兰察布市&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
36,&#39;152200&#39;,&#39;兴安盟&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
37,&#39;152500&#39;,&#39;锡林郭勒盟&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
38,&#39;152900&#39;,&#39;阿拉善盟&#39;,&#39;150000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
39,&#39;210100&#39;,&#39;沈阳市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
40,&#39;210200&#39;,&#39;大连市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
41,&#39;210300&#39;,&#39;鞍山市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
42,&#39;210400&#39;,&#39;抚顺市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
43,&#39;210500&#39;,&#39;本溪市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
44,&#39;210600&#39;,&#39;丹东市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
45,&#39;210700&#39;,&#39;锦州市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
46,&#39;210800&#39;,&#39;营口市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
47,&#39;210900&#39;,&#39;阜新市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
48,&#39;211000&#39;,&#39;辽阳市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
49,&#39;211100&#39;,&#39;盘锦市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
50,&#39;211200&#39;,&#39;铁岭市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
51,&#39;211300&#39;,&#39;朝阳市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
52,&#39;211400&#39;,&#39;葫芦岛市&#39;,&#39;210000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
53,&#39;220100&#39;,&#39;长春市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
54,&#39;220200&#39;,&#39;吉林市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
55,&#39;220300&#39;,&#39;四平市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
56,&#39;220400&#39;,&#39;辽源市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
57,&#39;220500&#39;,&#39;通化市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
58,&#39;220600&#39;,&#39;白山市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
59,&#39;220700&#39;,&#39;松原市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
60,&#39;220800&#39;,&#39;白城市&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
61,&#39;222400&#39;,&#39;延边朝鲜族自治州&#39;,&#39;220000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
62,&#39;230100&#39;,&#39;哈尔滨市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
63,&#39;230200&#39;,&#39;齐齐哈尔市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
64,&#39;230300&#39;,&#39;鸡西市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
65,&#39;230400&#39;,&#39;鹤岗市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
66,&#39;230500&#39;,&#39;双鸭山市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
67,&#39;230600&#39;,&#39;大庆市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
68,&#39;230700&#39;,&#39;伊春市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
69,&#39;230800&#39;,&#39;佳木斯市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
70,&#39;230900&#39;,&#39;七台河市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
71,&#39;231000&#39;,&#39;牡丹江市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
72,&#39;231100&#39;,&#39;黑河市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
73,&#39;231200&#39;,&#39;绥化市&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
74,&#39;232700&#39;,&#39;大兴安岭地区&#39;,&#39;230000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
75,&#39;310100&#39;,&#39;市辖区&#39;,&#39;310000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
76,&#39;310200&#39;,&#39;县&#39;,&#39;310000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
77,&#39;320100&#39;,&#39;南京市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
78,&#39;320200&#39;,&#39;无锡市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
79,&#39;320300&#39;,&#39;徐州市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
80,&#39;320400&#39;,&#39;常州市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
81,&#39;320500&#39;,&#39;苏州市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
82,&#39;320600&#39;,&#39;南通市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
83,&#39;320700&#39;,&#39;连云港市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
84,&#39;320800&#39;,&#39;淮安市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
85,&#39;320900&#39;,&#39;盐城市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
86,&#39;321000&#39;,&#39;扬州市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
87,&#39;321100&#39;,&#39;镇江市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
88,&#39;321200&#39;,&#39;泰州市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
89,&#39;321300&#39;,&#39;宿迁市&#39;,&#39;320000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
90,&#39;330100&#39;,&#39;杭州市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
91,&#39;330200&#39;,&#39;宁波市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
92,&#39;330300&#39;,&#39;温州市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
93,&#39;330400&#39;,&#39;嘉兴市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
94,&#39;330500&#39;,&#39;湖州市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
95,&#39;330600&#39;,&#39;绍兴市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
96,&#39;330700&#39;,&#39;金华市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
97,&#39;330800&#39;,&#39;衢州市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
98,&#39;330900&#39;,&#39;舟山市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
99,&#39;331000&#39;,&#39;台州市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
100,&#39;331100&#39;,&#39;丽水市&#39;,&#39;330000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
101,&#39;340100&#39;,&#39;合肥市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
102,&#39;340200&#39;,&#39;芜湖市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
103,&#39;340300&#39;,&#39;蚌埠市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
104,&#39;340400&#39;,&#39;淮南市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
105,&#39;340500&#39;,&#39;马鞍山市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
106,&#39;340600&#39;,&#39;淮北市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
107,&#39;340700&#39;,&#39;铜陵市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
108,&#39;340800&#39;,&#39;安庆市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
109,&#39;341000&#39;,&#39;黄山市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
110,&#39;341100&#39;,&#39;滁州市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
111,&#39;341200&#39;,&#39;阜阳市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
112,&#39;341300&#39;,&#39;宿州市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
113,&#39;341400&#39;,&#39;巢湖市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
114,&#39;341500&#39;,&#39;六安市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
115,&#39;341600&#39;,&#39;亳州市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
116,&#39;341700&#39;,&#39;池州市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
117,&#39;341800&#39;,&#39;宣城市&#39;,&#39;340000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
118,&#39;350100&#39;,&#39;福州市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
119,&#39;350200&#39;,&#39;厦门市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
120,&#39;350300&#39;,&#39;莆田市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
121,&#39;350400&#39;,&#39;三明市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
122,&#39;350500&#39;,&#39;泉州市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
123,&#39;350600&#39;,&#39;漳州市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
124,&#39;350700&#39;,&#39;南平市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
125,&#39;350800&#39;,&#39;龙岩市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
126,&#39;350900&#39;,&#39;宁德市&#39;,&#39;350000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
127,&#39;360100&#39;,&#39;南昌市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
128,&#39;360200&#39;,&#39;景德镇市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
129,&#39;360300&#39;,&#39;萍乡市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
130,&#39;360400&#39;,&#39;九江市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
131,&#39;360500&#39;,&#39;新余市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
132,&#39;360600&#39;,&#39;鹰潭市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
133,&#39;360700&#39;,&#39;赣州市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
134,&#39;360800&#39;,&#39;吉安市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
135,&#39;360900&#39;,&#39;宜春市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
136,&#39;361000&#39;,&#39;抚州市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
137,&#39;361100&#39;,&#39;上饶市&#39;,&#39;360000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
138,&#39;370100&#39;,&#39;济南市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
139,&#39;370200&#39;,&#39;青岛市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
140,&#39;370300&#39;,&#39;淄博市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
141,&#39;370400&#39;,&#39;枣庄市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
142,&#39;370500&#39;,&#39;东营市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
143,&#39;370600&#39;,&#39;烟台市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
144,&#39;370700&#39;,&#39;潍坊市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
145,&#39;370800&#39;,&#39;济宁市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
146,&#39;370900&#39;,&#39;泰安市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
147,&#39;371000&#39;,&#39;威海市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
148,&#39;371100&#39;,&#39;日照市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
149,&#39;371200&#39;,&#39;莱芜市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
150,&#39;371300&#39;,&#39;临沂市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
151,&#39;371400&#39;,&#39;德州市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
152,&#39;371500&#39;,&#39;聊城市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
153,&#39;371600&#39;,&#39;滨州市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
154,&#39;371700&#39;,&#39;荷泽市&#39;,&#39;370000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
155,&#39;410100&#39;,&#39;郑州市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
156,&#39;410200&#39;,&#39;开封市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
157,&#39;410300&#39;,&#39;洛阳市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
158,&#39;410400&#39;,&#39;平顶山市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
159,&#39;410500&#39;,&#39;安阳市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
160,&#39;410600&#39;,&#39;鹤壁市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
161,&#39;410700&#39;,&#39;新乡市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
162,&#39;410800&#39;,&#39;焦作市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
163,&#39;410900&#39;,&#39;濮阳市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
164,&#39;411000&#39;,&#39;许昌市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
165,&#39;411100&#39;,&#39;漯河市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
166,&#39;411200&#39;,&#39;三门峡市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
167,&#39;411300&#39;,&#39;南阳市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
168,&#39;411400&#39;,&#39;商丘市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
169,&#39;411500&#39;,&#39;信阳市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
170,&#39;411600&#39;,&#39;周口市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
171,&#39;411700&#39;,&#39;驻马店市&#39;,&#39;410000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
172,&#39;420100&#39;,&#39;武汉市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
173,&#39;420200&#39;,&#39;黄石市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
174,&#39;420300&#39;,&#39;十堰市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
175,&#39;420500&#39;,&#39;宜昌市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
176,&#39;420600&#39;,&#39;襄樊市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
177,&#39;420700&#39;,&#39;鄂州市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
178,&#39;420800&#39;,&#39;荆门市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
179,&#39;420900&#39;,&#39;孝感市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
180,&#39;421000&#39;,&#39;荆州市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
181,&#39;421100&#39;,&#39;黄冈市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
182,&#39;421200&#39;,&#39;咸宁市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
183,&#39;421300&#39;,&#39;随州市&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
184,&#39;422800&#39;,&#39;恩施土家族苗族自治州&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
185,&#39;429000&#39;,&#39;省直辖行政单位&#39;,&#39;420000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
186,&#39;430100&#39;,&#39;长沙市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
187,&#39;430200&#39;,&#39;株洲市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
188,&#39;430300&#39;,&#39;湘潭市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
189,&#39;430400&#39;,&#39;衡阳市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
190,&#39;430500&#39;,&#39;邵阳市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
191,&#39;430600&#39;,&#39;岳阳市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
192,&#39;430700&#39;,&#39;常德市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
193,&#39;430800&#39;,&#39;张家界市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
194,&#39;430900&#39;,&#39;益阳市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
195,&#39;431000&#39;,&#39;郴州市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
196,&#39;431100&#39;,&#39;永州市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
197,&#39;431200&#39;,&#39;怀化市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
198,&#39;431300&#39;,&#39;娄底市&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
199,&#39;433100&#39;,&#39;湘西土家族苗族自治州&#39;,&#39;430000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
200,&#39;440100&#39;,&#39;广州市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
201,&#39;440200&#39;,&#39;韶关市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
202,&#39;440300&#39;,&#39;深圳市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
203,&#39;440400&#39;,&#39;珠海市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
204,&#39;440500&#39;,&#39;汕头市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
205,&#39;440600&#39;,&#39;佛山市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
206,&#39;440700&#39;,&#39;江门市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
207,&#39;440800&#39;,&#39;湛江市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
208,&#39;440900&#39;,&#39;茂名市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
209,&#39;441200&#39;,&#39;肇庆市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
210,&#39;441300&#39;,&#39;惠州市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
211,&#39;441400&#39;,&#39;梅州市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
212,&#39;441500&#39;,&#39;汕尾市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
213,&#39;441600&#39;,&#39;河源市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
214,&#39;441700&#39;,&#39;阳江市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
215,&#39;441800&#39;,&#39;清远市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
216,&#39;441900&#39;,&#39;东莞市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
217,&#39;442000&#39;,&#39;中山市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
218,&#39;445100&#39;,&#39;潮州市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
219,&#39;445200&#39;,&#39;揭阳市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
220,&#39;445300&#39;,&#39;云浮市&#39;,&#39;440000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
221,&#39;450100&#39;,&#39;南宁市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
222,&#39;450200&#39;,&#39;柳州市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
223,&#39;450300&#39;,&#39;桂林市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
224,&#39;450400&#39;,&#39;梧州市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
225,&#39;450500&#39;,&#39;北海市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
226,&#39;450600&#39;,&#39;防城港市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
227,&#39;450700&#39;,&#39;钦州市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
228,&#39;450800&#39;,&#39;贵港市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
229,&#39;450900&#39;,&#39;玉林市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
230,&#39;451000&#39;,&#39;百色市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
231,&#39;451100&#39;,&#39;贺州市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
232,&#39;451200&#39;,&#39;河池市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
233,&#39;451300&#39;,&#39;来宾市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
234,&#39;451400&#39;,&#39;崇左市&#39;,&#39;450000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
235,&#39;460100&#39;,&#39;海口市&#39;,&#39;460000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
236,&#39;460200&#39;,&#39;三亚市&#39;,&#39;460000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
237,&#39;469000&#39;,&#39;省直辖县级行政单位&#39;,&#39;460000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
238,&#39;500100&#39;,&#39;市辖区&#39;,&#39;500000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
239,&#39;500200&#39;,&#39;县&#39;,&#39;500000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
240,&#39;500300&#39;,&#39;市&#39;,&#39;500000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
241,&#39;510100&#39;,&#39;成都市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
242,&#39;510300&#39;,&#39;自贡市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
243,&#39;510400&#39;,&#39;攀枝花市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
244,&#39;510500&#39;,&#39;泸州市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
245,&#39;510600&#39;,&#39;德阳市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
246,&#39;510700&#39;,&#39;绵阳市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
247,&#39;510800&#39;,&#39;广元市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
248,&#39;510900&#39;,&#39;遂宁市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
249,&#39;511000&#39;,&#39;内江市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
250,&#39;511100&#39;,&#39;乐山市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
251,&#39;511300&#39;,&#39;南充市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
252,&#39;511400&#39;,&#39;眉山市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
253,&#39;511500&#39;,&#39;宜宾市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
254,&#39;511600&#39;,&#39;广安市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
255,&#39;511700&#39;,&#39;达州市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
256,&#39;511800&#39;,&#39;雅安市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
257,&#39;511900&#39;,&#39;巴中市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
258,&#39;512000&#39;,&#39;资阳市&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
259,&#39;513200&#39;,&#39;阿坝藏族羌族自治州&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
260,&#39;513300&#39;,&#39;甘孜藏族自治州&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
261,&#39;513400&#39;,&#39;凉山彝族自治州&#39;,&#39;510000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
262,&#39;520100&#39;,&#39;贵阳市&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
263,&#39;520200&#39;,&#39;六盘水市&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
264,&#39;520300&#39;,&#39;遵义市&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
265,&#39;520400&#39;,&#39;安顺市&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
266,&#39;522200&#39;,&#39;铜仁地区&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
267,&#39;522300&#39;,&#39;黔西南布依族苗族自治州&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
268,&#39;522400&#39;,&#39;毕节地区&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
269,&#39;522600&#39;,&#39;黔东南苗族侗族自治州&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
270,&#39;522700&#39;,&#39;黔南布依族苗族自治州&#39;,&#39;520000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
271,&#39;530100&#39;,&#39;昆明市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
272,&#39;530300&#39;,&#39;曲靖市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
273,&#39;530400&#39;,&#39;玉溪市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
274,&#39;530500&#39;,&#39;保山市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
275,&#39;530600&#39;,&#39;昭通市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
276,&#39;530700&#39;,&#39;丽江市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
277,&#39;530800&#39;,&#39;思茅市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
278,&#39;530900&#39;,&#39;临沧市&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
279,&#39;532300&#39;,&#39;楚雄彝族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
280,&#39;532500&#39;,&#39;红河哈尼族彝族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
281,&#39;532600&#39;,&#39;文山壮族苗族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
282,&#39;532800&#39;,&#39;西双版纳傣族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
283,&#39;532900&#39;,&#39;大理白族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
284,&#39;533100&#39;,&#39;德宏傣族景颇族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
285,&#39;533300&#39;,&#39;怒江傈僳族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
286,&#39;533400&#39;,&#39;迪庆藏族自治州&#39;,&#39;530000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
287,&#39;540100&#39;,&#39;拉萨市&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
288,&#39;542100&#39;,&#39;昌都地区&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
289,&#39;542200&#39;,&#39;山南地区&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
290,&#39;542300&#39;,&#39;日喀则地区&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
291,&#39;542400&#39;,&#39;那曲地区&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
292,&#39;542500&#39;,&#39;阿里地区&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
293,&#39;542600&#39;,&#39;林芝地区&#39;,&#39;540000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
294,&#39;610100&#39;,&#39;西安市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
295,&#39;610200&#39;,&#39;铜川市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
296,&#39;610300&#39;,&#39;宝鸡市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
297,&#39;610400&#39;,&#39;咸阳市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
298,&#39;610500&#39;,&#39;渭南市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
299,&#39;610600&#39;,&#39;延安市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
300,&#39;610700&#39;,&#39;汉中市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
301,&#39;610800&#39;,&#39;榆林市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
302,&#39;610900&#39;,&#39;安康市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
303,&#39;611000&#39;,&#39;商洛市&#39;,&#39;610000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
304,&#39;620100&#39;,&#39;兰州市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
305,&#39;620200&#39;,&#39;嘉峪关市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
306,&#39;620300&#39;,&#39;金昌市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
307,&#39;620400&#39;,&#39;白银市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
308,&#39;620500&#39;,&#39;天水市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
309,&#39;620600&#39;,&#39;武威市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
310,&#39;620700&#39;,&#39;张掖市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
311,&#39;620800&#39;,&#39;平凉市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
312,&#39;620900&#39;,&#39;酒泉市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
313,&#39;621000&#39;,&#39;庆阳市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
314,&#39;621100&#39;,&#39;定西市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
315,&#39;621200&#39;,&#39;陇南市&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
316,&#39;622900&#39;,&#39;临夏回族自治州&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
317,&#39;623000&#39;,&#39;甘南藏族自治州&#39;,&#39;620000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
318,&#39;630100&#39;,&#39;西宁市&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
319,&#39;632100&#39;,&#39;海东地区&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
320,&#39;632200&#39;,&#39;海北藏族自治州&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
321,&#39;632300&#39;,&#39;黄南藏族自治州&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
322,&#39;632500&#39;,&#39;海南藏族自治州&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
323,&#39;632600&#39;,&#39;果洛藏族自治州&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
324,&#39;632700&#39;,&#39;玉树藏族自治州&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
325,&#39;632800&#39;,&#39;海西蒙古族藏族自治州&#39;,&#39;630000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
326,&#39;640100&#39;,&#39;银川市&#39;,&#39;640000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
327,&#39;640200&#39;,&#39;石嘴山市&#39;,&#39;640000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
328,&#39;640300&#39;,&#39;吴忠市&#39;,&#39;640000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
329,&#39;640400&#39;,&#39;固原市&#39;,&#39;640000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
330,&#39;640500&#39;,&#39;中卫市&#39;,&#39;640000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
331,&#39;650100&#39;,&#39;乌鲁木齐市&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
332,&#39;650200&#39;,&#39;克拉玛依市&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
333,&#39;652100&#39;,&#39;吐鲁番地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
334,&#39;652200&#39;,&#39;哈密地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
335,&#39;652300&#39;,&#39;昌吉回族自治州&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
336,&#39;652700&#39;,&#39;博尔塔拉蒙古自治州&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
337,&#39;652800&#39;,&#39;巴音郭楞蒙古自治州&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
338,&#39;652900&#39;,&#39;阿克苏地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
339,&#39;653000&#39;,&#39;克孜勒苏柯尔克孜自治州&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
340,&#39;653100&#39;,&#39;喀什地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
341,&#39;653200&#39;,&#39;和田地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
342,&#39;654000&#39;,&#39;伊犁哈萨克自治州&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
343,&#39;654200&#39;,&#39;塔城地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
344,&#39;654300&#39;,&#39;阿勒泰地区&#39;,&#39;650000&#39;)

INSERT [area] ([id],[cityID],[city],[father]) VALUES (
345,&#39;659000&#39;,&#39;省直辖行政单位&#39;,&#39;650000&#39;)
</code></pre>]]></content:encoded>
    </item>
    <item>
      <title>MySQL Command Line Client乱码问题及解决方案</title>
      <link>https://blog.alswl.com/2009/07/mysql-command-line-client-garbled-problems-and-solutions/</link>
      <pubDate>Mon, 06 Jul 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/07/mysql-command-line-client-garbled-problems-and-solutions/</guid>
      <description>&lt;p&gt;以前用MySQL时候都是可视化界面，如MySQL Admin使用，现在学着使用MySQL Command Line client，初次接触，就遇到乱码问题。&lt;/p&gt;
&lt;p&gt;乱码是中文字符串的，Google后，找到一些解决方案。摘录如下：&lt;/p&gt;
&lt;p&gt;引用自今天去祸害哪家的闺女呢？&amp;lt;&lt;a href=&#34;http://leonel.javaeye.com/blog/315090&#34;&gt;猛击这里打开&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;1:改变数据库的默认编码配置，在MYSQL的安装目录中，找到my.ini，修改默认编&lt;/p&gt;
&lt;p&gt;码为：default-character-set=utf8&lt;/p&gt;
&lt;p&gt;2:建立数据库时，CREATE DATABASE ms_db CHARACTER SET utf8 COLLATE&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>以前用MySQL时候都是可视化界面，如MySQL Admin使用，现在学着使用MySQL Command Line client，初次接触，就遇到乱码问题。</p>
<p>乱码是中文字符串的，Google后，找到一些解决方案。摘录如下：</p>
<p>引用自今天去祸害哪家的闺女呢？&lt;<a href="http://leonel.javaeye.com/blog/315090">猛击这里打开</a>&gt;</p>
<p>1:改变数据库的默认编码配置，在MYSQL的安装目录中，找到my.ini，修改默认编</p>
<p>码为：default-character-set=utf8</p>
<p>2:建立数据库时，CREATE DATABASE ms_db CHARACTER SET utf8 COLLATE</p>
<p>utf8_general_ci;</p>
<p>3:执行脚本：指定编码格式set names utf8(注意，不是UTF-8)</p>
<p>4:如果你采用的是外部接入的方式，在连接中确定请求的编码格式如：</p>
<p>jdbc:mysql://localhost:3306 /ms_db?</p>
<p>useUnicode=true&amp;characterEncoding=UTF-8(不要出现任何空格，否则出错)</p>
<p>我使用的是第3种方法，由于我的数据库是Hibernate生成的，所以编码集改为utf8依然乱码，使用gbk就可以了。</p>
]]></content:encoded>
    </item>
    <item>
      <title>MYSQL数据类型长度常规的建库策略</title>
      <link>https://blog.alswl.com/2009/06/mysql-data-type-of-the-length-of-conventional-library-strategy/</link>
      <pubDate>Thu, 25 Jun 2009 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2009/06/mysql-data-type-of-the-length-of-conventional-library-strategy/</guid>
      <description>&lt;p&gt;无论是在小得可怜的免费数据库空间或是大型电子商务网站，合理的设计表结构、充分利用空间是十分必要的。这就要求我们对数据库系统的常用数据类型有充分的认识。下面我
就将我的一点心得写出来跟大家分享。&lt;/p&gt;
&lt;h3 id=&#34;一数字类型&#34;&gt;一、数字类型&lt;/h3&gt;
&lt;p&gt;数字类型按照我的分类方法分为三类：整数类、小数类和数字类。&lt;/p&gt;
&lt;p&gt;我所谓的「数字类」，就是指DECIMAL和NUMERIC，它们是同一种类型。它严格的说不是一种数字类型，因为他们实际上是将数字以字符串形式保存的；他的值的每
一位（包括小数点）占一个字节的存储空间，因此这种类型耗费空间比较大。但是它的一个突出的优点是小数的位数固定，在运算中不会「失真」，所以比较适合用于「价格」、
「金额」这样对精度要求不高但准确度要求非常高的字段。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>无论是在小得可怜的免费数据库空间或是大型电子商务网站，合理的设计表结构、充分利用空间是十分必要的。这就要求我们对数据库系统的常用数据类型有充分的认识。下面我
就将我的一点心得写出来跟大家分享。</p>
<h3 id="一数字类型">一、数字类型</h3>
<p>数字类型按照我的分类方法分为三类：整数类、小数类和数字类。</p>
<p>我所谓的「数字类」，就是指DECIMAL和NUMERIC，它们是同一种类型。它严格的说不是一种数字类型，因为他们实际上是将数字以字符串形式保存的；他的值的每
一位（包括小数点）占一个字节的存储空间，因此这种类型耗费空间比较大。但是它的一个突出的优点是小数的位数固定，在运算中不会「失真」，所以比较适合用于「价格」、
「金额」这样对精度要求不高但准确度要求非常高的字段。</p>
<p>小数类，即浮点数类型，根据精度的不同，有 FLOAT（单精度）和DOUBLE（双精度）两种。它们的优势是精确度，FLOAT可以表示绝对值非常小、小到约
1.17E- 38 （0.000&hellip;0117， 小数点后面有37个零）的小数，而DOUBLE更是可以表示绝对值小到约 2.22E- 308
（0.000&hellip;0222， 小数点后面有307个零）的小数。FLOAT类型和DOUBLE类型占用存储空间分别是4字节和8字节。如果需要用到小数的字段，精度
要求不高的，当然用FLOAT了！可是说句实在话，我们「民用」的数据，哪有要求精度那么高的呢？这两种类型至今我没有用过——我还没有遇到适合于使用它们的事例。</p>
<p>用的最多的，最值得精打细算的，是整数类型。从只占一个字节存储空间的TINYINT到占8个字节的
BIGINT，挑选一个「够用」并且占用存储空间最小的类型是设计数据库时应该考虑的。TINYINT、SMALLINT、MEDIUMINT、INT和
BIGINT占用存储空间分别为1字节、2字节、3字节、4字节和8字节，就无符号的整数而言，这些类型能表示的最大整数分别为255、65535、 1677721
5、4294967295和18446744073709551615。如果用来保存用户的年龄（举例来说，数据库中保存年龄是不可取的），用TINYINT就够了；
九城的《纵横》里，各项技能值，用SMALLINT也够了；如果要用作一个肯定不会超过16000000行的表的
AUTO_INCREMENT的IDENTIFY字段，当然用 MEDIUMINT 不用 INT
，试想，每行节约一个字节，16000000行可以节约10兆多呢！</p>
<h3 id="二日期时间类型">二、日期时间类型</h3>
<p>日期和时间类型比较简单，无非是 DATE、TIME、DATETIME、TIMESTAMP
和YEAR等几个类型。只对日期敏感，而对时间没有要求的字段，就用DATE而不用DATETIME是不用说的了；单独使用时间的情况也时有发生——使用
TIME；但最多用到的还是用DATETIME。在日期时间类型上没有什么文章可做，这里就不再详述。</p>
<h3 id="三字符串类型">三、字符（串）类型</h3>
<p>不要以为字符类型就是 CHAR！CHAR和VARCHAR的区别在于CHAR是固定长度，只要你定义一个字段是CHAR(10),那么不论你存储的数据是否达到了1
0个字节，它都要占去10个字节的空间；而VARVHAR则是可变长度的，如果一个字段可能的值是不固定长度的，我们只知道它不可能超过10个字符，把它定义为
VARCHAR(10)是最合算的，VARCHAR 类型的实际长度是它的值的(实际长度+1)。为什么「+1」呢？这一个字节用于保存实际使用了多大的长度呀！从这
个「+1」中也应该看到，如果一个字段，它的可能值最长是10个字符，而多数情况下也就是用到了10个字符时，用
VARCHAR就不合算了：因为在多数情况下，实际占用空间是11个字节，比用CHAR(10)还多占用一个字节！</p>
<p>举个例子，就是一个存储股票名称和代码的表，股票名称绝大部分是四个字的，即8个字节；股票代码，上海的是六位数字，深圳的是四位数字。这些都是固定长度的，股票名称
当然要用CHAR(8 )；股票代码虽然是不固定长度，但如果使用VARVHAR(6)，一个深圳的股票代码实际占用空间是5个字节，而一个上海的股票代码要占用7个
字节！考虑到上海的股票数目比深圳的多，那么用VARCHAR(6)就不如CHAR(6)合算了。</p>
<p>虽然一个CHAR或
VARVHAR的最大长度可以到255，我认为大于20的CHAR是几乎用不到的——很少有大于20个字节长度的固定长度的东东吧？不是固定长度的就用 VARCHA
R！大于100的VARCHAR也是几乎用不到的——比这更大的用TEXT就好了。TINYTEXT，最大长度为255，占用空间也是(实际长度+1)；TEXT，最
大长度65535，占用空间是(实际长度+2)；MEDIUMTEXT，最大长度16777215，占用空间是(实际长度+3)；LONGTEXT，最大长度4294
967295，占用空间是(实际长度+4)。为什么「+1」？「+2」？「+3」？「+4」？你要是还不知道就该打PP了。这些可以用在论坛啊、新闻啊，什么的，用来
保存文章的正文。根据实际情况的不同，选择从小到大的不同类型。</p>
<h3 id="四枚举和集合类型">四、枚举和集合类型</h3>
<p>枚举（ENUM）类型，最多可以定义65535种不同的字符串从中做出选择，只能并且必须选择其中一种，占用存储空间是一个或两个字节，由枚举值的数目决定；集合（S
ET）类型，最多可以有64个成员，可以选择其中的零个到不限定的多个，占用存储空间是一个到八个字节，由集合可能的成员数目决定。</p>
<p>举个例子来说，在SQLServer中，你可以节约到用一个Bit类型来表示性别（男/女），但MySQL没有Bit，用TINTINT？不，可以用
ENUM(帅哥,美眉)！只有两种选择，所以只需一个字节——跟TINYINT一样大，但却可以直接用字符串帅哥和美眉来存取。真是太方便啦！</p>
<p>好了，MySQL的数据类型介绍得差不多，我的建库策略也随着介绍数据类型介绍给大家一些。但这只是其中一部分，篇幅有限，不能再细说；其他的，就靠各人在对数据类型
理解的基础上，多多实践、多多讨论。</p>
<p>转载自YD631.com&lt;<a href="http://www.yd631.com/blog/article.asp?id=179">猛击这里打开</a>&gt;，原始作者信息不详，
感谢该作者的文章。</p>
]]></content:encoded>
    </item>
    <item>
      <title>mysql 数据库导出/导入</title>
      <link>https://blog.alswl.com/2008/10/mysql-database-export-import/</link>
      <pubDate>Thu, 23 Oct 2008 00:00:00 +0800</pubDate>
      <guid>https://blog.alswl.com/2008/10/mysql-database-export-import/</guid>
      <description>&lt;p&gt;正在学JSP，用的TomCat和MySQL，没有用CSV控制，所以数据库靠导出导入&lt;/p&gt;
&lt;p&gt;导出：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd bin;
mysqldump -uroot -proot xxx &amp;gt; xxx.sql;
导入：
cd bin;
create xxx;
source xxx.sql;
&lt;/code&gt;&lt;/pre&gt;</description>
      <content:encoded><![CDATA[<p>正在学JSP，用的TomCat和MySQL，没有用CSV控制，所以数据库靠导出导入</p>
<p>导出：</p>
<pre tabindex="0"><code>cd bin;
mysqldump -uroot -proot xxx &gt; xxx.sql;
导入：
cd bin;
create xxx;
source xxx.sql;
</code></pre>]]></content:encoded>
    </item>
  </channel>
</rss>
