<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>webfront on Log4D</title>
    <link>https://blog.alswl.com/tags/webfront/</link>
    <description>Recent content in webfront on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 May 2012 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/tags/webfront/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《HTML5 实战 WebApp 阅读应用 – Shiu》幻灯片</title>
      <link>https://blog.alswl.com/2012/05/shiu-slide-show/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/05/shiu-slide-show/</guid>
      <description>今天去南京 HTML5 沙龙分享了一个幻灯片，讲 Shiu 的开发，同时也分享在这里。
Shiu 的源码托管在 Github，地址是 https://github.com/alswl/shiu 感兴趣可以去看看。
噢，Shiu (/ʃʐy/)，中文音标 (shi rü))，是一款基于 WebApp 的阅读应用。</description>
    </item>
    
    <item>
      <title>jQuery.html()在IE下面错误解决办法</title>
      <link>https://blog.alswl.com/2011/11/jquery-html-in-ie6/</link>
      <pubDate>Mon, 07 Nov 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/11/jquery-html-in-ie6/</guid>
      <description>今天遇到一个jQuery的.html()设定错误问题，FF和Chrome下面都能够正常工作，而IE下面却失败。
检查之后，我把问题定性到jQuery.html(html)设定在IE下有问题。当设定html文本中含有空行、空格、Tab时候，会出现异常中断，导致html ()设定失败，但是又不会引发js错误。
狗日的IE！
下文是Google来的参考文章：使用 jQuery .html() 得到的string时,
在IE中出现错误的解决方法
使用 jQuery 的 .html() 函数( 使用 .text() 也类似 )得到元素内的值使用时，在IE6中出错，FireFox 中正常。
基本代码如下:
&amp;lt;ul class=&amp;quot;demo&amp;quot;&amp;gt; &amp;lt;li&amp;gt;easeInQuad&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;easeOutQuad&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;easeInOutQuad&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; $(&#39;.demo li&#39;).each(function(){ var action = $(this).html(); $(this).animate({&#39;height&#39;: &#39;-=50px&#39; }, 2000, action); }); debug时将 action 直接用字符串初始化:
//........... var action = &#39;easeInQuad&#39;; //........... 在IE6中正常执行。用 typeof 测 .html() 的值确实是 string。所以猜测是 .htlm() 在 IE6
中使用时会有一些不干净的东西。。。所以使用 $.trim() 函数来把它清洁一下，就可以解决这个问题:
//........... var action = $.trim( $(this).html() ); //........... 可是究竟是什么不干净的东西呢？还是因为别的原因？
jQuery 文档中关于 .</description>
    </item>
    
    <item>
      <title>jEmotion</title>
      <link>https://blog.alswl.com/2011/11/jemotion/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/11/jemotion/</guid>
      <description>重要通知：Log4D的域名由 http://dddspace.com 迁移到
http://log4d.com 。 订阅地址现在改为
http://log4d.com/feed 和
http://feeds.feedburner.com/dddspace
。（FeedBurner的地址未发生变化）
白天工作时候需要一个功能，我搜了一下Google，没有找到合适的，就花了半天时间写了一个jQuery插件jEmotion。
jEmotion的主要功能是用来给输入框加入转义之后的表情代码，然后在页面显示时候可以重新将表情代码转回表情图片。
jEmotion的代码托管在GitHub上，地址是
https://github.com/alswl/jEmotion 。
demo地址是 [http://lab.log4d.com/javascript/jEmotion/demo.html](http://lab.log4d.
com/javascript/jEmotion/demo.html) 。
这是我写的第一个jQuery插件，写完还蛮兴奋的，哈哈。</description>
    </item>
    
    <item>
      <title>网页渐进式载入图片</title>
      <link>https://blog.alswl.com/2011/09/interlace-progressive-image/</link>
      <pubDate>Fri, 23 Sep 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/09/interlace-progressive-image/</guid>
      <description>Question 为什么有的网页打开图片是从上到下逐行打开，有的则是先显示低分辨率图片再逐渐加入细节？
Answer 感谢@吴亚桐
回答给我找到线索，感谢提问者的好问题，我为这个问题曾经困惑了多年。这种渐进式载入方法容易和其他渐进式载入混淆。
我这里小总结一下几种渐进式载入办法。
js 延迟载入，当浏览器滚动条拉到下面时候才显示出图片，参考
http://www.neoease.com/lazy-load-jquery-plugin-delay-load-image/ 使用两张一大一小照片，小的先显示，等大图片完全下载好之后再载入。参考
http://blog.rexsong.com/?p=929 图片渐进式技术，也就是本问题。 大图片切割成小图片，逐个载入，这是互联网早期方式，现在已经几乎看不到了。
太浪费http连接了。 下面是答案：
浏览器下载图片的时候渐进式载入，这样下载完一张图可以看到它的样子，
只不过只是不清楚的图，这样可以减少你等待看它的时间。
实际上有两种方式可以实现这种渐进式效果，一种是图像隔行扫描（Interlace），
中文可以成为交错，另外一种叫做图像渐进式扫描（Progressive）。
隔行扫描可以在gif/png中实现。隔行GIF是指图像文件是按照隔行的方式来显示的，
比如先出奇数行，再出偶数行，造成图像是逐渐变清楚的。将图像文件保存成隔行
GIF 格式的方法是，在 Photoshop中进行保存时，选择&amp;quot;Interlaced&amp;quot;
（不要选择&amp;quot;Normal&amp;quot;），在Paint Shop Pro中进行保存时，点击&amp;quot;Option…&amp;ldquo;按钮，
选择&amp;quot;Interlaced&amp;rdquo;（不要选择&amp;quot;Non Interlaced&amp;quot;）。 渐进式扫描在在jpg中实现。逐级JPG文件可以让图像先以比较模糊的形式显示，
随着图像文件数据不断从网上传过来，图像会逐渐变清晰。
这样做的好处是图像可以尽快地显示出来，虽然图像不很完美，
但是却让浏览者看到了希望，并且图像在不断地变好。将图像文件保存成逐级
JPG格式的方法是，在Photoshop中进行保存时，选择&amp;quot;Progressive&amp;quot;，在
Paint Shop Pro 中进行保存时，点击&amp;quot;Option…&amp;ldquo;按钮，选择&amp;quot;Progressive encoding&amp;rdquo;。 参考 http://blog.csdn.net/greenerycn/article/details/1458231 http://www.libpng.org/pub/png/pngintro.html </description>
    </item>
    
    <item>
      <title>简单输入提示框实现</title>
      <link>https://blog.alswl.com/2011/08/auto-clean-input/</link>
      <pubDate>Thu, 18 Aug 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/08/auto-clean-input/</guid>
      <description>早期的输入框提示是这样的（via baidu）
左边一个 label ，右边一个输入框。
比较现代的方式是（via Discuz!）
更漂亮的方式是（via 点点）
登录提示信息是放在输入框里面，可以减少文字干扰，我也想在自己手头的小项目中实现这种效果。
我需要达到几个要求：
提示信息是可以暂存的，即用户的输入在清空之后，还能够显示原来的提示信息 只需为 text / textarea 添加一个 class 即可实现效果 不修改 DOM 节点，避免影响上下文选择器 为了实现效果，我需要将提示信息暂存到某个地方。有3个地方可供选择： js 全局变量、输入框自定义属性、上下文 DOM 节点。
js 全局变量比较难控制元素标识，并不是每个元素都可以精准的用 id 标记；输入框自定义属性会破坏语义；在上下文加入节点会破坏 DOM 树。
权衡之后，我选择了使用 输入框自定义属性实现。
demo 在这里。
封装的方法代码如下
$(&#39;.auto_clean&#39;).blur(function() { if ($.trim($(this).val()) === &#39;&#39;) { $(this).val($(this).attr(&#39;message&#39;)); } }).focus(function() { if ($(this).attr(&#39;message&#39;) === undefined) { $(this).attr(&#39;message&#39;, $(this).val()); } if ($(this).val() === $(this).attr(&#39;message&#39;)) { $(this).val(&#39;&#39;); } }); }); 使用方法如下
&amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;auto_clean&amp;quot; value=&amp;quot;搜索用户&amp;quot; /&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;textarea class=&amp;quot;auto_clean&amp;quot;&amp;gt;请在这里输入&amp;lt;/textarea&amp;gt; update2011/08/25： 感谢 @行者 提醒，使用 html5</description>
    </item>
    
    <item>
      <title>get json failed in IE</title>
      <link>https://blog.alswl.com/2011/08/get-json-failed-in-ie/</link>
      <pubDate>Sun, 14 Aug 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/08/get-json-failed-in-ie/</guid>
      <description>半夜在开工打补丁，某个 bug 是 Firefox 下面能接受到 Ajax 回调请求，而 IE 不行。
解决方案在[http://stackoverflow.com/questions/425854/jquery-ajax-request-failing-
in-ie](http://stackoverflow.com/questions/425854/jquery-ajax-request-failing-
in-ie)
缘由是由于 IE 不能正常识别application/json; charset=utf8
于是修改为response.headers[&#39;Content-Type&#39;] = &#39;application/json&#39;
狗日的 IE！</description>
    </item>
    
    <item>
      <title>Html元素事件查看器Eventbug</title>
      <link>https://blog.alswl.com/2011/07/eventbug/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/07/eventbug/</guid>
      <description>Chrome的开发者工具里面有一个小功能：查看当前元素的Event，比如onclick/onblur等事件。
一直想在Firefox里面也找到类似的插件，今天正好看到这么一个好东西，叫做EventBug。
官方的介绍如下
Eventbug是一款能够列出所有绑定事件的Firebug扩展，它将这些事件按事件类型排列。
需要Firebug1.5 源码沿用Firebug的BSD风格协议 请使用Firebug的Bug报告列表来提交问题 请使用Firebug的新闻列表来提出问题 作者：John J. Barton, Jan Odvarko
测试发现在Firefox5下面没有问题。
这么一款插件在调试js或者对别人的页面做一些js hack特别有用，强烈推荐之。
Eventbug官方地址 Eventbug介绍博文（En） Eventbug下载链接 </description>
    </item>
    
    <item>
      <title>7条大型网站设计和维护的关键技巧[译文]</title>
      <link>https://blog.alswl.com/2010/07/7-crucial-tips-for-designing-and-maintaining-a-large-site/</link>
      <pubDate>Sat, 17 Jul 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/07/7-crucial-tips-for-designing-and-maintaining-a-large-site/</guid>
      <description>原文出处：[7 Crucial Tips for Designing and Maintaining a Large Site | Nettuts+](http://net.tutsplus.com/articles/general/7-crucial-tips-for-
designing-and-maintaining-a-large-site/)
译者：alswl
以下为译文
项目范围和规模各不相同，他们带来的挑战各不相同一样。作为一个独立的网页设计师，我最大的职责就是负责FlashDen。随着成千上万的活动用户聊天，上传和购物，
网站处理着大额的金钱和巨大的流量。
设计，重构，维护和开发团队的工作给了我一些能使事情变得更容易的用用的见解和技巧。而且，就在昨天，我们开始了对网站最大的一次重构，着看上去是一次很好的机会来记
录我最有用的7个秘诀。
1. 可维护的设计和代码 我给的第一条也是最条一条秘诀是设计站点保证可以轻松维护。很多时候，当你设计一个站点，你可能为了美学牺牲一些东西。例如，你可能使用一个图片而文字或者样式就可以
应付。或者你可能故意使用一个没有空间缩放的菜单结构。当网站变大时，这将将成为一个非常糟糕的设计。
当我两年前建成FlashDen的第一个版本时，我使用图片按钮。他们看起来很漂亮，但同时我被100多个不同的按钮图片库拖累着，更谈不上修改图片了。之后在接下来
的几个月中，当一个开发者需要一个新按钮时候他们向我要一个新图片。不用说，我学到这个教训很快，我们切换到一个单独的按钮类，虽然看上去不是很好，但是这种情况更能
安心。
可维护性的另一面是考虑站点将会怎样成长和变化。比如，当一个新页面增加时，它到哪里去？我一直想要一个横向的导航栏，但是经过一些尝试，我们限制地使用了加入子栏目
的垂直的导航栏，从而加入一个标签结构到页面来保证相关的页面能被归类到一起。我不敢说这是世界上最好的导航栏，但是它肯定能够让我们不用重新设计在一个新的节点加入
网站的时候。
所以当你在设计大型站点时候，设法让它变得简单，你会为此而感到高兴的！
2. 找出你的用户群和任务 大型网站网站和小型站点的最大一个区别就是使用网站的不同用户类型的数量。例如在FlashDen上，有买家、作家、访客、管理员和会员。每个用户组都有他们各自不同
的目标和任务。有时候他们的任务重叠，但是他们有很大的不同。
一个地方的用户任务在相互对立的观点最好的例子是在一个网页。网站上没有任何一个地方不衔接的每个用户组，并在其他地方是如此的重要，以确保每个人都会有他们想要的。
当然，你要小心，在服务一个用户组你不忽略另一个。
在这次最新一次FlashDen重新设计时候，我所作工作最大的地方是主页。我做的第一件事情是给自己列出每个用户组需要做的事情：
买家 - 在FlashDen上购买文件的人
浏览项目，搜索，访问他们的个人主页，存款，学习使用网站（新买家） 作者 - 在FlashDen上卖商品的人
与其他会员聊天，在主页上展示他们项目的功能，了解网站的新闻，快速的获取他们的投资搭配和收益 新访客 - 潜在的买家/作者/会员，刚到站点的人
快速了解到站点是干嘛的，起步教程，查看不同类别的文件和价格 会员 - 不是真正的买家或作者，而是在社区中活跃
和其他会员聊天，查看站点新闻，浏览文件 管理员/审稿人 - 我们的工作人员，管理文件的批准，主持论坛，参与大部分活动
快速批准文件，查看最新论坛主题，添加站点新闻 当你知道不同的用户群体想要做什么，那么你可以设计一个网页，解决了他们所有的需要。不用说，这是随着用户组和任务数量指数级增加的困难的任务。在该网站的其他网页，
你会经常为部分用户组而苦恼，而在主页上，他们却又都集中在一起。不用怀疑，主页是你设计一个网站时候最重要的一项工作。
在你解决不同需求之前，你需要先考虑用户群。为了做到这个，你需要了解该网站是要实现的目标。
3. 了解网站目标 虽然每个用户组会很自然地认为他们是最重要的，但是你应该根据他们的优先度来判别站点要实现的目标。比如在FlashDen上，我们给候补人员列出下面几条结论：
该网站的首要任务是为买家服务。为买家服务可以带来不断的收入，同时也可以为作者群服务。 让游客更快的了解网站进而成为会员也是至关重要的。FlashDen还处在一个比较新兴的市场，不断有新竞争对手出现，如何将注册会员变成买家或者作者是相当重要的。 创作者是FlashDen的核心部分，他们也是非常重要，和其他用户群不同的是，他们是网站坚定的拥护者。 注册会员虽然没有创作者或者买家这么重要，但是他们也在为周边的社群作出贡献。 作为雇员，管理员/审稿人是相对最不重要的。 因此，从以上所说可以得出结论，网站服务的的用户需求优先顺序：访客&amp;gt;买家&amp;gt;作者&amp;gt;成员&amp;quot;&amp;gt;管理员。
认识你的网站正在努力实现的却是最终用户线程的缝制任务一起，并告诉你什么你应该尝试把页面上。</description>
    </item>
    
    <item>
      <title>IE XML 缓存问题</title>
      <link>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</link>
      <pubDate>Wed, 02 Jun 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/06/ie-xml-cache-problem/</guid>
      <description>明天开始上交毕业设计初稿，其中有一节是遇到的问题和解决办法。我把平时在BooguNote 中的琐碎片段整理出来，便有了此文。
PS:之前已经有过3篇相关毕设的文章：
[CakePHP的全局变量
](http://log4d.com/2010/05/cakephp-global-variables)
[FMS的80端口占用
](http://log4d.com/2010/05/fms-80-port-used)
[SWFObject 一款JavaScript的Flash检测与插入模块
](http://log4d.com/2010/05/swfobject)
&amp;mdash;- 正文开始 &amp;mdash;-
问题背景 系统要实现一个操作，即每次向同一个url 请求一个GET方法获取一个xml文件，这个xml文件记录着聊天数据并且是即时生成的。当用FireFox或者Chro
me请求时候都能获得正确的数据，而IE则常常出现无法获取实时的XML数据。
而如果在地址栏中填入 http://localhost/AzaAjaxChat/src/Chat/getXml?messageId=41
这个原始的XML文件地址，就可以获取正确的XML文件。并且在下次IE 的 HTTPRequest请求时候就正常了。看来问题出在IE自身的缓存上面。
解决方法 1.使用URL参数随机事件 在AJAX请求的页面后加个随机函数,我们可以使用随机时间函数，在javascript发送的URL后加上t=Math.random()。
当然，不是直接把t=Math.random()拷贝到URL后面,应该像这样:
url = url + &amp;quot;&amp;amp; amp;&amp;quot; + &amp;quot;t=&amp;quot; + Math.random(); 2.修改Header缓存时间 在XMLHttpRequest发送请求之前加上 XMLHttpRequest.setRequestHeader(&amp;ldquo;If-Modified-
Since&amp;rdquo;,&amp;ldquo;0&amp;rdquo;)。一般情况下,这里的 XMLHttpRequest 不会直接使用。
你应该可以找到这样的代码
XXXXX.send(YYYYYY);
那么,就把它变成
XXXXX.setRequestHeader(&amp;ldquo;If-Modified-Since&amp;rdquo;,&amp;ldquo;0&amp;rdquo;);
XXXXX.send(YYYYYY);
a Sample 我选择的是第一种方法，我觉得这种更为直观。我的具体代码如下（使用jQuery）：
jQuery.get(&amp;quot;http://localhost/AzaAjaxChat/src/Chat/getXml&amp;quot;, { messageId: aacGlobal.currentMessageId, version: Math.random() }, getRemoteDataCallBack); </description>
    </item>
    
    <item>
      <title>flower shop 汉化</title>
      <link>https://blog.alswl.com/2010/03/speaking-of-flower-shop/</link>
      <pubDate>Tue, 23 Mar 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/03/speaking-of-flower-shop/</guid>
      <description>死党的女朋友的一门网页设计课需要作品，向我求援。我看了一下他们的课件，没有什么动态语言，静态的Html页面即可。
在[99款高质量免费(X)HTML/CSS模板-DIV+CSS模版下载 | 彬Go](http://blog.bingo929.com/99-high-
quality-free-xhtml-css-div-templates.html)看到很多款极佳的网页设计，反复删选后，决定选用一款Flower
Shop的作品。
[![image](https://4ocf5n.dijingchao.com/upload_dropbox/201003/Flower Shop.jpg)](https://4ocf5n.dijingchao.com/2010/03/Flower Shop.jpg)
原始预览： http://csscreme.com/freetemplates/flower_shop/
原始下载： http://csscreme.com/tpsaveas.php?tp=flower_shop.zip
花了1个小时汉化了页面，想了想，还是把这个汉化发布吧。
[ ![image](https://4ocf5n.dijingchao.com/upload_dropbox/201003/Feng&amp;rsquo;s Flower Shop.jpg) ](https://4ocf5n.dijingchao.com/upload_dropbox/201003/Feng&#39;s Flower Shop.jpg)
页面预览： http://alswl.github.com/fenflowershop/
下载： https://github.com/alswl/fenflowershop/archive/master.zip</description>
    </item>
    
    <item>
      <title>开发跨浏览器JavaScript时要注意的问题</title>
      <link>https://blog.alswl.com/2010/01/development-of-cross-browser-javascript-should-pay-attention-to-the-problem/</link>
      <pubDate>Sat, 30 Jan 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/01/development-of-cross-browser-javascript-should-pay-attention-to-the-problem/</guid>
      <description>最近在做系统的B/S部分，用DWR做Ajax处理，期间遇到一些浏览器兼容的问题，table.insertRow()和row.insertCell()
在IE下没有问题，但在FireFox下无效。同事说不用考虑FireFox的兼容，客户使用的环境就是IE。我偏执的认为就算不在所有浏览器下通过，至少在我的Fi
reFox下需要正常运行。
晚上花了一点时间稍微研究了一下跨浏览器开发JavaScript时要注意的问题，的确好多学问。我对JavaScript的认识还太浅，得花时间做一些功课了。
顺便推荐一本JavaScript书《JavaScript语言精粹 》，是大名鼎鼎的&amp;quot;O&amp;rsquo;Reilly&amp;quot;系列，我只看了试读的第一章节，斗胆推荐
在随网之舞的《JavaScript语言精粹》 @
随网之舞有更详细的介绍。
传送门：
购买《JavaScript语言精粹 》via China-Pub
评论 《JavaScript语言精粹》via 豆瓣
样章阅读：第一章. 精华 第十章. 优美的特性
以下文章没有URL出处，作者 liqun，来源：www.comecode.com（连接已失效）
××××××××××想回家的分割线××××××××××
1、向表中追加行 定义table时使用tbody元素，以保证包括IE在内的所有浏览器可用
例：定义如下一个空表
&amp;amp;n
bsp_place_holder; 向这个表中增加行的正确做法是，把行增加到表体，而不是增加到表。
Var cell =
document.createElement(&amp;ldquo;td&amp;rdquo;).appendChild(document.createTextNode(&amp;ldquo;foo&amp;rdquo;));
Var row = document.createElement(&amp;ldquo;tr&amp;rdquo;).appendChild(cell);
Document.getElementById(&amp;ldquo;myTableBody&amp;rdquo;).appendChild(row);
*IE中需要先创建行，再创建列，再创建内容
2、设置元素的样式 Var spanElement = document.getElementById(&amp;ldquo;mySpan&amp;rdquo;);
//下面写法保证出IE外，所有浏览器可用
spanElement.setAttribute(&amp;ldquo;style&amp;rdquo;,&amp;ldquo;font-weight:bold;color:red;&amp;rdquo;);
//下面的写法保证IE可用
spanElement.style.cssText=&amp;ldquo;font-weight:bold;color:red;&amp;rdquo;;
3、设置元素的class属性 Var element = document.getElementById(&amp;ldquo;myElement&amp;rdquo;);
//下面的写法保证除IE外，所有浏览器可用
Element.setAttribute(&amp;ldquo;class&amp;rdquo;,&amp;ldquo;styleClass&amp;rdquo;);
//下面写法保证IE可用
Element.setAttribute(&amp;ldquo;className&amp;rdquo;,&amp;ldquo;styleClass&amp;rdquo;);
4、创建输入元素 Var button = document.createElement(&amp;ldquo;input&amp;rdquo;);
//单行文本框、复选框、单选框、单选钮、按钮需要此属性区别
Button.setAttribute(&amp;ldquo;type&amp;rdquo;,&amp;ldquo;button&amp;rdquo;);
Document.getElementById(&amp;ldquo;formElement&amp;rdquo;).appendChild(button);
5、向输入元素增加事件处理程序 Var formElement=document.getElementById(&amp;ldquo;formElement&amp;rdquo;);
//所有浏览器可用
formElement.onclick=function(){doFoo();};</description>
    </item>
    
    <item>
      <title>关于禁用Javascript的讨论</title>
      <link>https://blog.alswl.com/2009/05/discussion-on-javascript-disabled/</link>
      <pubDate>Sat, 23 May 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/05/discussion-on-javascript-disabled/</guid>
      <description>做用户验证时候，在为客户端和服务器端各自的验证发愁，这时候我想到一个问题，现在这么多网站依赖javascript来表现页面，那么如果禁用了会怎么样呢。
Google了一下，找到一篇06年的帖子。当客户端把Javascript禁用后，[猛击这里打开](http://bbs.blueidea.com/archi
ver/tid-2694115.html)
最让我吃惊的是这篇神奇的帖子从06年被讨论到09年，从挖坟N次，好狠&amp;hellip;
摘录部分语句如下：
所以我会做一个纯HTML的首页，告诉人家不要屏蔽javascript，不要屏蔽ActiveX，不要&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;:( :(
看看Gmail怎么做的。我觉得那就是答案（的一种）。
禁止JS上在功能的使用上致少不该受到影响，但是国内的许多网站不去考虑这个。　只是盲目的跟风，　什么AJAX、什么体验，很多都是建立在JS上的，一旦使用的浏览
器不支持JS，就什么都没了。google做得不错，可是国内一些所谓的门户网站，像sinasohu163yahoo或多或少都存在一定的问题，这些站的首页或许没
什么问题，但看看其它的页面就知道。　既然浏览器提供了禁用JS、禁用COOKIE的功能，那我们就不得不考虑禁用后对我们的影响。
CJJ 老是走极端。
什么网站能满足１００％的用户需要？
GOOGLE搜索，只能说第一页的排序满足８０％的人的需要。
所以，做一个检查，低于１０％的人没有打开JS，就不用专为他们搞一个版本了。
什么用户都想抓住，往往什么用户都抓不住。
当你的消耗和价值不相等的时候，选择放弃，是最好的解决方案。
很多事，不是人们不想做。而是在商业环境下，不允许这样去做。
当然，追求完美是我们的目标，如果能在条件许可的情况下，可以做这样的工作。
但现在网站，往往都没有这样的许可。
我支持蓝色。
我认为是这样的：
一个运营网站为主导思想的人（比如蓝色）不应该赞同这个问题，关闭JS 和 Cookies的人实在太少，缺了这个东西，说明他们不在乎用户体验，他在网上寸步难行。
而一个以技术为主导思想的人（比如技术总监），就必须考虑一下这个问题。
而最关键的问题是： [color=Blue]他是你的目标客户吗？[/color]
从技术角度讲，解决这个问题不难。现在争论的焦点是：是否有必要去做。
答案很简单： 如果你的人力成本允许，并且你在乎这部分变态的人，就去改善把～
Google这么做就是考虑到这个因素。总体来说这个问题不是一个问题，而是一个普遍问题：
如果用户关闭JS怎么办？
如果用户不支持Cookies怎么办？
如果用户没有安装flashpleyer怎么办？
如果用户使用的是 IE5怎么办？
如果用户是 800*600分辨率怎么办？
如果用户是 FF或者OP或者其他浏览器怎么办？
如果用户视力障碍怎么办？
如果用户没有耳机或音箱怎么办？
哦&amp;hellip;&amp;hellip;你去死把～～天哪～
呵呵，现在有多少网站用的em呢，我想大多是px吧，那些中老年人只有戴老花镜上网咯。。。。
说用户体验性，我想还是要针对人群来说，大家都在这里谈论什么js，css。可是你的最终用户会谈论什么呢？处于这个领域，懂这些技术，你会去说，会去讨论，可用户不
会关心这些吧，一些普通的网民谁会自己主动去把js禁用掉，他们就不知道这些。也许他们关注的只是我要找的信息好不好找，你这页面我看舒服不舒服，你这里速度是不是很
快&amp;hellip;&amp;hellip;
如果像某些同志那样的要考虑没有css，js，flash等等该怎么去做网页，那可以假想一下做出来的东西会是什么样子的，我说不好，也没尝试过。
现在的这技术，那技术是为了什么而出现的呢，某位同学比喻的很好：某天砍掉自己的脚，会问我怎么不会走路了呢&amp;hellip;&amp;hellip;.
话又说回来，做web开发本来就是个敏捷性要求很高的开发，我们把过多的精力放在那些边边角角的问题上，会得不偿失。
针对你的用户去处理问题&amp;hellip;.
=====注意时间！！！====
ujam 发表于 2009-2-18 17:38
js很重要，现在js正在越来越受重视中，开源库jquery,prototype这些都是随着时代的变化而产生的，打个比方js版星际争霸，都比软件版的小,占用空
间小，跨平台，所以我觉得以后的软件会网页化。
网页化还可以减少成本</description>
    </item>
    
    <item>
      <title>继续推荐书：Ajax实战</title>
      <link>https://blog.alswl.com/2009/03/continue-to-recommend-the-book-ajax-in-action/</link>
      <pubDate>Tue, 03 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/continue-to-recommend-the-book-ajax-in-action/</guid>
      <description>本来关于Ajax的学习可以告一段落，原因是看的一本国内的教材有点错误，耗了好多时间才改对，让我对Ajax的热情稍微降低
不过很&amp;quot;可惜&amp;quot;的是，今天在China-pub上看到一本五星评价的书，《Ajax实战》，抱着试一试的态度，居然在图书馆找到了这本书。
略微一看，是ajaxcn.org做的翻译，还是不错的，而且是Ajax领域的开山之作，读完前言，又激发我读下去的乐趣。
在此感谢矿大的图书馆，总是留下最后一本书给我借，谢谢````
链接地址：
Ajax实战:实例详解 全场购物满58元免配送费！ </description>
    </item>
    
    <item>
      <title>关注一下Ext JS</title>
      <link>https://blog.alswl.com/2009/03/look-at-ext-js/</link>
      <pubDate>Mon, 02 Mar 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/03/look-at-ext-js/</guid>
      <description>在China-pub首页上看到深入浅出Ext JS这本书，China-
pub推荐为09年最值得期待的Ajax技术图书感觉这本书挺不错，就关注了一下Ext JS
1、ExtJS可以用来开发RIA也即富客户端的AJAX应用，是一个用javascript写的，主要用于创建前端用户界面，是一个与后台技术无关的前端ajax框
架。因此，可以把ExtJS用在.Net、Java、Php等各种开发语言开发的应用中。ExtJs最开始基于YUI技术，由开发人员JackSlocum开发，通过
参考JavaSwing等机制来组织可视化组件，无论从UI界面上CSS样式的应用，到数据解析上的异常处理，都可算是一款不可多得的JavaScript客户端技术
的精品。
2、Ext的UI组件模型和开发理念脱胎、成型于Yahoo组件库YUI和Java平台上Swing两者，并为开发者屏蔽了大量跨浏览器方面的处理。相对来说，EXT
要比开发者直接针对DOM、W3C对象模型开发UI组件轻松。
Ajax主流框架与ExtJS JQuery、 Prototype和YUI都属于非常核心的JS库。虽然YUI，还有最近的JQuery，都给自己构建了一系列的UI器件（Widget），不过却
没有一个真正的整合好的和完整的程序开发平台。哪怕是这些低层的核心库已经非常不错了，但当投入到真正的开发环境中，依然需要开发者做大量的工作去完善很多缺失之处。
而Ext就是要填补这些缺口。主流开源框架中只有Dojo像Ext一样，尝试着提供整合的开发平台。相比Dojo这个出色的工具包，我们认为 Ext能提供一个粘合度
更高的应用程序框架。Ext的各个组件在设计之时就要求和其它Ext组件组合一起工作是无缝合作的。这种流畅的互通性，离不开一个紧密合作的团队，还必须时刻强调设计
和开发这两方面目标上的统一，而这点是很多开源项目未能做到的。从构建每一个组件开始，我们始终都强调组件的外观、性能、互通性和可扩展性，而我们认为组件已经达到了
这几点的要求。
Ext绝对可以单独使用。实际上，除了有特定的要求，推荐单独使用Ext，这样的话文件占位更小，支持和整合也更紧密。我们也支持与jQuery、 YUI或Prot
otype整合使用，作为低层库的角色出现，以提供处理各种核心的服务，如DOM和事件处理，Ajax连接和动画特效。使用整合方式的一个原因是它们已具备了一些特定
的器件而Ext并没有原生支持&amp;mdash;-像YUI的History控件便是一个典型的例子。这时，Ext需要依赖YUI这个库的底层来实现History控件，这样一来
的话也可免去Ext自身底层库，从而减少了整个程序的内存占用。另一个使用整合方式的原因是，对于许多已在使用其他底层库的程序，你可能希望逐步加入Ext。总之，如
果已经有了其他库，Ext可已利用它们。我们的宗旨是为用户提供各种可能性和性能上的优化。而事实是，只要实现了相对应的底层库接口，为任意一个框架添加上适配器是没
有问题的&amp;mdash;-人们可以轻松地将Dojo、Moo、Ajax.NET，或其它JS库转变为 Ext的底层。
Ext从2.x开始收费，这给他的应用前景带来一些问题。不过对国内开发人员的影响不大，毕竟是客户付款。
[ ](http://www.china-
pub.com/195152)
深入浅出Ext JS(china-pub 2.20日全国独家首发） 【市场价】￥49.00 【PUB价】￥36.75 本书是国内Ext JS先驱者的智慧结晶。内容翔实、示例丰富，包含大量示例代码，可操作性极强。不仅全面地阐述了Ext
JS的基础知识，而且深入浅出地讲解了Ext JS开发中的高级技巧，同时还给出了大量专家级的建议。通过学习本书，读者将感受到Ext
JS的无穷魅力和Ajax技术带来的完美体验。 【新书预告】Dojo之父力作[《Mastering Dojo》](http://www.dojochina.com/index.php?q=no
de/1287)中文版（Dojo中国翻译）即将由图灵公司出版，敬请关注！ 【媒体评论】
&amp;ldquo;本书是非常急缺的全面讲解Ext JS的图书，弥补了Ajax社区的一大空白。&amp;rdquo;
&amp;mdash;-Ajax中国，国内权威的Ajax专业门户
&amp;ldquo;要想全面了解和掌握Ext JS，强烈推荐阅读《深入浅出Ext JS》。从各方面来看，这本书都非常优秀！&amp;rdquo;
&amp;mdash;-Dojo中国，Dojo中文官方网站
本书样章发布后好评如潮，经仔细研读，果然名副其实。内容翔实，示例丰富，叙述风趣幽默，可操作性极强……Ext JS开发者必备！
&amp;mdash;-Family 168，中国专业的Ajax解决方案提供商
&amp;ldquo;Ext JS是最炫丽的Ajax框架，开源人网站开发了大量基于Ext
JS的应用，本书将是2009年最值得期待的Ajax技术图书之一。相信它一定会受到开源技术爱好者的欢迎，也一定可以为所有爱好Ext JS的开发者带来价值。&amp;rdquo;
&amp;mdash;-开源人，专注于为开源人士服务的互动平台</description>
    </item>
    
    <item>
      <title>Ajax 好玩的拖拽（顺便测试chrome下文字编辑的代码高亮）</title>
      <link>https://blog.alswl.com/2009/02/ajax-drag-and-drop-fun-the-way-chrome-test-the-code-under-the-highlighted-text-editor-search/</link>
      <pubDate>Thu, 26 Feb 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/02/ajax-drag-and-drop-fun-the-way-chrome-test-the-code-under-the-highlighted-text-editor-search/</guid>
      <description>HTML语言: ajax 拖拽
New Document Cobao........&#34;openClose(this)&#34;&gt;- x 地址:http://www.svnhost.cn 关键字:SVN托管 说明: 新浪........&#34;openClose(this)&#34;&gt;- x 地址:http://www.sina.com.cn 关键字:SVN托管 说明: 网易........&#34;openClose(this)&#34;&gt;- x 地址:http://www.163.com 关键字:SVN托管 说明: 用http://www.fayaa.com/网站提供的在线编辑器做的，找了类似的工具很久，甚至去了FCKEditer网站，不过效果都不怎么理想，这个网站提供
的非常不错，强烈推荐收藏</description>
    </item>
    
    <item>
      <title>Ajax起步：使用DOM解析XML</title>
      <link>https://blog.alswl.com/2009/02/ajax-started-use-dom-to-resolve-xml/</link>
      <pubDate>Thu, 26 Feb 2009 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2009/02/ajax-started-use-dom-to-resolve-xml/</guid>
      <description>只要代码没问题，基本上就没有问题，唯一值得注意的是虽然是html文档，但是如果想使用dom解析xml，还是必须使用服务器的，否则XMLHttpRequest
返回的status就是0了。
XML语言: studentdata.xml
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt; 0371
张三
17
0372
李四
18
0373
王五
18
HTML语言: domxml.html
&lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD HTML 4.01 Transitional//EN&#34; &#34;http://www.w3.org/TR/html4/loose.dtd&#34;&gt; 使用DOM解析XML &amp;lt;input type=&amp;ldquo;button&amp;rdquo; value=&amp;ldquo;解析XML&amp;rdquo; color: rgb(170,85,0)&amp;gt;&amp;ldquo;sendRequest();&amp;rdquo;/&amp;gt;
JavaScript语言: domxml.js
var XMLHttpReq;
var url = &amp;ldquo;studentdata.xml&amp;rdquo;;
function createXMLHttpRequest() {
if (window.XMLHttpRequest)
XMLHttpReq = new XMLHttpRequest();
else if (window.ActiveXObject) {
try {
XMLHttpReq = new ActiveXObject(&amp;ldquo;Msxml2.XMLHTTP&amp;rdquo;);
}
catch (e) {
try {
XMLHttpReq = new ActiveXObject(&amp;ldquo;Microsoft.XMLHTTP&amp;rdquo;);
}</description>
    </item>
    
  </channel>
</rss>
