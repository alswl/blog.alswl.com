<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>efficiency on Log4D</title>
    <link>https://blog.alswl.com/categories/efficiency/</link>
    <description>Recent content in efficiency on Log4D</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 24 Apr 2016 16:36:16 +0800</lastBuildDate><atom:link href="https://blog.alswl.com/categories/efficiency/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows management for hacker</title>
      <link>https://blog.alswl.com/2016/04/windows-management-for-hacker/</link>
      <pubDate>Sun, 24 Apr 2016 16:36:16 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2016/04/windows-management-for-hacker/</guid>
      <description>团队里的同学有时看见我键指如飞，可以用快捷键将 Mac 的窗口玩转于手心。他们表示酷炫非常， 心生羡慕的同时，希望掌握这门技艺，我就把使用的 Phoenix 介绍给大家。结果过了一段时间， 发现普及率并不高，本着好为人师的精神，今天我就来八一八这款优秀的桌面管理工具。 在介绍我使用的工具之前，我要先介绍一下我选择的原因和历史。 ps：配图是我长草多年的 Ergodox Infinity。（@夫人，看到这里的时候，请留步思考 5s）。 Alt+Tab = 苦难的历史</description>
      <content:encoded><![CDATA[<p>团队里的同学有时看见我键指如飞，可以用快捷键将 Mac 的窗口玩转于手心。他们表示酷炫非常，
心生羡慕的同时，希望掌握这门技艺，我就把使用的 Phoenix 介绍给大家。结果过了一段时间，
发现普及率并不高，本着好为人师的精神，今天我就来八一八这款优秀的桌面管理工具。</p>
<p>在介绍我使用的工具之前，我要先介绍一下我选择的原因和历史。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201604/ergodox_infinity.jpg" alt="201604/ergodox_infinity.jpg"  />

</p>
<p>ps：配图是我长草多年的 Ergodox Infinity。（@夫人，看到这里的时候，请留步思考 5s）。</p>
<h2 id="alttab--苦难的历史">Alt+Tab = 苦难的历史</h2>
<p>当我还年轻的时候，曾经对 Alt+Tab 这个快捷键愤慨无比，觉得这种设计虽然简单但是很蠢。</p>
<!-- more -->
<ul>
<li><strong>命中率低</strong>。要在茫茫图标中查找自己需要的窗口，如果开了 20 个应用，切换到一个非常用窗口至多可能需要 20-1 次按键。
不要跟我说有 Alt+Shift+Tab 的反向循环操作，估计大部分用户都不知道。而且 正向/反向 切换伤脑子。</li>
<li><strong>交互方式耗时</strong>。由于 Alt+Tab 的操作需要用户进行反馈才能进行，是 <code>眼-手-眼-手</code> 的操作反馈方式，
这种交互模式费时费脑子。跟这种需要实时反馈对立的交互模式应当是类似「一键呼出」的操作。</li>
<li><strong>在大显示器、多显示器的环境下面，Alt-Tab 模式没有做任何优化</strong>。</li>
<li>频繁切出窗口进行切换，容易让人分神，比如切换时候看到某个播放器的标题，在放一首喜欢的歌，很可能吸引过去。</li>
</ul>
<p>有人会问，难道不优化都是缺陷么？
我的答案是肯定的。Alt+Tab 是几乎除鼠标之外的唯一一种窗口操作方式。如果它不能跟上时代的步伐，
对大显示器、多显示器做优化，那就是不作为，不努力，不上进。跟不上变化是要被淘汰的！</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201604/alt_tab_windows.jpeg" alt="201604/alt_tab_windows.jpeg"  />

</p>
<h2 id="平铺式窗口管理器">平铺式窗口管理器</h2>
<p>在被 Windows Alt-Tab 虐了多年之后，我长大了，开始接触 Linux，但是这种痛苦仍然时刻包围着我。
当我分期购买一个外置显示器之后，这种痛苦到达到了顶端。
恰好彼时我是 <a href="https://www.archlinux.org/">ArchLinux</a> 的信徒，很快就发现了一片桃源：
自己安装 <a href="https://wiki.archlinux.org/index.php/window_manager">Window manager</a>。</p>
<p>我重新认识了桌面系统世界，除了介绍常规的 Gnome / KDE / xfce 之外，还有一类窗口管理系统，他们叫做「平铺式窗口管理器」。
（严格来说，Gnome / KDE / xfce 属于 Desktop environment，层级比「窗口管理系统」要高，我这里不做严格区分）。</p>
<p>什么是平铺式窗口管理器？来一个直观的认识：</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201604/awesome_1.jpeg" alt="201604/awesome_1.jpeg"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201604/awesome_2.jpeg" alt="201604/awesome_2.jpeg"  />

</p>
<p>官方的解释是……呵呵，自己点进去看解释吧。平铺式桌面管理器（包括同时支持平铺式和堆叠式的混合式桌面管理器）给我带来了新的认知，
原来桌面系统是可以进行接口编程的，我不那么 care 到底是哪种风格，我 care 的是，
能否通过编程定制来解决我的 Alt-Tab 问题。</p>
<h2 id="我期望的窗口管理模式">我期望的窗口管理模式</h2>
<ul>
<li>快速启动最常用的应用，同时也能将其快速呼出</li>
<li>对大屏幕友好，现在显示器普遍是大屏幕，可以自由控制窗体的移动，方便多个窗口同时进行操作</li>
<li>对多屏幕友好，多屏幕间的切换，要友好。可以快速屏幕间切换</li>
<li>对键盘友好，对鼠标友好，全键盘操作模式，但同时要对鼠标友好，比如鼠标跟随焦点功能，毕竟一些操作还是鼠标方便</li>
<li>帮助集中注意力，将操作界面隔离成多个目的区分的空间，比如写作时候，期望只有一个 Evernote + Chrome 在眼前</li>
</ul>
<h2 id="我在-mac-下面的方案">我在 Mac 下面的方案</h2>
<p>呜呼，感谢伟大的 <a href="https://github.com/jasonm23/">Jason Milkins</a> 做了一堆尝试，
创造了一堆乱七八糟的桌面管理器。然后感谢 <a href="https://github.com/kasper">Kasper Hirvikoski</a>
在 Jason 拍拍屁股走人之后，接过了 Jason 的棒子，将 Phoenix 这个项目快速推进，解决了一堆导致不可用的 bug，
并新增了很多特性。</p>
<p>回到要介绍的主角身上，<a href="https://github.com/kasper/phoenix">Phoenix</a>：</p>
<blockquote>
<p>A lightweight OS X window and app manager scriptable with JavaScript</p>
</blockquote>
<p>基本特性是：</p>
<ul>
<li>Javascript 作为配置文件，定制性超级强</li>
<li>支持 App / Window / Space / Screen 等对象的操作</li>
</ul>
<p>基于 Phoenix，我达成了我的窗口管理模式的目标：</p>
<ul>
<li>快速启动
<ul>
<li>使用 <code>Option</code> + ` / 1 / 2 / 3 / 4 / 8 / 9 / e / a / s / z /, / . / / 启动</li>
<li>iTerm / Chrome / Safari / QQ / Bearychat / Wechat / Neteasy Music / MacVim / IntelliJ IDEA / Macdown / Mail / Evernote / Finder</li>
</ul>
</li>
<li>窗口操作
<ul>
<li>Option + - / =
<ul>
<li>大小控制</li>
</ul>
</li>
<li>Option + m
<ul>
<li>窗口移动到屏幕中央</li>
</ul>
</li>
<li>Option + Space
<ul>
<li>鼠标找回到窗口中央</li>
</ul>
</li>
</ul>
</li>
<li>屏幕内操作
<ul>
<li>Option + J / K
<ul>
<li>焦点在同屏幕窗口切换</li>
</ul>
</li>
<li>Ctrl + Option + J / K / H / L
<ul>
<li>窗口移动</li>
</ul>
</li>
</ul>
</li>
<li>屏幕间操作
<ul>
<li>Option + H / L
<ul>
<li>焦点左右屏幕切换</li>
</ul>
</li>
</ul>
</li>
<li>Space 操作
<ul>
<li>Option + I / O
<ul>
<li>Space 左右切换</li>
</ul>
</li>
<li>Option + Ctrl + I / O
<ul>
<li>将当前窗口移动到相邻 Space</li>
</ul>
</li>
<li>Option + Enter
<ul>
<li>将当前窗口移动到 Work Space</li>
</ul>
</li>
<li>Option + Delete
<ul>
<li>将当前窗口移动到 Park Space</li>
</ul>
</li>
<li>Work / Park Space 就是用来帮助我集中精力的</li>
</ul>
</li>
</ul>
<p>我的配置文件在 <a href="https://github.com/alswl/.oOo./tree/master/mac/phoenix">.oOo./mac/phoenix at master · alswl/.oOo.</a>。
我的配置文件可以开箱即用，但这是我自己的工作模式，想要获得自己最舒适的效果，需要自己进行一些研究和定制。</p>
<h2 id="其他一些替代方案">其他一些替代方案</h2>
<ul>
<li>Mac
<ul>
<li>SizeUp  # 简单的桌面平铺工具，不支持一键切换</li>
<li>Spectacle  # 类 SizeUp</li>
<li>Divvy  # 类 SizeUp，收费</li>
<li>Slate  # 支持配置，支持一键切换（推荐）</li>
</ul>
</li>
<li>Linux
<ul>
<li>Awesome
<ul>
<li><a href="http://hahack.com/tools/awesome/">平铺式窗口管理器-Awesome | HaHack</a></li>
<li><a href="https://github.com/alswl/awesome">我的 Awesome 配置文件（停止位置）</a></li>
</ul>
</li>
<li>xmonad</li>
</ul>
</li>
<li>Windows
<ul>
<li><a href="https://github.com/fuhsjr00/bug.n">fuhsjr00/bug.n: Tiling Window Manager for Windows</a></li>
</ul>
</li>
</ul>
<hr />
<p>我曾经写过一篇 <a href="http://blog.alswl.com/2013/12/mac/">Linux 程序员的 Mac 安装记录</a>，
告诉大家我在 Mac 上面常用的工具、包管理器。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>一次艰难的 Wiki 升级</title>
      <link>https://blog.alswl.com/2016/01/confluence-upgrade/</link>
      <pubDate>Tue, 12 Jan 2016 22:53:55 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2016/01/confluence-upgrade/</guid>
      <description>公司使用 Confluence 管理自己的知识库， 现在使用的版本还是 3.0.1，而最新的 Confluence 版本已经是 5.4+。 新版本加入的一些现代化 Web 系统的新特性很吸引人（拖拽上传，可见即所得编辑）， 在群众的强烈呼声下，我着手开始升级。 官方的升级路线很扯，3.0.1 的升级路线是： 3.0.1 -&amp;gt; 3.5.17 5.0.3 -&amp;gt; 5.4.4 中间两次大版本升级，第一次原因不明，第二次是更新了 markup 渲染引擎， 改为 HTML 格式类型的渲染模式。 由于一些原因，我们系统还跑在 embedded 模式下（其实就是 HyperS</description>
      <content:encoded><![CDATA[<p>公司使用 <a href="https://www.atlassian.com/software/confluence">Confluence</a>
管理自己的知识库，
现在使用的版本还是 3.0.1，而最新的 Confluence 版本已经是 5.4+。
新版本加入的一些现代化 Web 系统的新特性很吸引人（拖拽上传，可见即所得编辑），
在群众的强烈呼声下，我着手开始升级。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201601/confluence_river.jpg" alt="201601/confluence_river.jpg"  />

</p>
<!-- more -->
<p>官方的升级路线很扯，3.0.1 的升级路线是：</p>
<ul>
<li>3.0.1 -&gt; 3.5.17</li>
<li>5.0.3 -&gt; 5.4.4</li>
</ul>
<p>中间两次大版本升级，第一次原因不明，第二次是更新了 markup 渲染引擎，
改为 HTML 格式类型的渲染模式。</p>
<p>由于一些原因，我们系统还跑在 embedded 模式下（其实就是 HyperSQL），这种大版本升级，
需要先从内置库升级到外部数据库，比如 MySQL。</p>
<p>苦逼旅程就开始了。</p>
<h2 id="from-embedded-to-mysql">From embedded to MySQL</h2>
<p>更新内置库到外部库的操作流程：</p>
<ul>
<li>导出当前的数据备份，包括附件，我导出后 1G+</li>
<li>使用当前同版本（3.0.1）安装一个全新的 wiki，注意下载 JDBC-connector</li>
<li>安装之后，配置好 MySQL，开始导入之前准备好的备份</li>
<li>悲剧上演</li>
</ul>
<p>遇到了错误：</p>
<blockquote>
<p>Import failed. Hibernate operation: could not insert: [com.atlassian.confluence.core.BodyContent#12028015]; SQL []; Duplicate entry &lsquo;12028015&rsquo; for key &lsquo;PRIMARY&rsquo;; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &lsquo;12028015&rsquo; for key &lsquo;PRIMARY&rsquo;</p>
</blockquote>
<p>官方文档 <a href="https://confluence.atlassian.com/doc/troubleshooting-xml-backups-that-fail-on-restore-199034.html">https://confluence.atlassian.com/doc/troubleshooting-xml-backups-that-fail-on-restore-199034.html</a>
让修改重复键数据，好吧，我改，搜索一把重复主键，将备份里面的 <code>entities.xml</code> 弄出来。</p>
<pre tabindex="0"><code># 格式化
awk &#39;{s=s $0}END{gsub(/&gt;&lt;/,&#34;&gt;\n&lt;&#34;,s);s=gensub(/&gt;([^ \n&gt;]*)&lt;/,&#34;&gt;\n\\1\n&lt;&#34;,&#34;g&#34;,s);print s}&#39; entities.xml &gt; entities.xml.format
# 找重复主键 cat entities.xml.format G &#39;content&#34; class=&#34;Page&#39; -A 2 G -E &#39;[0-9]+&#39; | sort | uniq -c | sort -gr L cat entities.xml.format | grep &#39;name=&#34;id&#34;&#39; -A 1 -B 1 | grep -E &#39;[0-9]+&#39; -B 2 L
</code></pre><p>操作过程中，发现有数据就一条数据（grep entities.xml），还是插入重复（13238835）。
官方文档解释是，内置数据库的锁有时候会不灵，插入重复键。
于是决定再试试去掉主键约束方案，大不了那个数据我就不要了。</p>
<pre tabindex="0"><code>ALTER TABLE BODYCONTENT DROP PRIMARY KEY;
</code></pre><p>结果还有其他 PK 约束，我于是一条一条解开，然后……还是不行，真是作了一手的好死。</p>
<p>结论是，这数据错误了太多，已经无法手工修复。</p>
<h2 id="横插一刀的-emoji-">横插一刀的 Emoji 😊😢💗</h2>
<p>导入时候报了这么一个错误：</p>
<blockquote>
<p>Caused by: java.sql.SQLException: Incorrect string value: &lsquo;\xF0\x9F\x8C\x8D\xE5\x9B&hellip;&rsquo; for column &lsquo;BODY&rsquo; at row 1 org.xml.sax.SAXException: Error while parsing 2015-10-19 23:14:13,108 ERROR [Importing data task] [confluence.importexport.impl.ReverseDatabinder] fromXML Error processing backup: &ndash; referer: http://10.1.2.155:8087/setup/setup-restore-start.action | url: /setup/setup-restore-local.action | userName: anonymous | action: setup-restore-local org.xml.sax.SAXException: Error while parsing net.sf.hibernate.exception.GenericJDBCException: could not insert: [com.atlassian.confluence.core.BodyContent#12028161]</p>
</blockquote>
<p>这是 Emoji 编码的问题，理论上 MySQL 换到 5.6+，更新 encoding 就可以了。</p>
<p>但是……Confluence 的建表 SQL 爆出了 255 varchar 超过 1000 限制的错误
，我尝试使用 <a href="https://github.com/rails/rails/issues/9855">innodb_large_prefix</a>
似乎可以解决（因为重复键的问题，导致导入已经行不通）。</p>
<p>另外 innodb_large_prefix 是 5.6.3 才有的，只能升级 MySQL，
并且需要创建表时候使用 DYNAMIC 参数。</p>
<p>弄个 Emoji 这么绕，这导致我直接弃用了 MySQL。</p>
<p>如果是正常迁移，不遇到重复键，Emoji 的问题，可以参考官方的文档，完成平滑迁移：</p>
<ul>
<li><a href="https://confluence.atlassian.com/doc/migrating-to-another-database-148867.html">https://confluence.atlassian.com/doc/migrating-to-another-database-148867.html</a></li>
<li><a href="https://confluence.atlassian.com/doc/database-setup-for-mysql-128747.html">https://confluence.atlassian.com/doc/database-setup-for-mysql-128747.html</a></li>
<li><a href="https://confluence.atlassian.com/doc/upgrading-confluence-4578.html">https://confluence.atlassian.com/doc/upgrading-confluence-4578.html</a></li>
<li><a href="https://confluence.atlassian.com/doc/upgrading-confluence-manually-255363437.html">https://confluence.atlassian.com/doc/upgrading-confluence-manually-255363437.html</a></li>
<li><a href="https://confluence.atlassian.com/conf56/confluence-user-s-guide/creating-content/using-the-editor/using-symbols-emoticons-and-special-characters">https://confluence.atlassian.com/conf56/confluence-user-s-guide/creating-content/using-the-editor/using-symbols-emoticons-and-special-characters</a></li>
</ul>
<h2 id="妈蛋自己干">妈蛋，自己干</h2>
<p>上面这么点东西，陆陆续续花了我两周的时间（晚上）。已经确认走不通平滑迁移，那就别怪我手段糙了。</p>
<p>使用 API 导出后直接导入，这种做法最大问题是不平滑，会丢掉 Wiki 修改的历史记录，
在和各个业务方沟通之后，最后达成了一致：可以暴力升级。</p>
<p>升级流程：</p>
<ul>
<li>准备最新 Confluence 新站点</li>
<li>关停站点</li>
<li>导出数据，包括 Page、评论、附件</li>
<li>导入 Page，评论，附件</li>
<li>启动旧站点，开启只读模式</li>
<li>启用新站点</li>
</ul>
<p>官方有一个 <a href="https://migrations.atlassian.net/wiki">Universal Wiki Converter</a>，
我在 Bitbucket 上面找到了源码，但是已经不可工作了。
虽然宣称「The UWC will however save you 1-2+ weeks of scripting development time, compared with starting from scratch, for many of the most common conversion cases.」
但并没有卵用。</p>
<p>不行就自己随便搞搞好了，看了一下开发需要的 <a href="https://confluence.atlassian.com/display/CONF30/Remote+API+Specification+2.4#RemoteAPISpecification2.4-Page">Conflunce API</a>，
和尤其贴心的新版本 <a href="https://developer.atlassian.com/confdev/confluence-rest-api?continue=https%3A%2F%2Fdeveloper.atlassian.com%2Fconfdev%2Fconfluence-rest-api&amp;application=dac">RESTful API</a>，就开始搞了。</p>
<p>写迁移代码，在这里 <a href="https://github.com/duitang/atlassian-confluence-xxoo">atlassian-confluence-xxoo</a>，已经开源了，只使用过一次，成功的从 3.0.1 迁移到 5.4.4，
理论上，支持任意版本的 3.x/4.x Confluence 迁移到最新。</p>
<p>使用 <code>python app.py -h</code> 查看帮助，不行就看看代码。</p>
<p>希望有迁移需求的同学，搜索到这里能够获得一些帮助。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>SS with Haproxy</title>
      <link>https://blog.alswl.com/2015/11/ss-with-haproxy/</link>
      <pubDate>Fri, 27 Nov 2015 20:23:24 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2015/11/ss-with-haproxy/</guid>
      <description>以前用自己的 SS，Linode 美国，后来 Linode 日本，但是始终拼不过上海电信的国际带宽。 经常不稳定，丢一半的包。 于是买了 SS 服务， 9 台服务器，自己挑觉得速度快的服务器。 但一直固定某台服务器也会偶尔出问题，导致邮件出不来，网页打不开。 需要手动切换一下服务器。 于是用 HA 做了一个本地代理，调整了一些参数，让 SS 总是有快速的服务器供选择。 结构： +-----------------+ +----------------+ | | | | | Server 1 |&amp;gt;&amp;gt;&amp;gt;&amp;gt;v &amp;gt;&amp;gt;| Mail.app | | | v ^ | | +-----------------+ v ^ +----------------+ v ^ +-----------------+ v |----------------+ +------------+ ^ +----------------+ | | v | | |</description>
      <content:encoded><![CDATA[<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201512/shadowsocks.png" alt="shadowsocks.png"  />

</p>
<p>以前用自己的 SS，Linode 美国，后来 Linode 日本，但是始终拼不过上海电信的国际带宽。
经常不稳定，丢一半的包。</p>
<p>于是买了 <a href="https://portal.shadowsocks.com.hk/aff.php?aff=4215">SS</a> 服务，
9 台服务器，自己挑觉得速度快的服务器。</p>
<p>但一直固定某台服务器也会偶尔出问题，导致邮件出不来，网页打不开。
需要手动切换一下服务器。
于是用 HA 做了一个本地代理，调整了一些参数，让 SS 总是有快速的服务器供选择。</p>
<p>结构：</p>
<pre tabindex="0"><code>+-----------------+                                                  +----------------+
|                 |                                                  |                |
|    Server 1     |&gt;&gt;&gt;&gt;v                                           &gt;&gt;|   Mail.app     |
|                 |    v                                           ^ |                |
+-----------------+    v                                           ^ +----------------+
                       v                                           ^
+-----------------+    v    |----------------+      +------------+ ^ +----------------+
|                 |    v    |                |      |            | ^ |                |
|    Server 2     |&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;|    HAProxy     |&gt;&gt;&gt;&gt;&gt;&gt;| SS-Client  |&gt;&gt;&gt;|   Browser      |
|                 |    ^    |                |      |            | v |                |
+-----------------+    ^    +----------------+      +------------+ v +----------------+
                       ^                                           v   
+-----------------+    ^                                           v +----------------+
|                 |    ^                                           v |                |
|    Server 3     |&gt;&gt;&gt;&gt;^                                           v&gt;|   Evernote...  |
|                 |                                                  |                |
+-----------------+                                                  +----------------+
</code></pre><p>配置：</p>
<pre tabindex="0"><code>global
    ulimit-n  4096


defaults
    log global
    mode    tcp
    timeout connect 1s
    timeout client 1s
    timeout server 1s


listen stats
    bind 127.0.0.1:12222
    mode http
    stats enable
    stats uri /
    stats refresh 8s


listen ss
    bind 127.0.0.1:1081
    mode tcp
    option tcpka
    #balance source
    balance roundrobin
    log global
    maxconn 1024

    timeout connect 200ms
    timeout client 600s
    timeout server 600s
    timeout check 80ms  # for office / home
    # timeout check 400ms  # for starbucks
    retries 1
    option redispatch
    option tcp-check

    server s1 host1:port maxconn 20 check inter 2s rise 30 fall 6 backup
    server s2 host2:port maxconn 20 check inter 2s rise 30 fall 6
    server s3 host2:port maxconn 20 check inter 1s rise 60 fall 6
</code></pre><p>挺稳定，很快速。</p>
<p>update: 2015-12-15，添加 <code>backup</code> 项，选一台最稳定的做 backup，避免所有连接都超时。
update: 2015-12-13，添加 <code>redispatch</code>  / <code>retries</code> 项，换机器重试，
大幅提高可用性，注意，可能在非幂等状态下面产生未知错误。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201512/haproxy.png" alt="haproxy.png"  />

</p>
<p>在跑的 node，有些延迟高，被干掉了。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201512/youtube.png" alt="youtube.png"  />

</p>
<p>看 1080P 也挺顺畅。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Linux 程序员的 Mac 安装记录</title>
      <link>https://blog.alswl.com/2013/12/mac/</link>
      <pubDate>Sun, 08 Dec 2013 15:44:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2013/12/mac/</guid>
      <description>作为一个 Linux 的老用户，我再一次验证了那句老话「Linux 用户有钱就换 Mac」。 前段时间，托朋友从香港购入一台 rMBP，下面就是我的 Mac 使用安装记录。 Brew Brew 是 Mac 下面的包管理工具，通过 Github 托管适合 Mac 的编译配置以及 Patch，可以方便的安装开发工具。 安装 Brew： ruby -e &amp;#34;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)&amp;#34; 我安装的 Brew 包： brew install ack brew install adns brew install android-sdk brew install ansible brew install ansible20 brew install apple-gcc42 brew install apr brew install apr-util brew install archey brew install aria2 brew install asciidoc brew install asio brew install atk brew install augeas brew install autoconf brew install autojump brew install automake brew install avr-binutils brew install avr-gcc brew install avr-libc brew install awscli</description>
      <content:encoded><![CDATA[<p>作为一个 Linux 的老用户，我再一次验证了那句老话「Linux 用户有钱就换 Mac」。
前段时间，托朋友从香港购入一台 rMBP，下面就是我的 Mac 使用安装记录。</p>
<h2 id="brew">Brew</h2>
<p><a href="http://brew.sh/">Brew</a> 是 Mac 下面的包管理工具，通过 Github 托管适合 Mac
的编译配置以及 Patch，可以方便的安装开发工具。</p>
<p>安装 Brew：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ruby -e <span class="s2">&#34;</span><span class="k">$(</span>curl -fsSL https://raw.github.com/mxcl/homebrew/go/install<span class="k">)</span><span class="s2">&#34;</span>
</span></span></code></pre></div><p>我安装的 Brew 包：</p>
<!-- more -->
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install ack
</span></span><span class="line"><span class="cl">brew install adns
</span></span><span class="line"><span class="cl">brew install android-sdk
</span></span><span class="line"><span class="cl">brew install ansible
</span></span><span class="line"><span class="cl">brew install ansible20
</span></span><span class="line"><span class="cl">brew install apple-gcc42
</span></span><span class="line"><span class="cl">brew install apr
</span></span><span class="line"><span class="cl">brew install apr-util
</span></span><span class="line"><span class="cl">brew install archey
</span></span><span class="line"><span class="cl">brew install aria2
</span></span><span class="line"><span class="cl">brew install asciidoc
</span></span><span class="line"><span class="cl">brew install asio
</span></span><span class="line"><span class="cl">brew install atk
</span></span><span class="line"><span class="cl">brew install augeas
</span></span><span class="line"><span class="cl">brew install autoconf
</span></span><span class="line"><span class="cl">brew install autojump
</span></span><span class="line"><span class="cl">brew install automake
</span></span><span class="line"><span class="cl">brew install avr-binutils
</span></span><span class="line"><span class="cl">brew install avr-gcc
</span></span><span class="line"><span class="cl">brew install avr-libc
</span></span><span class="line"><span class="cl">brew install awscli
</span></span><span class="line"><span class="cl">brew install axel
</span></span><span class="line"><span class="cl">brew install bdw-gc
</span></span><span class="line"><span class="cl">brew install bfg
</span></span><span class="line"><span class="cl">brew install boost
</span></span><span class="line"><span class="cl">brew install burp
</span></span><span class="line"><span class="cl">brew install c-ares
</span></span><span class="line"><span class="cl">brew install cabal-install
</span></span><span class="line"><span class="cl">brew install cairo
</span></span><span class="line"><span class="cl">brew install certbot
</span></span><span class="line"><span class="cl">brew install cliclick
</span></span><span class="line"><span class="cl">brew install cloog
</span></span><span class="line"><span class="cl">brew install cmake
</span></span><span class="line"><span class="cl">brew install cmatrix
</span></span><span class="line"><span class="cl">brew install colordiff
</span></span><span class="line"><span class="cl">brew install connect
</span></span><span class="line"><span class="cl">brew install coreutils
</span></span><span class="line"><span class="cl">brew install cowsay
</span></span><span class="line"><span class="cl">brew install cpp-netlib
</span></span><span class="line"><span class="cl">brew install cscope
</span></span><span class="line"><span class="cl">brew install ctags
</span></span><span class="line"><span class="cl">brew install curl
</span></span><span class="line"><span class="cl">brew install curl-ca-bundle
</span></span><span class="line"><span class="cl">brew install dcfldd
</span></span><span class="line"><span class="cl">brew install ddrescue
</span></span><span class="line"><span class="cl">brew install dialog
</span></span><span class="line"><span class="cl">brew install dirmngr
</span></span><span class="line"><span class="cl">brew install dnstop
</span></span><span class="line"><span class="cl">brew install docbook
</span></span><span class="line"><span class="cl">brew install docker
</span></span><span class="line"><span class="cl">brew install docker-compose
</span></span><span class="line"><span class="cl">brew install docker-machine
</span></span><span class="line"><span class="cl">brew install dos2unix
</span></span><span class="line"><span class="cl">brew install erlang
</span></span><span class="line"><span class="cl">brew install ettercap
</span></span><span class="line"><span class="cl">brew install ext4fuse
</span></span><span class="line"><span class="cl">brew install faac
</span></span><span class="line"><span class="cl">brew install fcitx-remote-for-osx
</span></span><span class="line"><span class="cl">brew install fd
</span></span><span class="line"><span class="cl">brew install fetchmail
</span></span><span class="line"><span class="cl">brew install ffind
</span></span><span class="line"><span class="cl">brew install ffmpeg
</span></span><span class="line"><span class="cl">brew install figlet
</span></span><span class="line"><span class="cl">brew install findutils
</span></span><span class="line"><span class="cl">brew install fontconfig
</span></span><span class="line"><span class="cl">brew install fortune
</span></span><span class="line"><span class="cl">brew install fping
</span></span><span class="line"><span class="cl">brew install freetype
</span></span><span class="line"><span class="cl">brew install fzf
</span></span><span class="line"><span class="cl">brew install gcc
</span></span><span class="line"><span class="cl">brew install gd
</span></span><span class="line"><span class="cl">brew install gdbm
</span></span><span class="line"><span class="cl">brew install gdk-pixbuf
</span></span><span class="line"><span class="cl">brew install gettext
</span></span><span class="line"><span class="cl">brew install gflags
</span></span><span class="line"><span class="cl">brew install gfortran
</span></span><span class="line"><span class="cl">brew install ghc
</span></span><span class="line"><span class="cl">brew install ghc@8.0
</span></span><span class="line"><span class="cl">brew install gifsicle
</span></span><span class="line"><span class="cl">brew install git
</span></span><span class="line"><span class="cl">brew install git-extras
</span></span><span class="line"><span class="cl">brew install git-flow
</span></span><span class="line"><span class="cl">brew install git-lfs
</span></span><span class="line"><span class="cl">brew install git-number
</span></span><span class="line"><span class="cl">brew install giter8
</span></span><span class="line"><span class="cl">brew install glew
</span></span><span class="line"><span class="cl">brew install glib
</span></span><span class="line"><span class="cl">brew install glog
</span></span><span class="line"><span class="cl">brew install gmp
</span></span><span class="line"><span class="cl">brew install gmp@4
</span></span><span class="line"><span class="cl">brew install gnu-getopt
</span></span><span class="line"><span class="cl">brew install gnu-sed
</span></span><span class="line"><span class="cl">brew install gnu-tar
</span></span><span class="line"><span class="cl">brew install gnu-time
</span></span><span class="line"><span class="cl">brew install gnupg
</span></span><span class="line"><span class="cl">brew install gnupg2
</span></span><span class="line"><span class="cl">brew install gnutls
</span></span><span class="line"><span class="cl">brew install go
</span></span><span class="line"><span class="cl">brew install goaccess
</span></span><span class="line"><span class="cl">brew install gobject-introspection
</span></span><span class="line"><span class="cl">brew install godep
</span></span><span class="line"><span class="cl">brew install gource
</span></span><span class="line"><span class="cl">brew install gpg-agent
</span></span><span class="line"><span class="cl">brew install gradle
</span></span><span class="line"><span class="cl">brew install grafana
</span></span><span class="line"><span class="cl">brew install graphite2
</span></span><span class="line"><span class="cl">brew install graphviz
</span></span><span class="line"><span class="cl">brew install grep
</span></span><span class="line"><span class="cl">brew install grok
</span></span><span class="line"><span class="cl">brew install groovy
</span></span><span class="line"><span class="cl">brew install gtk+
</span></span><span class="line"><span class="cl">brew install haproxy
</span></span><span class="line"><span class="cl">brew install harfbuzz
</span></span><span class="line"><span class="cl">brew install hicolor-icon-theme
</span></span><span class="line"><span class="cl">brew install html2text
</span></span><span class="line"><span class="cl">brew install htop-osx
</span></span><span class="line"><span class="cl">brew install httpie
</span></span><span class="line"><span class="cl">brew install hydra
</span></span><span class="line"><span class="cl">brew install icu4c
</span></span><span class="line"><span class="cl">brew install ifstat
</span></span><span class="line"><span class="cl">brew install iftop
</span></span><span class="line"><span class="cl">brew install imagemagick
</span></span><span class="line"><span class="cl">brew install influxdb
</span></span><span class="line"><span class="cl">brew install ipcalc
</span></span><span class="line"><span class="cl">brew install iperf
</span></span><span class="line"><span class="cl">brew install isl
</span></span><span class="line"><span class="cl">brew install isl@0.12
</span></span><span class="line"><span class="cl">brew install jansson
</span></span><span class="line"><span class="cl">brew install jemalloc
</span></span><span class="line"><span class="cl">brew install jenv
</span></span><span class="line"><span class="cl">brew install jetty
</span></span><span class="line"><span class="cl">brew install jnettop
</span></span><span class="line"><span class="cl">brew install jpeg
</span></span><span class="line"><span class="cl">brew install jq
</span></span><span class="line"><span class="cl">brew install jshon
</span></span><span class="line"><span class="cl">brew install kafka
</span></span><span class="line"><span class="cl">brew install lame
</span></span><span class="line"><span class="cl">brew install languagetool
</span></span><span class="line"><span class="cl">brew install libao
</span></span><span class="line"><span class="cl">brew install libarchive
</span></span><span class="line"><span class="cl">brew install libassuan
</span></span><span class="line"><span class="cl">brew install libconfig
</span></span><span class="line"><span class="cl">brew install libdaemon
</span></span><span class="line"><span class="cl">brew install libev
</span></span><span class="line"><span class="cl">brew install libevent
</span></span><span class="line"><span class="cl">brew install libexif
</span></span><span class="line"><span class="cl">brew install libffi
</span></span><span class="line"><span class="cl">brew install libgcrypt
</span></span><span class="line"><span class="cl">brew install libgpg-error
</span></span><span class="line"><span class="cl">brew install libiodbc
</span></span><span class="line"><span class="cl">brew install libksba
</span></span><span class="line"><span class="cl">brew install libmagic
</span></span><span class="line"><span class="cl">brew install libmpc
</span></span><span class="line"><span class="cl">brew install libnet
</span></span><span class="line"><span class="cl">brew install libpng
</span></span><span class="line"><span class="cl">brew install librdkafka
</span></span><span class="line"><span class="cl">brew install libressl
</span></span><span class="line"><span class="cl">brew install librsync
</span></span><span class="line"><span class="cl">brew install libsodium
</span></span><span class="line"><span class="cl">brew install libsoxr
</span></span><span class="line"><span class="cl">brew install libssh
</span></span><span class="line"><span class="cl">brew install libtasn1
</span></span><span class="line"><span class="cl">brew install libtermkey
</span></span><span class="line"><span class="cl">brew install libtiff
</span></span><span class="line"><span class="cl">brew install libtool
</span></span><span class="line"><span class="cl">brew install libunistring
</span></span><span class="line"><span class="cl">brew install libusb
</span></span><span class="line"><span class="cl">brew install libusb-compat
</span></span><span class="line"><span class="cl">brew install libuv
</span></span><span class="line"><span class="cl">brew install libvo-aacenc
</span></span><span class="line"><span class="cl">brew install libvterm
</span></span><span class="line"><span class="cl">brew install libxml2
</span></span><span class="line"><span class="cl">brew install libyaml
</span></span><span class="line"><span class="cl">brew install libzip
</span></span><span class="line"><span class="cl">brew install little-cms
</span></span><span class="line"><span class="cl">brew install lldpd
</span></span><span class="line"><span class="cl">brew install lrzsz
</span></span><span class="line"><span class="cl">brew install lsyncd
</span></span><span class="line"><span class="cl">brew install lua
</span></span><span class="line"><span class="cl">brew install lua52
</span></span><span class="line"><span class="cl">brew install luajit
</span></span><span class="line"><span class="cl">brew install luarocks
</span></span><span class="line"><span class="cl">brew install lynx
</span></span><span class="line"><span class="cl">brew install lz4
</span></span><span class="line"><span class="cl">brew install lzlib
</span></span><span class="line"><span class="cl">brew install lzo
</span></span><span class="line"><span class="cl">brew install makedepend
</span></span><span class="line"><span class="cl">brew install maven
</span></span><span class="line"><span class="cl">brew install mbedtls
</span></span><span class="line"><span class="cl">brew install memcache-top
</span></span><span class="line"><span class="cl">brew install memcached
</span></span><span class="line"><span class="cl">brew install mercurial
</span></span><span class="line"><span class="cl">brew install mit-scheme
</span></span><span class="line"><span class="cl">brew install mitmproxy
</span></span><span class="line"><span class="cl">brew install mongodb
</span></span><span class="line"><span class="cl">brew install mono
</span></span><span class="line"><span class="cl">brew install mp4v2
</span></span><span class="line"><span class="cl">brew install mpfr
</span></span><span class="line"><span class="cl">brew install mpg123
</span></span><span class="line"><span class="cl">brew install msgpack
</span></span><span class="line"><span class="cl">brew install msodbcsql
</span></span><span class="line"><span class="cl">brew install mssql-tools
</span></span><span class="line"><span class="cl">brew install mtr
</span></span><span class="line"><span class="cl">brew install multitail
</span></span><span class="line"><span class="cl">brew install mycli
</span></span><span class="line"><span class="cl">brew install mysql
</span></span><span class="line"><span class="cl">brew install neovim
</span></span><span class="line"><span class="cl">brew install nettle
</span></span><span class="line"><span class="cl">brew install nghttp2
</span></span><span class="line"><span class="cl">brew install nginx
</span></span><span class="line"><span class="cl">brew install nload
</span></span><span class="line"><span class="cl">brew install nmap
</span></span><span class="line"><span class="cl">brew install node
</span></span><span class="line"><span class="cl">brew install nodeenv
</span></span><span class="line"><span class="cl">brew install npth
</span></span><span class="line"><span class="cl">brew install nspr
</span></span><span class="line"><span class="cl">brew install nsq
</span></span><span class="line"><span class="cl">brew install nuget
</span></span><span class="line"><span class="cl">brew install objective-caml
</span></span><span class="line"><span class="cl">brew install ocaml
</span></span><span class="line"><span class="cl">brew install oniguruma
</span></span><span class="line"><span class="cl">brew install opencc
</span></span><span class="line"><span class="cl">brew install openssl
</span></span><span class="line"><span class="cl">brew install openssl101
</span></span><span class="line"><span class="cl">brew install openssl@1.1
</span></span><span class="line"><span class="cl">brew install openvpn
</span></span><span class="line"><span class="cl">brew install osquery
</span></span><span class="line"><span class="cl">brew install ossp-uuid
</span></span><span class="line"><span class="cl">brew install p11-kit
</span></span><span class="line"><span class="cl">brew install p7zip
</span></span><span class="line"><span class="cl">brew install pandoc
</span></span><span class="line"><span class="cl">brew install pango
</span></span><span class="line"><span class="cl">brew install pcre
</span></span><span class="line"><span class="cl">brew install perl
</span></span><span class="line"><span class="cl">brew install phantomjs
</span></span><span class="line"><span class="cl">brew install pinentry
</span></span><span class="line"><span class="cl">brew install pixman
</span></span><span class="line"><span class="cl">brew install pkg-config
</span></span><span class="line"><span class="cl">brew install plantuml
</span></span><span class="line"><span class="cl">brew install pngpaste
</span></span><span class="line"><span class="cl">brew install popt
</span></span><span class="line"><span class="cl">brew install privoxy
</span></span><span class="line"><span class="cl">brew install protobuf
</span></span><span class="line"><span class="cl">brew install proxychains-ng
</span></span><span class="line"><span class="cl">brew install pth
</span></span><span class="line"><span class="cl">brew install pwgen
</span></span><span class="line"><span class="cl">brew install python
</span></span><span class="line"><span class="cl">brew install python3
</span></span><span class="line"><span class="cl">brew install qt
</span></span><span class="line"><span class="cl">brew install qt5
</span></span><span class="line"><span class="cl">brew install r
</span></span><span class="line"><span class="cl">brew install rapidjson
</span></span><span class="line"><span class="cl">brew install rclone
</span></span><span class="line"><span class="cl">brew install readline
</span></span><span class="line"><span class="cl">brew install reattach-to-user-namespace
</span></span><span class="line"><span class="cl">brew install redis
</span></span><span class="line"><span class="cl">brew install rename
</span></span><span class="line"><span class="cl">brew install rlwrap
</span></span><span class="line"><span class="cl">brew install rmtrash
</span></span><span class="line"><span class="cl">brew install rocksdb
</span></span><span class="line"><span class="cl">brew install rsync
</span></span><span class="line"><span class="cl">brew install ruby
</span></span><span class="line"><span class="cl">brew install ruby-build
</span></span><span class="line"><span class="cl">brew install s-lang
</span></span><span class="line"><span class="cl">brew install s3cmd
</span></span><span class="line"><span class="cl">brew install sbt
</span></span><span class="line"><span class="cl">brew install scala
</span></span><span class="line"><span class="cl">brew install scons
</span></span><span class="line"><span class="cl">brew install sdl2
</span></span><span class="line"><span class="cl">brew install sdl2_image
</span></span><span class="line"><span class="cl">brew install shadowsocks-libev
</span></span><span class="line"><span class="cl">brew install shairport
</span></span><span class="line"><span class="cl">brew install shairport-sync
</span></span><span class="line"><span class="cl">brew install shared-mime-info
</span></span><span class="line"><span class="cl">brew install shyaml
</span></span><span class="line"><span class="cl">brew install siege
</span></span><span class="line"><span class="cl">brew install sleuthkit
</span></span><span class="line"><span class="cl">brew install snappy
</span></span><span class="line"><span class="cl">brew install sntop
</span></span><span class="line"><span class="cl">brew install socat
</span></span><span class="line"><span class="cl">brew install source-highlight
</span></span><span class="line"><span class="cl">brew install spark
</span></span><span class="line"><span class="cl">brew install spdylay
</span></span><span class="line"><span class="cl">brew install sphinx-doc
</span></span><span class="line"><span class="cl">brew install springboot
</span></span><span class="line"><span class="cl">brew install sqlite
</span></span><span class="line"><span class="cl">brew install sqlmap
</span></span><span class="line"><span class="cl">brew install ssh-copy-id
</span></span><span class="line"><span class="cl">brew install sshfs
</span></span><span class="line"><span class="cl">brew install sshpass
</span></span><span class="line"><span class="cl">brew install stunnel
</span></span><span class="line"><span class="cl">brew install subversion
</span></span><span class="line"><span class="cl">brew install swig
</span></span><span class="line"><span class="cl">brew install sysbench
</span></span><span class="line"><span class="cl">brew install taglib
</span></span><span class="line"><span class="cl">brew install texi2html
</span></span><span class="line"><span class="cl">brew install the_silver_searcher
</span></span><span class="line"><span class="cl">brew install thefuck
</span></span><span class="line"><span class="cl">brew install thrift
</span></span><span class="line"><span class="cl">brew install tidy-html5
</span></span><span class="line"><span class="cl">brew install tig
</span></span><span class="line"><span class="cl">brew install tinyproxy
</span></span><span class="line"><span class="cl">brew install tldr
</span></span><span class="line"><span class="cl">brew install tmate
</span></span><span class="line"><span class="cl">brew install tmux
</span></span><span class="line"><span class="cl">brew install tokyo-cabinet
</span></span><span class="line"><span class="cl">brew install tree
</span></span><span class="line"><span class="cl">brew install typescript
</span></span><span class="line"><span class="cl">brew install udns
</span></span><span class="line"><span class="cl">brew install udptunnel
</span></span><span class="line"><span class="cl">brew install unibilium
</span></span><span class="line"><span class="cl">brew install unison
</span></span><span class="line"><span class="cl">brew install unixodbc
</span></span><span class="line"><span class="cl">brew install utf8proc
</span></span><span class="line"><span class="cl">brew install vim
</span></span><span class="line"><span class="cl">brew install w3m
</span></span><span class="line"><span class="cl">brew install watch
</span></span><span class="line"><span class="cl">brew install watchman
</span></span><span class="line"><span class="cl">brew install webkit2png
</span></span><span class="line"><span class="cl">brew install webp
</span></span><span class="line"><span class="cl">brew install wget
</span></span><span class="line"><span class="cl">brew install wxmac
</span></span><span class="line"><span class="cl">brew install x264
</span></span><span class="line"><span class="cl">brew install xclip
</span></span><span class="line"><span class="cl">brew install xvid
</span></span><span class="line"><span class="cl">brew install xz
</span></span><span class="line"><span class="cl">brew install yara
</span></span><span class="line"><span class="cl">brew install yasm
</span></span><span class="line"><span class="cl">brew install yuicompressor
</span></span><span class="line"><span class="cl">brew install zookeeper
</span></span><span class="line"><span class="cl">brew install zsh
</span></span><span class="line"><span class="cl">brew install zstd
</span></span></code></pre></div><h2 id="brew-cask">Brew cask</h2>
<p><a href="https://github.com/phinze/homebrew-cask">Brew cask</a> 是类似 Brew 的管理工具，
直接提供 dmg 级别的二进制包，（Brew 是不带源码，只有对应项目所在的 URL）。</p>
<p>Brew cask 安装：</p>
<pre tabindex="0"><code>brew tap phinze/homebrew-cask
brew install brew-cask
</code></pre><p>我通过 Brew cask 安装的软件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew cask install airdisplay
</span></span><span class="line"><span class="cl">brew cask install alfred
</span></span><span class="line"><span class="cl">brew cask install aliwangwang
</span></span><span class="line"><span class="cl">brew cask install android-studio
</span></span><span class="line"><span class="cl">brew cask install apache-directory-studio
</span></span><span class="line"><span class="cl">brew cask install appcleaner
</span></span><span class="line"><span class="cl">brew cask install appium
</span></span><span class="line"><span class="cl">brew cask install atom
</span></span><span class="line"><span class="cl">brew cask install balsamiq-mockups
</span></span><span class="line"><span class="cl">brew cask install battle-net
</span></span><span class="line"><span class="cl">brew cask install bearychat
</span></span><span class="line"><span class="cl">brew cask install bee
</span></span><span class="line"><span class="cl">brew cask install bonjour-browser
</span></span><span class="line"><span class="cl">brew cask install caffeine
</span></span><span class="line"><span class="cl">brew cask install cctalk
</span></span><span class="line"><span class="cl">brew cask install dash
</span></span><span class="line"><span class="cl">brew cask install dbeaver-community
</span></span><span class="line"><span class="cl">brew cask install dingtalk
</span></span><span class="line"><span class="cl">brew cask install dotnet-sdk
</span></span><span class="line"><span class="cl">brew cask install dropbox
</span></span><span class="line"><span class="cl">brew cask install eclipse-java
</span></span><span class="line"><span class="cl">brew cask install evernote
</span></span><span class="line"><span class="cl">brew cask install filezilla
</span></span><span class="line"><span class="cl">brew cask install firefox
</span></span><span class="line"><span class="cl">brew cask install folx
</span></span><span class="line"><span class="cl">brew cask install ganttproject
</span></span><span class="line"><span class="cl">brew cask install gimp
</span></span><span class="line"><span class="cl">brew cask install github-desktop
</span></span><span class="line"><span class="cl">brew cask install gitup
</span></span><span class="line"><span class="cl">brew cask install gnucash
</span></span><span class="line"><span class="cl">brew cask install google-chrome
</span></span><span class="line"><span class="cl">brew cask install google-cloud-sdk
</span></span><span class="line"><span class="cl">brew cask install google-drive
</span></span><span class="line"><span class="cl">brew cask install google-earth
</span></span><span class="line"><span class="cl">brew cask install haroopad
</span></span><span class="line"><span class="cl">brew cask install ichm
</span></span><span class="line"><span class="cl">brew cask install icq
</span></span><span class="line"><span class="cl">brew cask install iina
</span></span><span class="line"><span class="cl">brew cask install inkscape
</span></span><span class="line"><span class="cl">brew cask install intellij-idea
</span></span><span class="line"><span class="cl">brew cask install istat-menus
</span></span><span class="line"><span class="cl">brew cask install iterm2
</span></span><span class="line"><span class="cl">brew cask install itools
</span></span><span class="line"><span class="cl">brew cask install java
</span></span><span class="line"><span class="cl">brew cask install jumpcut
</span></span><span class="line"><span class="cl">brew cask install jxplorer
</span></span><span class="line"><span class="cl">brew cask install karabiner
</span></span><span class="line"><span class="cl">brew cask install keepassx
</span></span><span class="line"><span class="cl">brew cask install kid3
</span></span><span class="line"><span class="cl">brew cask install kindle
</span></span><span class="line"><span class="cl">brew cask install kindlegen
</span></span><span class="line"><span class="cl">brew cask install krita
</span></span><span class="line"><span class="cl">brew cask install licecap
</span></span><span class="line"><span class="cl">brew cask install limechat
</span></span><span class="line"><span class="cl">brew cask install macdown
</span></span><span class="line"><span class="cl">brew cask install mactex
</span></span><span class="line"><span class="cl">brew cask install macvim
</span></span><span class="line"><span class="cl">brew cask install mat
</span></span><span class="line"><span class="cl">brew cask install mongohub
</span></span><span class="line"><span class="cl">brew cask install mono-mdk
</span></span><span class="line"><span class="cl">brew cask install musicbrainz-picard
</span></span><span class="line"><span class="cl">brew cask install mysql-utilities
</span></span><span class="line"><span class="cl">brew cask install mysqlworkbench
</span></span><span class="line"><span class="cl">brew cask install netbeans
</span></span><span class="line"><span class="cl">brew cask install neteasemusic
</span></span><span class="line"><span class="cl">brew cask install omnidisksweeper
</span></span><span class="line"><span class="cl">brew cask install osxfuse
</span></span><span class="line"><span class="cl">brew cask install phoenix
</span></span><span class="line"><span class="cl">brew cask install postman
</span></span><span class="line"><span class="cl">brew cask install proxifier
</span></span><span class="line"><span class="cl">brew cask install psequel
</span></span><span class="line"><span class="cl">brew cask install qlmarkdown
</span></span><span class="line"><span class="cl">brew cask install qq
</span></span><span class="line"><span class="cl">brew cask install qqmusic
</span></span><span class="line"><span class="cl">brew cask install qutebrowser
</span></span><span class="line"><span class="cl">brew cask install rescuetime
</span></span><span class="line"><span class="cl">brew cask install robo-3t
</span></span><span class="line"><span class="cl">brew cask install robomongo
</span></span><span class="line"><span class="cl">brew cask install screenhero
</span></span><span class="line"><span class="cl">brew cask install sequel-pro
</span></span><span class="line"><span class="cl">brew cask install shadowsocksx
</span></span><span class="line"><span class="cl">brew cask install skitch
</span></span><span class="line"><span class="cl">brew cask install slack
</span></span><span class="line"><span class="cl">brew cask install smartsynchronize
</span></span><span class="line"><span class="cl">brew cask install sourcetree
</span></span><span class="line"><span class="cl">brew cask install splayerx
</span></span><span class="line"><span class="cl">brew cask install sqlitebrowser
</span></span><span class="line"><span class="cl">brew cask install sqlpro-for-mssql
</span></span><span class="line"><span class="cl">brew cask install squirrelsql
</span></span><span class="line"><span class="cl">brew cask install steam
</span></span><span class="line"><span class="cl">brew cask install sublime-text
</span></span><span class="line"><span class="cl">brew cask install surge
</span></span><span class="line"><span class="cl">brew cask install taskwarrior-pomodoro
</span></span><span class="line"><span class="cl">brew cask install teamviewer
</span></span><span class="line"><span class="cl">brew cask install teensy
</span></span><span class="line"><span class="cl">brew cask install telegram
</span></span><span class="line"><span class="cl">brew cask install the-unarchiver
</span></span><span class="line"><span class="cl">brew cask install thunder
</span></span><span class="line"><span class="cl">brew cask install toodledo
</span></span><span class="line"><span class="cl">brew cask install tripmode
</span></span><span class="line"><span class="cl">brew cask install typora
</span></span><span class="line"><span class="cl">brew cask install universal-media-server
</span></span><span class="line"><span class="cl">brew cask install vanilla
</span></span><span class="line"><span class="cl">brew cask install vimr
</span></span><span class="line"><span class="cl">brew cask install virtualbox
</span></span><span class="line"><span class="cl">brew cask install virtualbox-extension-pack
</span></span><span class="line"><span class="cl">brew cask install viscosity
</span></span><span class="line"><span class="cl">brew cask install visual-studio-code
</span></span><span class="line"><span class="cl">brew cask install visualvm
</span></span><span class="line"><span class="cl">brew cask install vlc
</span></span><span class="line"><span class="cl">brew cask install vnc-viewer
</span></span><span class="line"><span class="cl">brew cask install wechatwebdevtools
</span></span><span class="line"><span class="cl">brew cask install wewechat
</span></span><span class="line"><span class="cl">brew cask install wifimasterkey
</span></span><span class="line"><span class="cl">brew cask install wireshark
</span></span><span class="line"><span class="cl">brew cask install wxwork
</span></span><span class="line"><span class="cl">brew cask install xamarin-studio
</span></span><span class="line"><span class="cl">brew cask install xiami
</span></span><span class="line"><span class="cl">brew cask install xmind
</span></span><span class="line"><span class="cl">brew cask install xquartz
</span></span><span class="line"><span class="cl">brew cask install yed
</span></span><span class="line"><span class="cl">brew cask install zeronet
</span></span></code></pre></div><h2 id="按键配置">按键配置</h2>
<p>（2016-02-23 update: Slate 之后，我尝试了其他的伪平铺式管理系统，最后使用了
<a href="https://github.com/kasper/phoenix">Phoenix</a>，我的配置文件在
<a href="https://github.com/alswl/.oOo./blob/master/mac/.phoenix.js">.oOo./.phoenix.js at master · alswl/.oOo.</a>）</p>
<p>作为 <a href="http://awesome.naquadah.org/">Awesome</a> 的用户，我实在是受不了 Mac
默认的按键控制，太渣。在两天狂搜之后，尝试了 Divvy / BetterTouchToll
这些按键控制软件之后，还是觉得按键不够自由，直到我发现了
<a href="https://github.com/jigish/slate">Slate</a>。</p>
<p>Slate 可以管理几乎所有按键，并进行 窗口/Workspace/Shell 控制，配合
<a href="https://github.com/BlueM/cliclick">Cliclick</a> 可以完全完成桌面控制。</p>
<p>下面是我配置的 <code>.slate</code> 文件：</p>
<p>详细代码可以参见 <a href="https://github.com/alswl/.oOo.">alswl/.oOo.</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># This is the default .slate file.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># If no ~/.slate file exists this is the file that will be used.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">config defaultToCurrentScreen <span class="nb">true</span>
</span></span><span class="line"><span class="cl">config nudgePercentOf screenSize
</span></span><span class="line"><span class="cl">config resizePercentOf screenSize
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Alias</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_left shell path:~/ <span class="s1">&#39;/usr/local/bin/cliclick m:640,400 &amp;&amp; /Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_right shell path:~/ <span class="s1">&#39;/usr/local/bin/cliclick m:1920,400 &amp;&amp; /Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_iTerm shell path:~/ <span class="s1">&#39;/Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh iTerm&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_Firefox shell path:~/ <span class="s1">&#39;/Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh Firefox&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_Google_Chrome shell path:~/ <span class="s1">&#39;/Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh Google_Chrome&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_QQ shell path:~/ <span class="s1">&#39;/Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh QQ&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">alias</span> mouse_MacVim shell path:~/ <span class="s1">&#39;/Users/alswl/dev/myproject/.oOo./local/bin/mouse_restore.sh MacVim&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Resize Bindings</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind right:alt       resize +10% +0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind left:alt        resize -10% +0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind up:alt          resize +0   -10%</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind down:alt        resize +0   +10%</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind right:ctrl;alt  resize -10% +0 bottom-right</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind left:ctrl;alt   resize +10% +0 bottom-right</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind up:ctrl;alt     resize +0   +10% bottom-right</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind down:ctrl;alt   resize +0   -10% bottom-right</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Push Bindings</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind right:ctrl;cmd  push right bar-resize:screenSizeX/3</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind left:ctrl;cmd   push left  bar-resize:screenSizeX/3</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind up:ctrl;cmd     push up    bar-resize:screenSizeY/2</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind down:ctrl;cmd   push down  bar-resize:screenSizeY/2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Nudge Bindings</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind right:shift;alt nudge +10% +0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind left:shift;alt  nudge -10% +0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind up:shift;alt    nudge +0   -10%</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind down:shift;alt  nudge +0   +10%</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Throw Bindings</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> 1:ctrl<span class="p">;</span>alt         throw <span class="m">0</span> resize
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> 2:ctrl<span class="p">;</span>alt         throw <span class="m">1</span> resize
</span></span><span class="line"><span class="cl"><span class="c1">#bind 3:ctrl;alt         throw 2 resize</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind right:ctrl;alt;cmd throw right resize</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind left:ctrl;alt;cmd  throw left  resize</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind up:ctrl;alt;cmd    throw up    resize</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind down:ctrl;alt;cmd  throw down  resize</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Focus Bindings</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> <span class="sb">`</span>:alt     sequence <span class="si">${</span><span class="nv">mouse_iTerm</span><span class="si">}</span> &gt; focus <span class="s1">&#39;iTerm&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> 1:alt     sequence <span class="si">${</span><span class="nv">mouse_Firefox</span><span class="si">}</span> &gt; focus <span class="s1">&#39;Firefox&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> 2:alt     sequence <span class="si">${</span><span class="nv">mouse_Google_Chrome</span><span class="si">}</span> &gt; focus <span class="s1">&#39;Google Chrome&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> 3:alt     sequence <span class="si">${</span><span class="nv">mouse_QQ</span><span class="si">}</span> &gt; focus <span class="s1">&#39;QQ&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> q:alt     sequence <span class="si">${</span><span class="nv">mouse_MacVim</span><span class="si">}</span> &gt; focus <span class="s1">&#39;MacVim&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> h:alt     sequence <span class="si">${</span><span class="nv">mouse_left</span><span class="si">}</span> &gt; focus left
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> l:alt     sequence <span class="si">${</span><span class="nv">mouse_right</span><span class="si">}</span> &gt; focus right
</span></span><span class="line"><span class="cl"><span class="c1">#bind up:cmd       focus up</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind down:cmd     focus down</span>
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> k:alt   focus behind
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> j:alt focus behind
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Window Hints</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind esc:cmd hint</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Toogle Application</span>
</span></span><span class="line"><span class="cl"><span class="c1">#bind `:alt toggle &#39;iTerm&#39;</span>
</span></span></code></pre></div><p>其中用到的鼠标位置记忆脚本是这样的：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">## Save</span>
</span></span><span class="line"><span class="cl"><span class="c1"># get current postion, save to last</span>
</span></span><span class="line"><span class="cl"><span class="nv">CURRENT_WINDOW</span><span class="o">=</span>iTerm
</span></span><span class="line"><span class="cl"><span class="o">[</span> -f /tmp/SLATE_M_CURR <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nv">CURRENT_WINDOW</span><span class="o">=</span><span class="sb">`</span>cat /tmp/SLATE_M_CURR<span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># save now pos</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">NOW_POS</span><span class="o">=</span><span class="sb">`</span>/usr/local/bin/cliclick p <span class="p">|</span> /usr/bin/awk <span class="s1">&#39;{print $4}&#39;</span><span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$NOW_POS</span> &gt; /tmp/SLATE_M_<span class="nv">$CURRENT_WINDOW</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Restore</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="nv">$1</span> !<span class="o">=</span> <span class="s1">&#39;&#39;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># get wanted position</span>
</span></span><span class="line"><span class="cl">        <span class="nv">POS</span><span class="o">=</span>500,400
</span></span><span class="line"><span class="cl">        <span class="o">[</span> -f /tmp/SLATE_M_<span class="nv">$1</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nv">POS</span><span class="o">=</span><span class="sb">`</span>cat /tmp/SLATE_M_<span class="nv">$1</span><span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># restore postion</span>
</span></span><span class="line"><span class="cl">        /usr/local/bin/cliclick m:<span class="nv">$POS</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">#LAST_WINDOW=iTerm</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#[ -f /tmp/SLATE_M_LAST_WINDOW ] &amp;&amp; LAST_WINDOW=`cat /tmp/SLATE_M_LAST_WINDOW`</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="nv">$1</span> &gt; /tmp/SLATE_M_CURR
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span></code></pre></div><ul>
<li>2016-02-23 updated: brew / brew cask list.</li>
<li>2017-10-09 updated: brew / brew cask list.</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Flotr2 - 我最喜欢的 Javascript 图形库[译文]</title>
      <link>https://blog.alswl.com/2012/06/flotr2/</link>
      <pubDate>Tue, 19 Jun 2012 07:03:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/06/flotr2/</guid>
      <description>原文地址：Flotr2 - my favorite javascript graph library 译者：alswl 我研究了很久，得到的终极数据可视化方案是 javascript + html ，这是唯一像样又好用的。 Gnuplot 虽然看上去不错，但是不太漂亮。 一些基于 Python 的图形化工具也有同样的问题。 Mathematica 在我看来则太正式了，所以我不怎么用它。 基于 javascript 的图形化工具其中一个巨大优势是易于共享。 通过设置 Github Page、分享链接等方法，我们都可以很方便的获取最新图表数据， 甚至可以进行交互。 那些基于 javascript 的图形化工具 有很多 javascript 图形</description>
      <content:encoded><![CDATA[<p>原文地址：<a href="http://swizec.com/blog/flotr2-my-favorite-javascript-graph-library">Flotr2 - my favorite javascript graph library</a></p>
<p>译者：<a href="http://log4d.com/2012/06/flotr2/">alswl</a></p>
<hr />
<p>我研究了很久，得到的终极数据可视化方案是 javascript + html ，这是唯一像样又好用的。</p>
<p><a href="http://www.gnuplot.info/">Gnuplot</a> 虽然看上去不错，但是不太漂亮。
一些基于 Python 的图形化工具也有同样的问题。
<a href="http://www.wolfram.com/products/mathematica/">Mathematica</a> 在我看来则太正式了，所以我不怎么用它。</p>
<p>基于 javascript 的图形化工具其中一个巨大优势是易于共享。
通过设置 Github Page、分享链接等方法，我们都可以很方便的获取最新图表数据，
甚至可以进行交互。</p>
<h2 id="那些基于-javascript-的图形化工具">那些基于 javascript 的图形化工具</h2>
<p>有很多 javascript 图形化库，从极简到复杂绚丽的风格，都极为丰富。</p>
<p>最流行的可能就是 <a href="http://d3js.org/">d3.js</a> 和 <a href="http://raphaeljs.com/">Raphael</a> 了。
他们用起来<em>相当</em>麻烦，但却能实现绚丽到超越你想象的可视化效果。</p>
<!-- more -->
<p>Raphael 还一个 web 矢量库，外观同样很漂亮。</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.41.59-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.41.59-PM.png" alt="An analytics graph in Raphael"  />


</a></p>
<p>Raphael 中的分析图表</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.12-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.12-PM.png" alt="Bubble graph in Raphael"  />


</a></p>
<p>Raphael 中的气泡图</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.31-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.42.31-PM.png" alt="A clock made with Raphael"  />


</a></p>
<p>Raphael 中的钟表时间图</p>
<p>D3.js 的愿景是帮助人们轻松的完成数据可视化，可惜事与愿违，
它弄得太复杂了。</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-3.03.35-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-3.03.35-PM.png" alt="HN top titles visualisation in d3.js"  />


</a></p>
<p>Hacker News 文章标题的可视化数据</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.31-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.31-PM.png" alt="House hunting in d3.js"  />


</a></p>
<p>用 d3.js 绘制购房信息</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.53-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.46.53-PM.png" alt="Scatterplots made with d3.js"  />


</a></p>
<p>用 d3.js 制作的散布图</p>
<h2 id="flotr2">Flotr2</h2>
<p>这些可视化工具，虽然看上去很华丽，但是<em>难以</em>使用。
他们会很浪费时间，让人捣鼓到最后却发现什么都没弄出来。
大部分 Raphael 和 d3 的功能矫正过枉了，有时我们只想要一个简单的绘图工具而已。</p>
<p>为了将<a href="http://swizec.com/blog/a-year-of-750words-com-with-shiny-graphs/swizec/4378">我去年的 750 个关键字</a>数据可视化，我使用了 <a href="http://humblesoftware.com/flotr2/">Flotr2</a>。
只花费我数分钟，就能通过操作 javascript 将数据转化成 Flotr2 能理解的函数，
然后 Flotr2 就将数据转化成漂亮的图表。</p>
<p>Flotr2 最大的优点是他没有过度设计，当你只想要一个简单图表时候，
它不会让你去操作过多东西。</p>
<p>往往只需要你设定必要的数据和一两个标签，比如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">draw_time</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">title</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span>
</span></span><span class="line"><span class="cl">	<span class="nx">start</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">DATA</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">	<span class="nx">options</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">graph</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">i</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">o</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">xaxis</span> <span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">mode</span> <span class="o">:</span> <span class="s1">&#39;time&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">labelsAngle</span> <span class="o">:</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">selection</span> <span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">mode</span> <span class="o">:</span> <span class="s1">&#39;x&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">legend</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">position</span><span class="o">:</span> <span class="s1">&#39;se&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">HtmlText</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nx">title</span> <span class="o">:</span> <span class="nx">title</span>
</span></span><span class="line"><span class="cl">	<span class="p">};</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="c1">// Draw graph with default options, overwriting with passed options
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="kd">function</span> <span class="nx">drawGraph</span> <span class="p">(</span><span class="nx">opts</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">		<span class="c1">// Clone the options, so the &#39;options&#39; variable always keeps intact.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">o</span> <span class="o">=</span> <span class="nx">Flotr</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">Flotr</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">options</span><span class="p">),</span> <span class="nx">opts</span> <span class="o">||</span> <span class="p">{});</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">		<span class="c1">// Return a new graph.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="k">return</span> <span class="nx">Flotr</span><span class="p">.</span><span class="nx">draw</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nx">container</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">options</span>
</span></span><span class="line"><span class="cl">		<span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="nx">graph</span> <span class="o">=</span> <span class="nx">drawGraph</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="nx">Flotr</span><span class="p">.</span><span class="nx">EventAdapter</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="s1">&#39;flotr:select&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">area</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">		<span class="c1">// Draw selected area
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">graph</span> <span class="o">=</span> <span class="nx">drawGraph</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">			<span class="nx">xaxis</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">min</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">x1</span><span class="p">,</span> <span class="nx">max</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span> <span class="nx">mode</span> <span class="o">:</span> <span class="s1">&#39;time&#39;</span><span class="p">,</span> <span class="nx">labelsAngle</span> <span class="o">:</span> <span class="mi">45</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">			<span class="nx">yaxis</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">min</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">y1</span><span class="p">,</span> <span class="nx">max</span> <span class="o">:</span> <span class="nx">area</span><span class="p">.</span><span class="nx">y2</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">});</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">	<span class="c1">// When graph is clicked, draw the graph with default area.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">Flotr</span><span class="p">.</span><span class="nx">EventAdapter</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="s1">&#39;flotr:click&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">graph</span> <span class="o">=</span> <span class="nx">drawGraph</span><span class="p">();});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>然后你就能获得下面这张图表：</p>
<p><a href="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.58.02-PM.png">


<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201206/Screen-Shot-2012-06-01-at-2.58.02-PM.png" alt="A graph in Flotr2"  />


</a></p>
<p>好用吧。</p>
<p>看上去蛮漂亮，符合它简洁易用的特点。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Vundle 和 Submodule</title>
      <link>https://blog.alswl.com/2012/06/vundle-submodule/</link>
      <pubDate>Mon, 11 Jun 2012 22:07:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/06/vundle-submodule/</guid>
      <description>问题背景 Vundle 是个好东西，可以用来管理 vim 配置和 vim 插件。Vundle 会将所有插件管理在 .vim/bundle/ 中，详情可看 使用 Vundle 管理 Vim 插件。 官方安装 Vundle 方法如下： $ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle 我的 Vundle 的版本是 59bff0c457f68c3d52bcebbf6068ea01ac8f5dac， git 版本是 git version 1.7.10.2 。 使用 BundleInstall 可以安装 .vimrc 中配置的插件， 我使用 git 控制 .vim 和 .vimrc 版本。在 BundleInstall 之后会导致 vundle 目录项目状态混乱，要么形成一个无法追踪的 submodule 比如 .vim/bundle/The-NERD-Commenter (untracked content) ，要么变成一个普通的文件</description>
      <content:encoded><![CDATA[<h2 id="问题背景">问题背景</h2>
<p>Vundle 是个好东西，可以用来管理 vim 配置和 vim 插件。Vundle
会将所有插件管理在 <code>.vim/bundle/</code> 中，详情可看
<a href="/2012/04/vundle/">使用 Vundle 管理 Vim 插件</a>。</p>
<p>官方安装 Vundle 方法如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
</span></span></code></pre></div><p>我的 Vundle 的版本是 <code>59bff0c457f68c3d52bcebbf6068ea01ac8f5dac</code>，
git 版本是 <code>git version 1.7.10.2</code> 。
使用 <code>BundleInstall</code> 可以安装 <code>.vimrc</code> 中配置的插件，</p>
<p>我使用 git 控制 <code>.vim</code> 和 <code>.vimrc</code> 版本。在 <code>BundleInstall</code>
之后会导致 vundle 目录项目状态混乱，要么形成一个无法追踪的
submodule 比如 <code>.vim/bundle/The-NERD-Commenter (untracked content)</code>
，要么变成一个普通的文件夹 <code>.vim/bundle/vim-markdown</code>。</p>
<!-- more -->
<h2 id="使用-submodule-管理-插件">使用 Submodule 管理 插件</h2>
<p>为了解决这个问题，我们需要先了解一点 Git 中 Submodule 的知识，详情可以查看
<a href="http://gitbook.liuhui998.com/5_10.html">Git Book 中文版 - 子模块</a>。</p>
<p>用 Submodule 来初始化 Vundle ，使用下面的语句：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git submodule add  https://github.com/gmarik/vundle.git .vim/bundle/vundle
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git submodule status <span class="c1"># 查看子模块状态</span>
</span></span><span class="line"><span class="cl"> 59bff0c457f68c3d52bcebbf6068ea01ac8f5dac .vim/bundle/vundle <span class="o">(</span>0.9.1-18-g59bff0c<span class="o">)</span>
</span></span></code></pre></div><p>Submodule 的映射是被记录在 .gitmodules 文件中的，初始化完 Vundle 之后如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="k">[submodule &#34;.vim/bundle/vundle&#34;]</span>
</span></span><span class="line"><span class="cl">        <span class="na">path</span> <span class="o">=</span> <span class="s">.vim/bundle/vundle
</span></span></span><span class="line"><span class="cl"><span class="s">        url = https://github.com/gmarik/vundle.git</span>
</span></span></code></pre></div><h2 id="最佳实践">最佳实践</h2>
<p>使用 Submodule 能够很完美的控制 Vundle 管理下的 Vim 插件。
可惜 Vundle 无法自动帮我们初始化插件的 Submodule。曾经也有热心用户建议 Vundle
加上这个功能：[https://github.com/gmarik/vundle/pull/41](Init/update submodules in git bundles)。
不过 Vundle 的作者很残暴的拒绝了，他认为 Vim 插件可能需要深入定制，
因此不希望使用 Submodule 来管理插件。</p>
<p>我崇尚自动化构建，甚至宁愿牺牲一些所谓的定制，
少量的修改我可以放弃 Vundle 而手工管理。我琢磨了一下我的最佳实践：</p>
<p>使用 Submodule 来初始化 <code>.vim/bundle/vundle</code>，然后在使用 <code>BundleInstall</code>
来安装其它插件。两个步骤分别为：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git submodule add  https://github.com/gmarik/vundle.git .vim/bundle/vundle
</span></span><span class="line"><span class="cl">vim +BundleInstall
</span></span></code></pre></div><p>大功告成，既能享受插件升级带来的优势，又可以使用 Vundle 统一管理，管理 vim
环境甚为方便。我的 Vim 配置文件在
[https://github.com/alswl/dotfiles](alswl / dotfiles)，还包括 Awesome
/ 按键映射等等配置。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Vim 下模拟 Emacs 键绑定</title>
      <link>https://blog.alswl.com/2012/04/vim-emacs-key-binding/</link>
      <pubDate>Fri, 20 Apr 2012 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/04/vim-emacs-key-binding/</guid>
      <description>Vimer 需要 Emacs 键绑定？看上去很蛋疼的需求吧。其实不然，大部分的 Shell / Readline 默认绑定的是 Emacs 键位绑定（处于输入状态下，Emacs 的键位很好用）。Vim 的模式切换很牛逼，但是 Insert 模式下面，只有寥寥几个快捷键，我修改了配置文件，绑定需要的 Emcas 按键到 Vim 中来。 Github 中搜索关键字 Vim Emcas key bind，出来一些结果，不是很完美，我又慢慢调教了几个星期，放出我的 .vimrc。 &amp;#34; 模拟 Emacs 键绑定 &amp;#34; Move inoremap &amp;lt;C-a&amp;gt; &amp;lt;Home&amp;gt; inoremap &amp;lt;C-e&amp;gt; &amp;lt;End&amp;gt; &amp;#34;inoremap &amp;lt;C-p&amp;gt; &amp;lt;Up&amp;gt; &amp;#34;inoremap &amp;lt;C-n&amp;gt; &amp;lt;Down&amp;gt; inoremap &amp;lt;C-b&amp;gt; &amp;lt;Left&amp;gt; inoremap &amp;lt;C-f&amp;gt; &amp;lt;Right&amp;gt; inoremap &amp;lt;M-b&amp;gt; &amp;lt;C-o&amp;gt;b inoremap &amp;lt;M-f&amp;gt; &amp;lt;C-o&amp;gt;w</description>
      <content:encoded><![CDATA[<p>Vimer 需要 Emacs 键绑定？看上去很蛋疼的需求吧。其实不然，大部分的 Shell / Readline 默认绑定的是 Emacs 键位绑定（处于输入状态下，Emacs 的键位很好用）。Vim 的模式切换很牛逼，但是 Insert 模式下面，只有寥寥几个快捷键，我修改了配置文件，绑定需要的 Emcas 按键到 Vim 中来。</p>
<p>Github 中搜索关键字 Vim Emcas key bind，出来一些结果，不是很完美，我又慢慢调教了几个星期，放出我的 .vimrc。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="s2">&#34; 模拟 Emacs 键绑定
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span> Move
</span></span><span class="line"><span class="cl">inoremap &lt;C-a&gt; &lt;Home&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-e&gt; &lt;End&gt;
</span></span><span class="line"><span class="cl"><span class="s2">&#34;inoremap &lt;C-p&gt; &lt;Up&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span>inoremap &lt;C-n&gt; &lt;Down&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-b&gt; &lt;Left&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-f&gt; &lt;Right&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;M-b&gt; &lt;C-o&gt;b
</span></span><span class="line"><span class="cl">inoremap &lt;M-f&gt; &lt;C-o&gt;w
</span></span><span class="line"><span class="cl"><span class="s2">&#34; Rubout word / line and enter insert mode
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span> use &lt;Esc&gt;&lt;Right&gt; instead of &lt;C-o&gt;
</span></span><span class="line"><span class="cl">inoremap &lt;C-w&gt; &lt;Esc&gt;dbcl
</span></span><span class="line"><span class="cl"><span class="s2">&#34; delete
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;C-u&gt; &lt;Esc&gt;d0cl
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;C-k&gt; &lt;Esc&gt;&lt;Right&gt;C
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;C-d&gt; &lt;Esc&gt;&lt;Right&gt;s
</span></span></span><span class="line"><span class="cl"><span class="s2">inoremap &lt;M-d&gt; &lt;C-o&gt;de
</span></span></span></code></pre></div><p>需要的朋友请取用，我的 Vim 配置文件和插件在 <a href="https://github.com/alswl/.oOo.">https://github.com/alswl/.oOo.</a> 。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用 Vundle 管理 Vim 插件</title>
      <link>https://blog.alswl.com/2012/04/vundle/</link>
      <pubDate>Sat, 14 Apr 2012 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/04/vundle/</guid>
      <description>早在这个月初，我就在 Vim 的邮件列表看到了一封关于 Vim 插件管理的 邮件。 才惊呼原来有这么强大的插件可以用来管理我那一坨插件， 今天细细阅读并查了一些资料，变开始配置自己的 Vim。 几种管理插件 Vim 的插件管理工具有蛮多，比如： Vundle vim-addon-manager vpathogen.vim vvundle vvimana 一位同学自己写的 Vim-addon-manager 和 vimana 的对比，参见 Vim的插件管理工具 我最会选择了 Vundle，通过子目录管理插件，支持 Git 更新。 我其实不太喜欢子目录，觉得目录太多看着烦，但是考虑到在没有一个良好的</description>
      <content:encoded><![CDATA[<p>早在这个月初，我就在 Vim 的邮件列表看到了一封关于 Vim 插件管理的
<a href="https://groups.google.com/d/topic/vim-cn/mPES0sNT87Q/discussion">邮件</a>。
才惊呼原来有这么强大的插件可以用来管理我那一坨插件，
今天细细阅读并查了一些资料，变开始配置自己的 Vim。</p>
<h2 id="几种管理插件">几种管理插件</h2>
<p>Vim 的插件管理工具有蛮多，比如：</p>
<ul>
<li><a href="https://github.com/gmarik/vundle">Vundle</a></li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=2905">vim-addon-manager</a></li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=2332">vpathogen.vim</a></li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=3458">vvundle</a></li>
<li><a href="https://github.com/c9s/Vimana">vvimana</a></li>
<li><a href="http://www.douban.com/note/173144456/">一位同学自己写的</a></li>
</ul>
<p>Vim-addon-manager 和 vimana 的对比，参见
<a href="http://yixf.name/2011/10/26/vim%E7%9A%84%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/">Vim的插件管理工具</a></p>
<p>我最会选择了 Vundle，通过子目录管理插件，支持 Git 更新。
我其实不太喜欢子目录，觉得目录太多看着烦，但是考虑到在没有一个良好的 PKG
包描述文件的前提下，分子目录是一种简单有效的方法。</p>
<!-- more -->
<p>Vundle 通过 git 来对插件进行更新，有三种源可以添加：</p>
<ul>
<li>github 中 vim-scripts 的项目（这个账号是为 Pathogen 建的，用来建立对 Vim.org 上脚本的镜像）</li>
<li>github 某个 Vim 插件项目</li>
<li>某个 git 源</li>
</ul>
<p>以上也是我推荐的选择插件顺序，我认为没有必要去取最新的开发版插件。</p>
<h2 id="vundle-安装">Vundle 安装</h2>
<p>无二话，官方文档的 <a href="https://github.com/gmarik/vundle">Quick Start</a>
写的很详细 ，一句话：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
</span></span></code></pre></div><p>然后开始配置 .vimrc，我的 <a href="https://github.com/alswl/dotfiles/blob/master/.vimrc">.vimrc</a></p>
<p>重点是配置各种 <code>Bundle</code> 我的配置如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-vim" data-lang="vim"><span class="line"><span class="cl"><span class="c">&#34; My Bundles here:</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; vim-scripts repos</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Syntax</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;asciidoc.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;confluencewiki.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;html5.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;JavaScript-syntax&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;mako.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;moin.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;python.vim--Vasiliev&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;xml.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Color</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;desert256.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;Impact&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;matrix.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;vibrantink&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;vividchalk.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Ftplugin</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;python_fold&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Indent</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;indent/html.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;IndentAnything&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;Javascript-Indentation&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;mako.vim--Torborg&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;gg/python.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">
</span></span></span><span class="line"><span class="cl"><span class="c">&#34; Plugin</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;The-NERD-tree&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;AutoClose--Alves&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;auto_mkdir&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;cecutil&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;fcitx.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;FencView.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;FuzzyFinder&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;jsbeautify&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;L9&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;Mark&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;matrix.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;mru.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;The-NERD-Commenter&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;project.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;restart.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;taglist.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;templates.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">&#34;Bundle &#39;vimim.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;ZenCoding.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;css_color.vim&#39;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="nx">Bundle</span> <span class="s1">&#39;hallettj/jslint.vim&#39;</span><span class="err">
</span></span></span></code></pre></div><p>需要注意的是，Vim 插件名称可能存在重名的情况，这时候就需要在插件后面加上作者的姓氏，
比如 <code>Bundle 'Javascript-Indentation'</code> ，而遇到插件名有空格和斜杠的话，
需要将空格和斜杠替换为 <code>-</code> 。</p>
<p>执行 <code>BundleInstall</code> 即可完成安装，如果出现错误提示，多半是名称有问题，
去 github 和 vim.org 搜索一下吧。</p>
<p>更多参考：</p>
<ul>
<li><a href="http://blog.houqp.me/use-vundle-to-manage-your-plugins/">Vim插件管理利器——Vundle</a></li>
<li><a href="http://www.cnblogs.com/qiangji/archive/2011/07/31/Vundle.html">使用Vundle 来管理 Vim 插件</a></li>
</ul>
<p>ps：这篇文章使用 Markdown 写的，以前都是用 Asciidoc 写，貌似是由于 github 带动，
Mardown 自 2010 年之后使用人群猛涨，证据在此，上图是 Markdown，下图是 Asciidoc</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201204/markdown-asciidoc.png" alt="Markdown vs Asciidoc"  />

</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Chrome 独立代理设置</title>
      <link>https://blog.alswl.com/2012/03/chrome-proxy/</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2012/03/chrome-proxy/</guid>
      <description>Chrome 在2011年4月份时候，加入了两个新的实验性扩展分支，分别是 Web Navigation Extension API 以及 Proxy Extension API， 通过他们，可以让 Chrome 使用自己独立的代理。 借助这个新功能，我们可以通过 SwitchySharp 使用某个 list 完成部分网址代理。 我的环境： Arch Linux / Chromiun(17.0.963.78) / Proxy SwitchySharp 1.9.38。 安装 Proxy SwitchySharp 由于 SwitchyPlus 停止维护， 因此这里我使用 Proxy SwitchySharp。 Proxy SwitchySharp 介绍如下： 轻松快捷地管理和切换多个代理设置。基于 &amp;ldquo;Proxy Switchy!&amp;rdquo; 和 &amp;ldquo;SwitchyPlus&amp;rdquo; 开发。 使用 SwitchySharp 和 GFW List 的图文教程（一次成功，无需重启） http://is.gd/swap2 注</description>
      <content:encoded><![CDATA[<p>Chrome 在2011年4月份时候，加入了两个新的实验性扩展分支，分别是 Web Navigation Extension API 以及 Proxy
Extension API， 通过他们，可以让 Chrome 使用自己独立的代理。</p>
<p>借助这个新功能，我们可以通过 SwitchySharp 使用某个 list 完成部分网址代理。</p>
<p>我的环境： Arch Linux / Chromiun(17.0.963.78) / Proxy SwitchySharp 1.9.38。</p>
<h2 id="安装-proxy-switchysharp">安装 Proxy SwitchySharp</h2>
<p>由于 <a href="http://code.google.com/p/switchyplus/">SwitchyPlus</a> 停止维护， 因此这里我使用 <a href="http://code.google.com/p/switchysharp/">Proxy
SwitchySharp</a>。</p>
<p>Proxy SwitchySharp 介绍如下：</p>
<blockquote>
<p>轻松快捷地管理和切换多个代理设置。基于 &ldquo;Proxy Switchy!&rdquo; 和 &ldquo;SwitchyPlus&rdquo; 开发。
使用 SwitchySharp 和 GFW List 的图文教程（一次成功，无需重启）  <a href="http://is.gd/swap2">http://is.gd/swap2</a></p>
<p><strong>注意！我无法在这个页面回复你的提问。如果有任何故障反馈、求助、建议，请移步项目主页，谢谢！=&gt; <a href="http://code.google.com/p/switchysharp/issues/entry">http://code.google.com/p/switchysharp/issues/entry</a></strong></p>
<p>特色：</p>
<ul>
<li>使用 Chrome 代理 API，只修改浏览器代理设置，不修改系统代理设置。</li>
<li>支持自动切换模式，可根据 URL 使用不同的代理情景模式。</li>
<li>可导入、导出设置。</li>
<li>支持在线列表，且能兼容 GFW List 。</li>
<li>使用事件监视代理更改，更高效准确。</li>
<li>支持改进的快速切换模式，随意在代理之间切换。</li>
</ul>
<p>为什么我要做这个扩展？ =&gt;</p>
<p>由于 @gh05tw01f 停止支持和更新 SwitchyPlus 项目，我决定自己对其代码进行修改。</p>
<p>在自己用的同时，本着开源的精神，我也将项目使用 GPL 授权，并上传至商店方便各位使用。</p>
<p>为什么你应该从 SwitchyPlus 转移到 SwitchySharp ？=&gt;</p>
<p>最重要的原因是， SwitchyPlus 项目已经不再更新，作者也不提供支持。而本项目还在开发过程中，提供支持和更新。</p>
<p>其次，此扩展支持设置的导入导出，这是 SwitchyPlus 中没有的功能。</p>
<p>最后，此扩展修复了 SwitchyPlus 中的很多 bug ，且增加了很多激动人心（？）的新功能，如一键切换中使用自动切换模式等。</p>
</blockquote>
<p>相关链接：[安装地址](<a href="https://chrome.google.com/webstore/detail/dpplabbmogkhghncfbfdeeok">https://chrome.google.com/webstore/detail/dpplabbmogkhghncfbfdeeok</a>
oefdjegm?hl=zh_CN)</p>
<h2 id="配置-proxy-switchysharp">配置 Proxy SwitchySharp</h2>
<ul>
<li>在Chrome地址栏输入 about:flags 找到&quot;实验性扩展程序 API&quot;启用并重启浏览器。 （新版本可以不勾选）</li>
<li>勾选在隐身模式下启用。</li>
</ul>
<p>配置主界面如下：</p>
<p><a href="../../static/images/upload_dropbox/201203/switchysharp_1.png"> 




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201203/switchysharp_1.png" alt="SwitchySharp config"  />

 </a></p>
<p>其中的 HTTP 代理和端口，根据自己的需要填写。</p>
<p>相关链接： <a href="http://youcan.hourb.com/archives/19">让Chrome浏览器用上独立的代理 | 非诚勿扰</a></p>
<h2 id="socks-用户的福音">Socks 用户的福音</h2>
<p>Chrome 是不支持 socks 类型的代理服务器的（<a href="http://code.google.com/p/chromium/issues/detail?id=29914">bug
地址</a>），所以类似 <code>ssh -D</code>
建立的 socks 连接都会无法使用，我们需要通过 Privoxy 来将 socks 转换到 http。</p>
<p>Arch Linux 下安装 Privoxy，其他发行版也是类似。</p>
<pre><code>pacman -S privoxy
</code></pre>
<p>配置 Privoxy，修改 <code>/etc/privoxy/config</code> 添加一行：</p>
<pre><code>forward-socks5 / 127.0.0.1:7070 .
</code></pre>
<p>注意上面的空格和末尾的点。</p>
<p>配置好 Privoxy 后，重启服务，Privoxy 默认在 8118 端口提供服务，可以使用 <code>127.0.0.1:8118</code> 来访问代理服务器。</p>
<p>参考链接：</p>
<ul>
<li>[ssh socks5 转 http « 细节的力量](<a href="http://xijie.wordpress.com/2009/12/08/ssh-">http://xijie.wordpress.com/2009/12/08/ssh-</a>
socks5-%E8%BD%AC-http-3/) * <a href="http://www.privoxy.org/">Privoxy - Home Page</a></li>
</ul>
<h2 id="使用某个-list">使用某个 list</h2>
<p>这事不能说太细，看图说话。</p>
<p><a href="../../static/images/upload_dropbox/201203/switchysharp_2.png"> 




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201203/switchysharp_2.png" alt="SwitchySharp config"  />

 </a></p>
<p>注意将某 list 加入切换规则，否则会无法获取 appspot 中的内容。</p>
<p>参考链接：https://autoproxy.org/zh-CN/node/61 （自备梯子）</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用MoinMoin作为个人KMS</title>
      <link>https://blog.alswl.com/2011/12/moinmoin-kms/</link>
      <pubDate>Mon, 26 Dec 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/12/moinmoin-kms/</guid>
      <description>去年9月份时候，我写过一篇《我所使用的知识管理系统》 来介绍我使用的KMS系统。当时经过我层层筛选之后，我选用了Wiz作为我的KMS。 一年多过去了，Wiz在Windows下面工作的非常不错，Wiz团队里陆续推出了iOS / Android / Web版本。我的Wiz收藏的内容也增加到近1000篇。 此时我遇到了KMS再选型的问题，原因很简单：我全线转换到Linux平台， Wiz不符合我的要求了。 我重新整理一下我要求KMS的</description>
      <content:encoded><![CDATA[<p>去年9月份时候，我写过一篇《<a href="http://log4d.com/2010/09/my-kms">我所使用的知识管理系统</a>》
来介绍我使用的KMS系统。当时经过我层层筛选之后，我选用了Wiz作为我的KMS。</p>
<p>一年多过去了，Wiz在Windows下面工作的非常不错，Wiz团队里陆续推出了iOS / Android /
<a href="http://service.wiz.cn/web/">Web</a>版本。我的Wiz收藏的内容也增加到近1000篇。</p>
<p>此时我遇到了KMS再选型的问题，原因很简单：我全线转换到Linux平台， Wiz不符合我的要求了。</p>
<p>我重新整理一下我要求KMS的特性：</p>
<ul>
<li>跨平台：Linux / Web / iOS / Android / Windows</li>
<li>数据保存格式：移植方便，将图片保存到本地</li>
<li>数据采集方式：支持网络直接拷贝复制</li>
<li>数据索引：支持分类 + tag</li>
<li>协同工作：方便的分享机制</li>
<li>免费</li>
</ul>
<p>经过我历时N月的搜寻筛选，MoinMoin Wiki中标了！</p>
<h2 id="1-关于moinmoin">1. 关于MoinMoin</h2>
<p>MoinMoin是使用Python编写的Wiki实现，MoinMoin当前版本1.9。</p>
<p>MoinMoin的优点是：</p>
<ul>
<li>安装简单;</li>
<li>支持中文全文检索；</li>
<li>汉化较好；</li>
<li>不依赖外界的数据库, 使用纯文本保存, 备份非常容易, 直接复制即可。</li>
<li>支持从html转换到MoinMoin Wiki格式，纯文本的wiki格式比html来的更纯粹，只保存需要的数据，而不保存冗余的样式，MoinMoin这点做的非常好，支持几乎全部html标记的转换。</li>
</ul>
<h2 id="2-安装moinmoin">2. 安装MoinMoin</h2>
<p>MoinMoin基于Python，因此安装比基于php的MediaWiki麻烦一点。</p>
<p>你也可以参考<a href="http://moinmo.in/HowTo">官方安装指导（英文）</a>，里面有 Ubuntu / CentOS / SuSE
等系统的安装方法。</p>
<h3 id="21-使用moinmoin桌面版最简单">2.1. 使用MoinMoin桌面版（最简单）</h3>
<p>好在有MoinMoin下载包里面包含了简单的可执行版本，只需3个步骤就可以运行了。</p>
<ol>
<li>下载 MoinMoin <a href="https://moinmo.in/MoinMoinDownload">MoinMoinDownload - MoinMoin</a></li>
<li>解压缩到合适的目录（安装目录）</li>
<li>运行目录下面的 <code>wikiserver.py</code>
<ol>
<li>Linux/Unix：在命令行里面运行 <code>wikiserver.py</code></li>
<li>Mac：在 <code>wikiserver.py</code> 上面点击右键，选择 <code>open with...</code> - <code>All Applications</code> - <code>Always Open With</code> - <code>Terminal.app</code></li>
<li>Windows：下载 <a href="http://www.python.org/download/">Python</a> （2.5-2.6）， 安装之后双击 <code>wikiserver.py</code> 运行。</li>
</ol>
</li>
</ol>
<p>安装好之后，打开浏览器，在地址栏输入 <a href="http://localhost:8080/">http://localhost:8080/</a> 即可访问。</p>
<p>PS：如果你将MoinMoin安装的优盘，甚至可以做成移动知识库哦~</p>
<p>更多可以参考 <a href="http://moinmo.in/DesktopEdition">官方DesktopEdition帮助文档（英文）</a></p>
<h3 id="22-nginxuwsgi方式程序员适用">2.2. nginx+uWsgi方式（程序员适用）</h3>
<p><code>wikiserver.py</code> 虽然可以运行，但是作为开发者，我当然要使用效率更高的方式。 运行Python Web应用需要
<code>Appach / ngnix + CGI / FastCGI / uWSGI</code> 环境。 我这里使用nginx + uWSGI进行环境配置。</p>
<p>Google了N多资料之后，这篇 <a href="http://typedef.me/2011/08/30/archlinux-nginx-uwsgi-moinmoin-setup">ArchLinux 下使用 Nginx + uWSGI 部署 MoinMoin</a>
最是详细，另外还可以参考 <a href="http://garfileo.is-programmer.com/2011/4/24/run-moinmoin-on-uwsgi-and-nginx.26347.html">运行在 nginx 与 uwsgi 之上的 moinmoin</a>。</p>
<p>我将主要步骤和我的一些修改列出来。</p>
<h4 id="221-安装需要软件">2.2.1. 安装需要软件</h4>
<p>我当前系统是Arch，运行一下命令安装，其他系统也类似</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pacman -S nginx moinmoin
</span></span><span class="line"><span class="cl">yaourt uwsgi
</span></span></code></pre></div><h4 id="222-配置moinmoin">2.2.2. 配置MoinMoin</h4>
<p>默认情况下，moinmoin 被安装在了 <code>/usr/lib/python2.7/site-packages/MoinMoin</code> 和
<code>/usr/moin/share</code> 这两个目录下。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> /usr/share/moin/
</span></span><span class="line"><span class="cl">ln -s /usr/share/moin/server/moin.wsgi .
</span></span><span class="line"><span class="cl">ln -s /usr/share/moin/config/wikiconfig.py .
</span></span></code></pre></div><h4 id="223-配置nginx">2.2.3. 配置nginx</h4>
<p>在上文的基础上，我做了一些小修改，我的nginx站点配置如下，我没有使用端口9090 作为uwsgi的监听端口，而是使用了UNIX
Sock，这样相对安全一些。</p>
<p>ps：貌似这个版本的uwsgi 0.9.9.2有点小问题，无法在 <code>/var/run</code> 里面创建sock， 我只能将 <code>uwsgi.sock</code> 放在
<code>/tmp</code> 里面</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">server</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kn">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">server_name</span>  <span class="s">wiki.localhost</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">location</span> <span class="s">/</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kn">include</span> <span class="s">uwsgi_params</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="c1">#uwsgi_pass 127.0.0.1:9090;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="kn">uwsgi_pass</span> <span class="s">unix:/tmp/uwsgi.sock</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="kn">uwsgi_param</span> <span class="s">UWSGI_PYHOME</span> <span class="s">/usr/lib/python2.7/site-packages/MoinMoin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="kn">uwsgi_param</span> <span class="s">UWSGI_CHDIR</span> <span class="s">/usr/share/moin</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="kn">uwsgi_param</span> <span class="s">UWSGI_SCRIPT</span> <span class="s">moin_wsgi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># vim: set ft=conf:
</span></span></span></code></pre></div><h4 id="224-配置启动文件">2.2.4. 配置启动文件</h4>
<p>因为使用 UNIX Sock 连接，所以 <code>/etc/rc.d/uwsgi</code> 启动文件也略做修改（ Ubunt 的启动配置文件在
<code>/etc/init.d/</code> 下面）， 加入了 <code>SOCK</code> ，同时我为 uwsgi 指定运行用户 <code>http</code> ，避免root启动带来的安全隐患。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">#PORT=9090</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">SOCK</span><span class="o">=</span>/tmp/uwsgi.sock
</span></span><span class="line"><span class="cl"><span class="nv">PROCESSES</span><span class="o">=</span><span class="m">4</span>
</span></span><span class="line"><span class="cl"><span class="nv">USER</span><span class="o">=</span><span class="nv">httpLOG</span><span class="o">=</span>/var/log/uwsgi.log
</span></span><span class="line"><span class="cl"><span class="nv">PID</span><span class="o">=</span><span class="sb">`</span>pidof -o %PPID /usr/bin/uwsgi<span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">. /etc/rc.conf
</span></span><span class="line"><span class="cl">. /etc/rc.d/functions
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">case</span> <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2">&#34;</span> in
</span></span><span class="line"><span class="cl">	start<span class="o">)</span>
</span></span><span class="line"><span class="cl">		stat_busy <span class="s2">&#34;Starting uwsgi&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">[</span> -n <span class="s2">&#34;</span><span class="nv">$PID</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">			stat_busy <span class="s2">&#34;uwsgi is already running&#34;</span>
</span></span><span class="line"><span class="cl">			stat_die
</span></span><span class="line"><span class="cl">		<span class="k">else</span>
</span></span><span class="line"><span class="cl">			<span class="c1">#uwsgi --uid $USER -s &#34;:$PORT&#34; -M -p $PROCESSES -d $LOG &amp;&gt; /dev/null # use socket port</span>
</span></span><span class="line"><span class="cl">			uwsgi --uid <span class="nv">$USER</span> --socket <span class="nv">$SOCK</span> -M -p <span class="nv">$PROCESSES</span> -d <span class="nv">$LOG</span> <span class="p">&amp;</span>&gt; /dev/null <span class="c1"># use unix sock</span>
</span></span><span class="line"><span class="cl">			add_daemon uwsgi
</span></span><span class="line"><span class="cl">			stat_done
</span></span><span class="line"><span class="cl">		<span class="k">fi</span>
</span></span><span class="line"><span class="cl">		<span class="p">;;</span>
</span></span><span class="line"><span class="cl">	stop<span class="o">)</span>
</span></span><span class="line"><span class="cl">		stat_busy <span class="s2">&#34;Stopping uwsgi&#34;</span>
</span></span><span class="line"><span class="cl">		killall -QUIT uwsgi <span class="p">&amp;</span>&gt; /dev/null
</span></span><span class="line"><span class="cl">		rm_daemon uwsgi
</span></span><span class="line"><span class="cl">		stat_done
</span></span><span class="line"><span class="cl">		<span class="p">;;</span>
</span></span><span class="line"><span class="cl">	restart<span class="o">)</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$0</span> stop
</span></span><span class="line"><span class="cl">		sleep <span class="m">1</span>
</span></span><span class="line"><span class="cl">		<span class="nv">$0</span> start
</span></span><span class="line"><span class="cl">		<span class="p">;;</span>
</span></span><span class="line"><span class="cl">	*<span class="o">)</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;usage: </span><span class="nv">$0</span><span class="s2"> {start|stop|restart}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">esac</span>
</span></span><span class="line"><span class="cl"><span class="nb">exit</span> <span class="m">0</span>
</span></span></code></pre></div><h2 id="3-image2attach">3. Image2Attach</h2>
<p>去年我选择Wiz而不选择Wiki类产品时候，是考虑到一个图片保存本地化的问题。 即保存一篇网页时候，要将里面的图片保存到本地，而不是使用链接方式保存，
因为由于各种不可预测的原因，原始图片数据很有可能丢失或者无法连接。</p>
<p>Wiz使用的方案是使用mht格式将图片保存在问题，而大部分 Wiki，包括 MoinMoin 都以 文本的形式保存数据，那就无法保存远程图片了。</p>
<p>经我研究，MoinMoin 中有附件的方法可以保存文件，并且当这种附件存放的是图片文件时， 也可以直接使用 <code>{{attachment:xxx.jpg}}</code>
这样的 Wiki 语法来查看图片。</p>
<p>我尝试在 MoinMoin 插件库里面找将远程图片本地化的插件未果，于是就花了一个星期左右 时间写了一个实现这样功能的插件 Image2Attach。</p>
<p>更多使用可以参考这篇文章 <a href="http://log4d.com/2011/12/moinmoin-plugin-image2attach">MoinMoin plugin: image2attach v0.0.2 released</a></p>
<p>所以说，当程序员就是好，功能没有就自己实现呗。</p>
<h2 id="4-moinmoin的简单上手">4. MoinMoin的简单上手</h2>
<p><a href="http://zhanggang.net/">@张刚</a> 同学发邮件给我和我交流了两个问题，我顺便整理到这里。（2011-12-28更新）</p>
<h3 id="安装语言包">安装语言包</h3>
<ul>
<li>首先请确保当前登录账户是超级用户，超级用户设置在 <code>/usr/share/moin/wikiconfig.py</code> （可能路径有所差异）里面的 <code>superuser = [u&quot;yourid&quot;]</code> ，加入你需要设定的用户id</li>
<li>中文界面会根据浏览器语言设定获取，而相应的中文帮助文件默认没有安装，我建议安装。安装步骤如下：
<ul>
<li>访问http://localhost/LanguageSetup，里面有安装文档链接http://localhost/LanguageSetup?action=language_setup</li>
<li>在http://wiki.localhost/LanguageSetup?action=language_setup中，选择 <code>Simplified_Chinese</code> 点击最下面 <code>all_pages</code></li>
<li>同时我也建议安装英文版本的 <code>all_pages</code> ，因为中文有一些翻译不全。</li>
</ul>
</li>
</ul>
<p>更多的中文信息你可以访问<a href="http://master.moinmo.in/%E9%A6%96%E9%A1%B5">MoinMoin主版本中文网站</a>。</p>
<h3 id="如何加入内容">如何加入内容</h3>
<p>下面是我自己总结的步骤，目前工作的还不错。</p>
<ul>
<li>进入新页面http://localhost/newpage，如果不存在就会创建新页面</li>
<li>默认是文本模式编辑器，切换到图形编辑模式（默认编辑器可以在个人设置里面修改）</li>
<li>从某个网页粘帖内容到图形编辑模式（这个图形编辑器是CKEditor的精简版）。</li>
<li>查看图形编辑器原始码，再返回&quot;所见即所得&quot;状态（这个步骤可以去除一些空格）</li>
<li>返回文本模式编辑器，MoinMoin会自动转换html-&gt;wiki（目前我遇到3个bug，中文开头空格/BR换行/fieldset，前两个我已经修 复，diff文件在<a href="../../static/images/upload_dropbox/201112/moinmoin.diff">diff</a>）</li>
<li>人工审核一下wiki，也顺便仔细看看文章内容</li>
<li>加入Category，预览，保存</li>
</ul>
<h2 id="5-moinmoin的一些修改">5. MoinMoin的一些修改</h2>
<p>在使用MoinMoin这段时间，我发现了一些小问题，就对源码做了一些小修改。 当然如果你觉得麻烦，不做这些修改也一样可以使用的很好。</p>
<p>我修改了 <code>/usr/lib/python2.7/site-packages/MoinMoin/converter/text_html_text_moin_wiki.py</code> 这个文件。点击 <a href="../../static/images/upload_dropbox/201112/moinmoin.diff">diff文件</a>下载。</p>
<h2 id="6-wiz转moinmoin经验">6. wiz转MoinMoin经验</h2>
<p>Wiz中数据存储格式其实是mht，微软的鸟东西，数据转换颇为不方便。</p>
<p>第一种方法是借助Wiz Web服务，Wiz小组推出的 <a href="http://service.wiz.cn/web">Web服务</a> 可以很方便的查看所有同步
过的内容，里面就是标准的html代码了，直接可以复制粘帖。Wiz的Web端图片也不用 Cookie认证，取到图片地址就可以抓取了。</p>
<p>另一种办法就是使用Wiz的导出功能，导出成mht格式， 然后使用MoinMoin站点提供的插件
<a href="http://moinmo.in/MicrosoftWordConverter">Word2Moin</a> 脚本进行转换。</p>
<p>我使用的方法是第一种。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Gource-可视化你的代码历史</title>
      <link>https://blog.alswl.com/2011/11/gource/</link>
      <pubDate>Sat, 26 Nov 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/11/gource/</guid>
      <description>昨天我在sunng 那里看到一个非常好玩的东西Gource。 Gource可以将代码版本控制系统里面的日志全部可视化， 所谓可视化就是可以看见每个成员在系统里面提交代码的行为。 Gource目前支持git/hg/svn，cvs通过一个简单的脚本也可以被Gource支持。 官方视频在这里[Gource - Software Version Control Visualization Tool](http://www.youtu be.com/watch?v=E5xPMW5fg48&amp;amp;feature=player_emb</description>
      <content:encoded><![CDATA[<p>昨天我在<a href="http://sunng.info/blog/2011/10/clojalk-scm-visualization/">sunng</a>
那里看到一个非常好玩的东西<a href="http://code.google.com/p/gource/">Gource</a>。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201111/gource-logo.png" alt="gource"  />

</p>
<p>Gource可以将代码版本控制系统里面的日志全部可视化， 所谓可视化就是可以看见每个成员在系统里面提交代码的行为。
Gource目前支持git/hg/svn，cvs通过一个简单的脚本也可以被Gource支持。</p>
<p>官方视频在这里[Gource - Software Version Control Visualization Tool](<a href="http://www.youtu">http://www.youtu</a>
be.com/watch?v=E5xPMW5fg48&amp;feature=player_embedded)，里面有Moodle/Git/Drupal/Postg
reSQL/Ruby on Rails/Linux/VLC Player这几个非常漂亮的开源软件视频。Ruby on Rails那一段特别帅有没有。</p>
<p>使用下列命令可以将视频录制下来(via <a href="http://code.google.com/p/gource/wiki/Videos">wiki</a>)：</p>
<pre><code>pacman -S x264 #在archlinux下安装H264支持
gource -1280x720 -o gource.ppm #在项目目录下运行，生成ppm文件
#生成mp4文件，官方文档里面有-vpre slow项，会报错，去掉即可
ffmpeg -y -b 10000K -r 60 -f image2pipe -vcodec ppm -i gource.ppm -vcodec libx264 -threads 0 -bf 0 gource.x264.mp4
</code></pre>
<p>使用<a href="http://www.red-bean.com/cvs2cl/">cvs2cl</a>来支持CVS （via
<a href="http://code.google.com/p/gource/wiki/CVS">wiki</a>)：</p>
<pre><code>cd my-cvs-project
cvs2cl --chrono --stdout --xml -g-q &gt; my-cvs-project.xml
gource my-cvs-project.xml
</code></pre>
<p>Gource里面有几个快捷键，我常用的有<code>[</code>放大，<code>]</code>缩小，方向键移动，<code>+</code>加速，<code>-</code>减速。</p>
<p>我本来想把我的dbevent2gc拿来凑了一个热闹，结果h264编码传到要哭土豆似乎一直有问题，只能作罢。ps：3分钟的视频，生成的ppm有1.2个G，转换
成mp4是1.2M。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Vimperator的Pass through</title>
      <link>https://blog.alswl.com/2011/07/vimperator-pass-through/</link>
      <pubDate>Tue, 19 Jul 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/07/vimperator-pass-through/</guid>
      <description>作为 vim 的拥护者，我同时也喜欢使用 Vimperator 这款 Firefox 下面的插件，这款插件可以帮助实现 Firefox 的纯键盘操作。 我同时也是 GMail / Google Reader 的深度用户，他们在网页端也支持纯键盘操作，这样就和 Vimperator 产生了冲突。键盘按键事件被 Vimperator 拦截了，导致键盘操作在这些应用上面不起作用。 还好，Vimperator 提供了一种名为 Pass through 的模式，按 CTRL+Z 进入这种模式，在这种模式下面，Vimperator 将不响应键盘操作，全部放行到 Web 页面。 在某一次版本更新之后， Pass through 的</description>
      <content:encoded><![CDATA[<p>作为 vim 的拥护者，我同时也喜欢使用 Vimperator 这款 Firefox 下面的插件，这款插件可以帮助实现 Firefox 的纯键盘操作。</p>
<p>我同时也是 GMail / Google Reader 的深度用户，他们在网页端也支持纯键盘操作，这样就和 Vimperator 产生了冲突。键盘按键事件被
Vimperator 拦截了，导致键盘操作在这些应用上面不起作用。</p>
<p>还好，Vimperator 提供了一种名为 Pass through 的模式，按 <code>CTRL+Z</code> 进入这种模式，在这种模式下面，Vimperator
将不响应键盘操作，全部放行到 Web 页面。</p>
<p>在某一次版本更新之后， Pass through 的快捷键 <code>CTRL+Z</code> 似乎不起作用了，我翻遍了用户手册也没有找到解决办法。</p>
<p>就在昨天，我无意中不知道按了什么键，命令栏里面出现了 <code>IGNORE ALL KEYS (Press &lt;S-Esc&gt; or &lt;INSERT&gt; to exit)</code> 这行提示信息。在这种状态下面，我测试了 GMail 的快捷键，果然又起作用了。</p>
<p>好吧，我终于找回了丢失的 <code>CTRL+Z</code> ，新版的 Vimperator 使用 <code>Shift+Esc</code> 或者 <code>INSERT</code> 键来进入原来的 Pass
through 模式。</p>
<p>&mdash;&mdash;残念的分割线&mdash;&ndash;</p>
<p>之前按 <code>&lt;-</code> 键时候，按成了 ThinkPad 的回退键，导致文章没有保存，纠结啊。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>CodeSmith使用心得</title>
      <link>https://blog.alswl.com/2011/02/codesmith/</link>
      <pubDate>Sat, 26 Feb 2011 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2011/02/codesmith/</guid>
      <description>CodeSmith是一款著名的代码生成器，可以帮助开发者完成一些重复性的劳动，并且能够保证更高的代码质量。CodeSmith使用Template（*.cst ）模板进行基础代码片段的定义，支持语言包括C#, Java, VB, PHP, ASP.NET, SQL等等。 一个简单的Sample CodeSmith使用的模板使用方式类似于aspx/jsp页面，也就是基础代码+脚本的方式，大致代码如下（官方的sample2）。 &amp;lt;%@ CodeTemplate Language=&amp;quot;C#&amp;quot; TargetLanguage=&amp;quot;Text&amp;quot; Description=&amp;quot;This template demonstrates using properties in your template.&amp;quot;</description>
      <content:encoded><![CDATA[<p>CodeSmith是一款著名的代码生成器，可以帮助开发者完成一些重复性的劳动，并且能够保证更高的代码质量。CodeSmith使用Template（*.cst
）模板进行基础代码片段的定义，支持语言包括C#, Java, VB, PHP, ASP.NET, SQL等等。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="CodeSmith"  />

</p>
<h2 id="一个简单的sample">一个简单的Sample</h2>
<p>CodeSmith使用的模板使用方式类似于aspx/jsp页面，也就是基础代码+脚本的方式，大致代码如下（官方的sample2）。</p>
<pre><code>&lt;%@ CodeTemplate Language=&quot;C#&quot; TargetLanguage=&quot;Text&quot; Description=&quot;This template demonstrates using properties in your template.&quot; %&gt;
&lt;%@ Property Name=&quot;Person&quot; Type=&quot;System.String&quot; Description=&quot;This will show up at the bottom of the property grid when the property is selected.&quot; %&gt;
&lt;%-- 
This template demonstrates using properties in your template.
--%&gt;
This is some static content (just like the static HTML in a ASP page).
&lt;%= &quot;Hello &quot; + this.Person + &quot;!&quot; %&gt;
This is more static content.
</code></pre>
<p>这个结构熟悉吧，几行代码分别表示模板属性，参数，脚本（注释），脚本（输出），静态文本。</p>
<p>通过上面这个例子可以直观看到CodeSmith使用方式，无非是在固有的代码片段上面进行一些动态的输出。</p>
<p>例子使用了一个名为Person的属性，其类型是String。在CodeSmith中，所有.net的基础属性都能够使用，除此之外，CodeSmith还封装了一
些特殊的属性类型，方便用户使用，像多行文本，文件选择，XML序列化文件、Key-Value键值对等等。</p>
<p>通过&lt;%@ Assembly Name=&ldquo;SchemaExplorer&rdquo; %&gt;和&lt;%@ Import Namespace=&ldquo;SchemaExplorer&rdquo;
%&gt;，我们能够使用自定义的dll和命名空间，托.net平台类库的福，系统的灵活性大大提高了。</p>
<h2 id="数据接入">数据接入</h2>
<p>仅仅拥有上面这些特性，CodeSmith还不足以成为一个趁手的工具。真正让自定义功能发挥到极致的是CodeSmith中的SchemaExplorer。</p>
<p>SchemaExplorer的作用是给CodeSmith提供各类基础数据，比如字段的设计、表结构的设计。SchemaExplorer下面有两个比较常用的类，
TableSchema和ViewSchema，能够读取表信息和视图信息。</p>
<p>官方代码片段如下：</p>
<pre><code>&lt;%@ Property Category=&quot;1.Database&quot; Name=&quot;Tables&quot; Optional=&quot;False&quot;
    Type=&quot;SchemaExplorer.TableSchemaCollection&quot; 
    Description=&quot;Database to create SQLite DDL from.&quot; %&gt;
&lt;% foreach (TableSchema table in Tables) { %&gt;
-- Table &lt;%= string.Format(EscapeFormat, table.Name) %&gt; data
&lt;% string columnDefinition = BuildColumns(table); %&gt;
&lt;% string tableName = BuildTableName(table); %&gt;
&lt;% DataTable data = table.GetTableData(); %&gt;
&lt;% foreach (DataRow row in data.Rows) { %&gt;
INSERT INTO &lt;%= tableName %&gt;&lt;%= columnDefinition %&gt; VALUES (&lt;%= BuildInsert(row) %&gt;);
&lt;% } // for each row%&gt;
</code></pre>
<p>&lt;% } // for each table%&gt;</p>
<p>上面代码通过便利Table，生成了一系列INSERT语句。</p>
<p>细心的童鞋可能发现了，描述中提到了&quot;Database to create SQLite DDL from&quot;，没错，通过SchemaExplorer，Code
Smith屏蔽了数据库差异，所以能够使用各大主流数据库，从MySQL到MSSQL，从SQLite到PostreSQL，并且，只要把提供实现了SechemaE
xplorer接口的dll放入CodeSmith/SchemaProviders目录下面，就能够理论上实现各种数据接入（其实。。。官方的SQLite接入都有
问题，反正我死活没成功，最后还是用了原生支持的MSSQL）。</p>
<h2 id="我使用的数据接入">我使用的数据接入</h2>
<p>CodeSmith提供的SechemaExplorer虽然强大，但是却有一个弊端：它设计用来读取数据库结构，而不是其中的数据。TableSchema类型只提
供字段类型信息，而不提供具体数据内容。</p>
<p>我需要读取的数据并不是表结构，而是里面具体的数据，我需要根据这些数据生成具体代码，所以需求和CodeSmith的设计思路不一致，我早起使用了ViewSche
ma来曲线实现读取数据库内容的功能。（ViewSchema可以读取具体内容）</p>
<p>通过DataRow row in this.V_JOB.GetViewData().Rows，我可以获取视图里面所有数据列。这种方法比较取巧，缺点也显而易见
：每次不同的SQL需要定义一个额外的视图，很快我就放弃了这种办法。</p>
<p>最后我决定使用原生的SQL来获取数据，例子如下</p>
<pre><code>&lt;%@ Assembly Name=&quot;Microsoft.ApplicationBlocks.Data&quot; %&gt;
&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;
&lt;%@ Import Namespace=&quot;System.Data.SqlClient&quot; %&gt;
&lt;%@ Import Namespace=&quot;Microsoft.ApplicationBlocks.Data&quot; %&gt;
&lt;%
StringBuilder  sql = new StringBuilder();
sql.Append(&quot;SELECT * n&quot;);
sql.Append(&quot;FROM   TASK n&quot;);
sql.Append(&quot;       LEFT  JOIN CONTROLER n&quot;);
sql.Append(&quot;         ON TASK.guid = CONTROLER.taskGuid n&quot;);
sql.AppendFormat(&quot;WHERE  TASK.confirmId = '{0}' n&quot;, ConfirmId);
sql.AppendFormat(&quot;       AND TASK.id = '{0}' n&quot;, TaskId);
sql.Append(&quot;       AND CONTROLER.bodyNo IS NULL n&quot;);
sql.Append(&quot;        OR CONTROLER.bodyNo = 0 &quot;);
</code></pre>
<p>SqlConnection connection = new SqlConnection(databaseSchema.ConnectionString);</p>
<p>connection.Open();</p>
<p>DataTable dataTable = SqlHelper.ExecuteDataset(connection, CommandType.Text,
sql.ToString()).Tables[0];</p>
<p>foreach (DataRow row in dataTable.Rows) {</p>
<p>} %&gt;</p>
<p>这个例子就是引用原生的System.Data.SqlClient完成读数据，另外为了简化操作，我使用了微软的SqlHelper进行数据操作封装，即Micro
soft.ApplicationBlocks.Data这个类库。（SqlHelper可以在微软官网下载到）需要引用的类库记得放入CodeSmith/bin目
录下面。</p>
<p>最后，如果Template过于复杂，记得把Template进行分割成小模块，再使用Register关键字引用，以提高复用，DRY。</p>
<pre><code>&lt;%@ Register Name=&quot;DscHideField&quot; Template=&quot;../Controler/DscHideField.cs.cst&quot; %&gt;
</code></pre>
<p>相关链接</p>
<p><a href="http://www.codesmithtools.com/">CodeSmith官网</a></p>
<p>[CodeSmith 介绍 - 代码生成之路 - 博客园](<a href="http://www.cnblogs.com/lxf120/archive/2007/04/03">http://www.cnblogs.com/lxf120/archive/2007/04/03</a>
/698707.html)里面有个很详细的Tutorial</p>
<p><a href="http://terrylee.cnblogs.com/archive/2005/12/28/306254.aspx">CodeSmith开发系列资料总结 - TerryLee&rsquo;s Tech
Space</a> -
博客园李银河的CodeSmith系列文章，有几个高级议题</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>LavaVPN推广链接</title>
      <link>https://blog.alswl.com/2010/12/lavavpn/</link>
      <pubDate>Thu, 23 Dec 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/12/lavavpn/</guid>
      <description>以前一直使用SSH进行翻墙，后来在人人看到一位朋友推荐LavaVPN，就过去试用一下，效果的确不错。 LavaVPN支持各种系统，在Windows下面有专用的客户端接入程序，通过这个客户端可以实现选择性加速，而不需要全局加速。在Android和Linux上面 测试都可以。 官方的介绍如下： LAVAVPN网络加速器是专为各类网游玩家、软件发烧友、网络办公、影音冲浪网虫等个人用户提供网络加速服务的新型产品，</description>
      <content:encoded><![CDATA[<p>以前一直使用SSH进行翻墙，后来在人人看到一位朋友推荐<a href="http://lavavpn.com">LavaVPN</a>，就过去试用一下，效果的确不错。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201012/banner.jpg" alt="LavaVPN"  />

</p>
<p>LavaVPN支持各种系统，在Windows下面有专用的客户端接入程序，通过这个客户端可以实现选择性加速，而不需要全局加速。在Android和Linux上面
测试都可以。</p>
<p>官方的介绍如下：</p>
<blockquote>
<p>LAVAVPN网络加速器是专为各类网游玩家、软件发烧友、网络办公、影音冲浪网虫等个人用户提供网络加速服务的新型产品，能有效减少网络延时，使网络互访再无拥
挤的感觉，让您在任何情况下都能体验上网加速的快乐！多地服务器节点可以选择，一个账号即可使用全部节点，随时任意切换，软件自带服务器测速工具，自动选择最快的节点
。</p>
</blockquote>
<p>服务器目前有大陆、台湾、香港和美国，我个人比较喜欢香港的服务器，速度快，畅游无限。根据我的实际使用，速度都不错，几乎都可无延迟的看Youtube。国内的服务
器则是我在上班时候听音乐用的。</p>
<p>由于VPN的全局性，导致连接上VPN后无法连接上内网数据库等服务器，我的解决方案是在虚拟机上跑VPN，采用Bridge桥接接入网络。</p>
<p>目前LavaVPN在推广阶段，包月是16元，包3月是44元，半年80元，还是很超值的。</p>
<p>最后分享3个推广链接，使用邀请码注册可以获得额外1天的免费使用时间。首次充值（30天及以上）可获额外3天时间赠送。（普通用户注册只能使用6小时）。Lava也
推出了免费的VPN，限制是30分钟使用一次，偶尔翻墙也能接受。</p>
<p><strike><a href="http://www.lavavpn.com/index-invite-ykfFcKHAIVXkfKOO">http://www.lavavpn.com/index-invite-ykfFcKHAIVXkfKOO</a></strike></p>
<p><strike><a href="http://www.lavavpn.com/index-invite-8xCUQDst8cShyBGe">http://www.lavavpn.com/index-invite-8xCUQDst8cShyBGe</a></strike></p>
<p><strike><a href="http://www.lavavpn.com/index-invite-xGHJB0OHCJnUxsPu">http://www.lavavpn.com/index-invite-xGHJB0OHCJnUxsPu</a></strike></p>
<p>请拿走的兄弟在下面留言说明一下，谢谢~</p>
<p>Update 2011-02-18 (新的邀请码，请随意~):</p>
<p><a href="http://www.lavavpn.com/index-invite-rCSCF5jer7wUAcUP">http://www.lavavpn.com/index-invite-rCSCF5jer7wUAcUP</a></p>
<p><a href="http://www.lavavpn.com/index-invite-0BGjgZYa0m5BSA0o">http://www.lavavpn.com/index-invite-0BGjgZYa0m5BSA0o</a></p>
<p><a href="http://www.lavavpn.com/index-invite-QhMy38ZqbOBoSMCp">http://www.lavavpn.com/index-invite-QhMy38ZqbOBoSMCp</a></p>
<p><a href="http://www.lavavpn.com/index-invite-9rVRbK0YSiTwJXeA">http://www.lavavpn.com/index-invite-9rVRbK0YSiTwJXeA</a></p>
<p><a href="http://www.lavavpn.com/index-invite-rI4qGK62NbNwXv8n">http://www.lavavpn.com/index-invite-rI4qGK62NbNwXv8n</a></p>
<p><a href="http://www.lavavpn.com/index-invite-wp7dktqK2qHwNBCQ">http://www.lavavpn.com/index-invite-wp7dktqK2qHwNBCQ</a></p>
<p><a href="http://www.lavavpn.com/index-invite-ehgmFX4tgwiZ36E9">http://www.lavavpn.com/index-invite-ehgmFX4tgwiZ36E9</a></p>
<p><a href="http://www.lavavpn.com/index-invite-3Na6QkvzRjJ9xry2">http://www.lavavpn.com/index-invite-3Na6QkvzRjJ9xry2</a></p>
<p><a href="http://www.lavavpn.com/index-invite-jMysmc5HDNz9qZcA">http://www.lavavpn.com/index-invite-jMysmc5HDNz9qZcA</a></p>
<p><a href="http://www.lavavpn.com/index-invite-PZzyCEJYOF2ZBqoG">http://www.lavavpn.com/index-invite-PZzyCEJYOF2ZBqoG</a></p>
<p><a href="http://www.lavavpn.com/index-invite-JuvEgCJKizwKj6ho">http://www.lavavpn.com/index-invite-JuvEgCJKizwKj6ho</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>在Win7上面使用Standalone Network Extender</title>
      <link>https://blog.alswl.com/2010/10/win7-standalone-network-extender/</link>
      <pubDate>Fri, 22 Oct 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/10/win7-standalone-network-extender/</guid>
      <description>用Win7大概1个月了，的确很不错，本来试用的心态变成了完全不想回到XP时代了。 Win7的UAC比Vista已有很大的进步，至少不是那么烦心了，但是仍然很多场合都不能与以前旧版本的一些软件配合默契。 比如公司用的这款VPN软件-Standalone Network Extender。 这款软件是Billion BiGuard公司推出的SSL产品，通过IE载入一个Active插件来连接公司内网。我在以前XP时候很轻松连入</description>
      <content:encoded><![CDATA[<p>用Win7大概1个月了，的确很不错，本来试用的心态变成了完全不想回到XP时代了。</p>
<p>Win7的UAC比Vista已有很大的进步，至少不是那么烦心了，但是仍然很多场合都不能与以前旧版本的一些软件配合默契。</p>
<p>比如公司用的这款VPN软件-Standalone Network Extender。</p>
<p>这款软件是Billion BiGuard公司推出的SSL产品，通过IE载入一个Active插件来连接公司内网。我在以前XP时候很轻松连入，先在却死活无法连接
成功。我看了一下版本：build:Sep 7 2009-14:06:08，在<a href="http://www.biguard.com">Billion
BiGuard公司</a>的主页也没有找到适合Win7的新版本。</p>
<p>我猜测VPN软件需要修改系统底层参数，可能需要管理员权限，就试用管理员权限打开IE，果然，顺利连接成功。</p>
<p>嗯，以后使用古董遇到一些比较怪异的问题，如果它是安全可靠的，就可以试试管理员权限了。我是不推荐关闭UAC的，权限机制虽然烦，但是可以保证一些系统权限不被开放
。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>我所使用的知识管理系统</title>
      <link>https://blog.alswl.com/2010/09/my-kms/</link>
      <pubDate>Fri, 24 Sep 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/09/my-kms/</guid>
      <description>最近工作比较忙，自由上网的时间被大幅度减少，加上在啃.net的书，所以能够分享的东西就不多了。公司所在的部门需要将PMS和KMS整合在一起，正在对KMS进行 选型，我就趁这个机会把我使用知识管理系统的经验分享一下。 一、知识管理系统（KMS） 简单说一下知识管理的定义：指个人或团体通过工具建立知识体系并不断完善，进行知识的收集、消化吸收和创新的过程，这其中使用的工具也就是KMS。KMS应该帮助我们 队只是</description>
      <content:encoded><![CDATA[<p>最近工作比较忙，自由上网的时间被大幅度减少，加上在啃.net的书，所以能够分享的东西就不多了。公司所在的部门需要将PMS和KMS整合在一起，正在对KMS进行
选型，我就趁这个机会把我使用知识管理系统的经验分享一下。</p>
<h2 id="一知识管理系统kms">一、知识管理系统（KMS）</h2>
<p>简单说一下知识管理的定义：指个人或团体通过工具建立知识体系并不断完善，进行知识的收集、消化吸收和创新的过程，这其中使用的工具也就是KMS。KMS应该帮助我们
队只是进行采集、精炼、索引、分类、检阅、检索、搜索的功能。</p>
<p>不多解释KMS了，省的看大段文字心烦，想做理论深入的去最下面的相关链接查找吧。</p>
<h2 id="二我想要的kms">二、我想要的KMS</h2>
<p>我理想中的KMS应该能够满足一下几点要求。</p>
<h3 id="1数据保存格式">1、数据保存格式</h3>
<p>数据的保存格式关系到知识的完整性和呈现方式，这是我最看重的一条。我理想中的保存格式是能够内嵌媒体信息，可以自定义内容的样式，最好是用大家比较习惯的文档体系，
比如h1/h2/h3/p/br/ol/li。在内嵌媒体内容的同时也要能够在知识点外挂其他类型文件，比如Excel、知识导图，甚至exe可执行文件。</p>
<p>数据保存格式也要考虑数据的移植性，因为一旦我们的KMS需要换一个系统，就会带来大量个工作，这个极其讨厌。使用xml/doc/excel/mm这些通用数据类型
存储信息可以在一定条件下解决这个问题。</p>
<p>数据存储的形式最好使用文件形式，尽量不要使用数据库，什么MySQL/MSSQL/SQLite，一旦知识数量到了一个规模，这反而会成为限制（我可不想为了一个小
小KSM而开一个后台服务器进程）。</p>
<h3 id="2数据采集方式">2、数据采集方式</h3>
<p>数据采集方式关系到采集是否顺手。所谓顺手，就是说我看到某个资源（文字 / 图片 /
网页），都可以通过尽可能少的步骤保存到我自己的KMS，比如通过常驻后台的托盘程序，又或者监视剪贴板指定格式内容。</p>
<p>相应的解决办法有从源获取，比如说可以直接读取我Google
Reader中打上星号的内容，从某个Feed获取内容，从我当前正在浏览的网页获取我所需要的内容（不保存那些广告和垃圾信息）。</p>
<h3 id="3数据索引">3、数据索引</h3>
<p>能够对所有的信息进行无限制分类和打标签，支持1-&gt;N分类和1-&gt;N标签即可，没有太多的花样了。</p>
<p>能够根据分类、标签、标题、正文多层次搜索，支持高级查找，比如说AND条件和OR条件。</p>
<h3 id="4数据同步和安全">4、数据同步和安全</h3>
<p>能够将KMS的数据同步到网上，哦~换一个流行的说法，支持云同步。考虑到在家庭和工作电脑之间进行切换，这点还是需要的。</p>
<p>有一个剑走偏锋的办法，使用现在很多的同步软件，比如说DropBox、DBank和快盘，就可以把那些以文件形式保存数据的KMS信息进行同步。</p>
<p>KMS可能涉及到很多安全和隐私信息，所以必须建立对应帐户和安全机制。允许用户对分享、二次分享、隐私、禁止同步等选项进行详细设置。</p>
<h3 id="5协同工作">5、协同工作</h3>
<p>能够针对于部门小组进行知识管理，这属于企业级产品，不在今天讨论范围之内。其实对于团队来说，Wiki也是一个不错的选择，KMS太过于个性化了。</p>
<h2 id="三我使用的kms-wizknowledge">三、我使用的KMS-WizKnowledge</h2>
<p>废话了这么多，终于进入重点了，我现在使用的KMS系统-WizKnowledge。</p>
<p><a href="../../static/images/upload_dropbox/201009/wiz1.jpg">




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/wiz1.jpg" alt="image"  />

</a></p>
<p>这款Wiz是我最早在<a href="http://louishan.com">Louis</a>那里看到这篇文章《[Wiz(为知个人知识管理)正式版发布- Louis Han
Life Log](<a href="http://louishan.com/articles/wiz-personal-knowledge-">http://louishan.com/articles/wiz-personal-knowledge-</a>
management.html)》，当时没有立即试用。之后在看到<strong>同步控</strong>也发布了相关的一篇日志《<a href="http://www.syncoo.com/wizknowledge-1988.htm">WizKnowledge -
支持同步的个人知识整理工具 |
同步控</a>》，最后又看到xDash的一篇《<a href="http://www.syncoo.com/my-pkm-tools-2038.htm">我的个人知识管理工具
[PKM] | 同步控</a>》，终于忍不住诱惑去下了试用。</p>
<p>现在用Wiz也大概一个多月了，我对应我上面的要求对Wiz进行一下品评一下。</p>
<h3 id="1优点">1、优点</h3>
<p>Wiz使用.ziw格式保存文件，其实这就是zip wiz的缩写，其内质是zip压缩的html文档。这种保存方式可以妥善的保存上文提到的内嵌式媒体，而且内部使
用html+css，能够方便数据展现和迁移。对于大部分选用KMS的朋友来说，使用html+css也不会带来学习曲线。</p>
<p>Wiz使用树形目录保存文件，这样就无法做到任意指定分类，但是带来好处是以文件夹方式保存知识内容，所以总体来说这算是优点。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/wizcat.jpg" alt="image"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/wiz_path.jpg" alt="image"  />

</p>
<p>Wiz的每个文档都支持外接任意类型附件，并将其保存到.ziw中，这对于mm/doc/xls这些特殊类型来说特别有用。</p>
<p>Wiz支持多平台，其中有WM平台，还有Android版本。我试用过Android版本，很弱，问题很多。对我来说，移动手持上面的软体不需要太多功能，可以方便的
查看即可。</p>
<p>Wiz还支持第三方插件，目前官方发布版本集成的有导入文件、导入Google
Docs/日历、博客下载器、发布到博客。其中导入文件支持&quot;<em>.htm;</em>.html; <em>.mht;</em>.nws; <em>.eml; <em>.txt;</em>.ini;
<em>.bat;</em>.inf; <em>.swf;</em>.bmp; <em>.jpg;</em>.jpeg; <em>.gif;</em>.png; <em>.doc;</em>.docx;
<em>.rtf;</em>.ppt;</em>.pptx; <em>.xls;</em>.xlsx;<em>.ziw; <em>.zip;</em>.cpp;</em>.hpp; <em>.cxx;</em>.c;<em>.h;
<em>.pas;</em>.dpr;</em>.java; <em>.js;</em>.cs;*.vbs; <em>.sql;</em>.oraclesql; <em>.idl;</em>.console;
<em>.shell;</em>.pl; *.php&quot;这么多类型。</p>
<p>Wiz给每个注册用户提供300M的网络空间（从1.0.3不限制总空间大小，限制每月流量）。这点在同类产品中比较少见，极其方便了用户。</p>
<p>Wiz提供一个名为WizNote的小工具进行信息采集，同时会在IE中装插件。FireFox下面也有自己的.xpi小插件（功能有些问题，我还是使用FireBu
g获取innerHtml的方式操作）。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/wiznote.png" alt="image"  />

</p>
<p>Wiz还附带一个一个WIzCalendar小工具，可以在日历上面布置知识点，这点对于有些同学来说比较方便，可以实现GTD功能。（因为我依赖于Google
Calendar，所以我不使用这个功能）</p>
<p><a href="../../static/images/upload_dropbox/201009/wizcal.png">




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/wizcal.png" alt="image"  />

</a></p>
<h3 id="2缺点">2、缺点</h3>
<p>Wiz的缺点不多，说起来就是刚发行到正式版，还不是特别完善，比如安全机制，比如采集机制（我现在喜欢用FireBug获取元素的innerHtml直接复制到Wi
z的编辑器源码里）。</p>
<p>Wiz开发团队承诺永久免费，从他们的其他几款产品&quot;网文快捕&quot;等来看，还是比较有运营能力的，尤其是支持第三方插件，这在KMS中间不多见。</p>
<h2 id="四其他几款kms">四、其他几款KMS</h2>
<p>我选择Wiz不适没用试用其他KMS，这里我说一下不选择他们的原因。</p>
<h3 id="1evernote">1、EverNote</h3>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/evernote.png" alt="image"  />

</p>
<p>EverNote是最近最火的同步工具，是的，它是同步工具，不是KMS。而且现在的EverNote基于.net
3.5，我直接崩溃。虽然我是.net程序员，但是我反感CS程序使用.net，尤其还是3.5sp1，天哪，我的2G电脑跑起来都觉得卡。</p>
<p>同事EverNote保存的文件格式也不适合做KMS，更多有关EverNote的信息可以看[善用佳软EverNote专题](<a href="http://xbeta.info">http://xbeta.info</a>
/tag/evernote)。</p>
<p>PS：EverNote是不错的同步工具，但是善用佳软的宣传力度也太大了吧~</p>
<h3 id="2onenote">2、OneNote</h3>
<p>微软的办公软件体系好大哦，OneNote是Office 2007之后逐渐变得比较重要的部分。OneNote存放时本地的，似乎在OneNote
2010的正版用户支持数据同步。</p>
<p>因为OneNote体积比较大，我追求速度和体积，加之没有使用Offcie全系列，所以没有选用OneNote。准确来说，Outlook+SharePoint+
OneNote是一整套的企业级KMS，OneNote更注重于收集。</p>
<p>我使用OneNote用的不多，感兴趣的朋友到这里<a href="http://www.onenoter.com/">OneNote爱好者</a>可以看到更多信息。</p>
<p>PS：<a href="http://microsoft-office-onenote.softonic.cn/download">OneNote 2010试用版下载地址</a></p>
<h3 id="3pkm">3、PKM</h3>
<p>PKM = Pin Knowledge Managerment，说起来这款软件挺早的，使用KMS比较早的朋友们应该都知道这款软件。我使用这款软件的第一印象是
：好山寨的界面啊，居然可以选取工具栏，虽然是VB写的，但也不至于如此吧~</p>
<p><a href="../../static/images/upload_dropbox/201009/pinE1.jpg">




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/pinE1.jpg" alt="image"  />

</a></p>
<p>我使用时候还遇到了诸多问题，比如附件无法拖入，网页到html无法转换成功，甚至开启PKM之后，我的QQ2010聊天界面的Alt键无法使用，真是诡异。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/pinE2.jpg" alt="image"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/pinE3.jpg" alt="image"  />

</p>
<p>PKM的功能看上去很强大，似乎比Wiz更专业，作者给了很多教程。但是最不喜欢的是居然用doc保存文档，这搞毛啊，无论是大小还是速度都是我不能忍受的。同时PK
M分为免费版和专业版，专业版需要花票票购买。</p>
<p>PKM在KMS的普及上做了相当多的工作，这点上我很佩服和感谢作者，详情可见<a href="http://www.cnblogs.com/pinpkm/archive/2007/10/16/925606.html">PKM全民推广系列一：PKM定义 - 专业个人知识管理软件研究 -
博客园</a>。</p>
<h3 id="4其他一些kms">4、其他一些KMS</h3>
<p>Google Docs其实也能做成KMS，还支持团队协作，但是，你懂的……</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/maiku.jpg" alt="image"  />

</p>
<p>盛大推出了线上KMS-<a href="http://note.sdo.com/">麦库</a>，我支持盛大的这次向KMS进军，可惜线上……你懂的……这不是我的菜……</p>
<p>再其他……我就不懂了……</p>
<h2 id="last">Last</h2>
<p>好啦，介绍到这里，总算是大功告成，一篇博文搞了两天，真是吃力~</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>将VisualStudio打造成Vim</title>
      <link>https://blog.alswl.com/2010/09/vs-vim/</link>
      <pubDate>Fri, 03 Sep 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/09/vs-vim/</guid>
      <description>背景：Vim in VisualStudio? 最近痴迷于Vim，尝试着在.net环境中（70%C#+20%ASPX+10%JS）使用Vim进行开发。但是似乎现成的Vim插件不太适应.net开发平台，在进 行调试、编译以及ASPX页面调整时候还是需要切换到VS。 内事不决问老婆，外事不决问Google，我以关键词&amp;quot;Vim C#&amp;ldquo;向G神询问，很可惜一圈一圈找下来，都没有什么有价值的答案。在StackOverlow上</description>
      <content:encoded><![CDATA[<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/ViEmu.jpg" alt="image"  />

</p>
<h3 id="背景vim-in-visualstudio">背景：Vim in VisualStudio?</h3>
<p>最近痴迷于Vim，尝试着在.net环境中（70%C#+20%ASPX+10%JS）使用Vim进行开发。但是似乎现成的Vim插件不太适应.net开发平台，在进
行调试、编译以及ASPX页面调整时候还是需要切换到VS。</p>
<p>内事不决问老婆，外事不决问Google，我以关键词&quot;Vim C#&ldquo;向G神询问，很可惜一圈一圈找下来，都没有什么有价值的答案。在StackOverlow上找到
了一些相关资源，其中几位资深人士（使用Vi/Vim大约20年）提到了一款叫做ViEmu的软件，就好奇的跑去看看。</p>
<h3 id="viemu">ViEmu</h3>
<p>让我们来见识一下ViEmu的厉害吧。ViEmu支持模式切换、移动、宏、高亮搜索，键盘映射、增强命令、正则表达、可视模式等等。反正常用的Vim功能都具备。它自
己也敢宣称支持Vim大部分功能（Vim太强大，不敢说完全模拟~）。下面是一张ViEmu的官方示意图。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/viemu-movie.gif" alt="image"  />

</p>
<p>ViEmu不但有支持VS的版本，还有支持Word &amp; Outlook &amp; SQL Server Management
Studio（SQL解析器），确实是相当强大。</p>
<p>ViEmu的收费标准是Only $99，唉，真是残酷+万恶的资本主义啊。囊中羞涩，不得不去求破解版本。功夫不负有心人，终于找到了当前最新版本ViEmu.v.
2.5.4的破解版&rdquo;<a href="http://www.52pojie.cn/viewthread.php?tid=59277">ViEmu.v.2.5.4.for.VS.Classic.CracKed-LCG - 『LCG Area』 - 吾爱破解论坛【 LCG
】 破解论坛|破解软件|加密解密|逆向工程|软件安全|病毒分析|精品软件|破解补丁|注册机|序列号|QQ|下载|Crack|Patch|Key|SN -
Powered by Discuz!</a>&quot;。（这标题真TMD长
，不过论坛够意思，不用注册即可下载）。网上还有一种破解方法（我没有试过，感兴趣可以尝试）。</p>
<blockquote>
<p>1.删除目录 C:Documents and Settings用户名Local SettingsApplication DataIdentities
{17582A9E-740A-47F2-8256-D09F1378E7FA}</p>
</blockquote>
<p>2.删除注册表项HKEY_CURRENT_USERSoftwareClassesCLSID{D31F31E1-B08F-46FF-
92C5-CA111A2053DF}</p>
<h3 id="安装失败">安装失败</h3>
<p>在公司电脑安装ViEmu没有问题，在我的机器上面（XP Sp3+VS2008+ReSharper
v4.1）却出现了重大错误。启动VS之后立刻提示&quot;ViEmu incorrectly installed, please
reinstall&quot;，卸载重装之后不起任何作用。</p>
<p>我在官方支持论坛上面找到了相关讨论<a href="http://www.viemu.com/forums/viewtopic.php?id=395">ViEmu forums / ViEmu incorrectly installed message under VS
2008</a>。作者会给所有遇到问题的人发一封邮件，包含一个
Tool，能够解决这个问题并且将时间恢复至30天，<strike>下载点击[这里](<a href="http://www.viemu.com/for-">http://www.viemu.com/for-</a>
ajsd8/XtendTest.exe)</strike>（作者发送给我时候，该链接已失效）。</p>
<p>好在我有十全大补丸，就是上文提到的那个破解包，破解之后，连带着这个莫名的问题也莫名的解决了~</p>
<h3 id="主题">主题</h3>
<p>厌倦了VisualStudio那种白底黑字加上几个蓝色函数的主题了么，想回到Geek Feel的Vim主题嘛，这里就要向你隆重推荐一个网站：Studio
Styles - Visual Studio color
schemes，里面包含了N套VS的主题，大部分是深色背景浅色文字、保护视力的背景。比如排名最高，也是我比较喜欢的<a href="http://studiostyles.info/schemes/wekeroad-ink">WekeRoad
Ink</a>。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201009/WekeRoad_Ink.jpg" alt="image"  />

</p>
<p>通过工具-导入和导出设置就可以把新主题颜色导入VS了。话说回来，真不知道VS设计团队怎么想的，需要一个一个设置不同类型的字体和颜色~~~</p>
<h3 id="相关链接">相关链接</h3>
<p><a href="http://www.viemu.com/">ViEmu: vi-vim editor emulation for Visual Studio, Word, Outlook and SQL
Server</a> ViEmu官网</p>
<p><a href="http://stackoverflow.com/questions/597077/is-learning-vim-worth-the-effort">Is learning VIM worth the effort? - Stack Overflow
</a>
CSharper怎么用Vim，老程序员的回答</p>
<p><a href="http://www.vimer.cn/">Vimer的程序世界</a> 一个Vim爱好者的Blog</p>
<p><a href="http://xbeta.info/vimperator.htm">Vimperator：VIM化的Firefox</a>
想在FireFox下脱离鼠标用Vim模式化操作么？</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>SQL格式化工具-SQL Pretty Printer</title>
      <link>https://blog.alswl.com/2010/07/sql-format-tool-sql-pretty-printer/</link>
      <pubDate>Wed, 28 Jul 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/07/sql-format-tool-sql-pretty-printer/</guid>
      <description>背景 最近写了一些SQL，数据库用的是MS-SQL，而SQL Server Management Studio是不自带代码格式化功能的，这让我用起来很郁闷，PL/SQL Developer格式起来多爽啊。 在网上找了一下SQL格式化工具，只有一个用起来还不错的在线版本，我测试 了一下，功能强大，可惜不支持中文，注释的中文会被打上？？ SQL Pretty Printer 我在那个在线网站看到了Desktop Version的菜单，进去一看，哦，原来这个网站本身就在做一款SQ</description>
      <content:encoded><![CDATA[<h3 id="背景">背景</h3>
<p>最近写了一些SQL，数据库用的是MS-SQL，而SQL Server Management
Studio是不自带代码格式化功能的，这让我用起来很郁闷，PL/SQL Developer格式起来多爽啊。</p>
<p>在网上找了一下SQL格式化工具，只有一个用起来还不错的<a href="http://www.dpriver.com/pp/sqlformat.htm">在线版本</a>，我测试
了一下，功能强大，可惜不支持中文，注释的中文会被打上？？</p>
<h3 id="sql-pretty-printer">SQL Pretty Printer</h3>
<p>我在那个在线网站看到了Desktop Version的菜单，进去一看，哦，原来这个网站本身就在做一款SQL格式化工具的产品，叫做 SQL Pretty
Printer。</p>
<p><a href="../../static/images/upload_dropbox/201007/spp_app.jpg">




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201007/spp_app.jpg" alt="image"  />

</a></p>
<p>SQL Pretty Printer 的桌面版本</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201007/spp_code.jpg" alt="image"  />

</p>
<p>格式化好之后的代码</p>
<h3 id="功能">功能</h3>
<p>SQL Pretty Printer目前提供4种使用方式，桌面版本，SSMS(SQL Server Management
Studio)插件，VS插件，和提供API接口。</p>
<p><a href="../../static/images/upload_dropbox/201007/spp_ssms.jpg">




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201007/spp_ssms.jpg" alt="image"  />

</a></p>
<p>SSMS(SQL Server Management Studio)插件版本</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201007/spp2code.jpg" alt="image"  />

</p>
<p>可以将SQL转化成代码格式，支持数种语言</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201007/spp2html.jpg" alt="image"  />

</p>
<p>可以将SQL转化成HTML格式</p>
<h3 id="获取">获取</h3>
<p>使用版本只能提供30次，而且桌面版本的无法将代码复制出来，我使用的是SSMS插件版本，可以直接在查询器里面格式化，试用版的限制比较多。</p>
<p>翻遍SQL Pretty Printer的网站，终于发现了Get SQL Pretty Printer Desktop Version For
Free信息，作者说可以通过4种途径获取免费的授权码。</p>
<blockquote>
<ul>
<li>1.If you are a technical/software blogger or journalist willing to write
us up (honest reviews are the most useful to us) [email us](mailto:support@dpr
iver.com?subject=I%20want%20to%20review%20sql%20pretty%20printer%20on%20my%20s
oftware%20blog%21) a short blurb with the link to your blog and we&rsquo;ll send you
a license, FREE of charge, so that you can evaluate sql pretty printer
properly.</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>2.If you are willing to demo SQL Pretty Printer to an audience of at
least 15 people (at a user group, a conference, a BarCamp), [email us](mailto:
<a href="mailto:support@dpriver.com">support@dpriver.com</a>?subject=I%20want%20to%20demo%20SQL%20Pretty%20Printer%21)
your info and we&rsquo;ll give you two licenses, one for you to keep and one to give
away at the event, FREE of charge.</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>3.If you teach a high-school class, <a href="mailto:support@dpriver.com?subject=I%20teach%20high-school%21">email
us</a> the name of
your school and your class, plus the number of students in your class. We will
send you a license for all of them.</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>4.A note to university students and professors: we currently do not
offer free licenses to universities, but we&rsquo;ll be happy to offer you an
additional 50% off any orders of 10 or more licenses. <a href="mailto:support@dpriver.com?subject=Student%20Discount">Let us
know</a> if you&rsquo;re
interested and we&rsquo;ll set up a discount code for you.</li>
</ul>
</blockquote>
<p>很幸运，我有自己的软件博客，写完这篇文章之后，我就会向作者发出申请邮件。</p>
<h3 id="最后">最后</h3>
<p>说说这个软件的弊病吧，那就是功能太单一。现在大部分的查询器都有格式化功能，只是M$这边没有加入这个功能，从该软件的产品线来看，很依赖于SSMS和VS，一旦他
们加入格式化功能，这个软件的使用价值就大大降低了。</p>
<h3 id="links">Links</h3>
<p>下载链接：<a href="http://www.dpriver.com/dlaction.php">http://www.dpriver.com/dlaction.php</a></p>
<p>在线版本（不支持中文）：[http://www.dpriver.com/pp/sqlformat.htm](<a href="http://www.dpriver.com/p">http://www.dpriver.com/p</a>
p/sqlformat.htm)</p>
<p>获取免费的授权码：[http://www.dpriver.com/products/sqlpp/getforfree.php](<a href="http://www.dpr">http://www.dpr</a>
iver.com/products/sqlpp/getforfree.php)</p>
<h3 id="others">Others</h3>
<p>WP Keyword Link这个插件在更新到版本 1.5.2之后会让正文中图片无法显示，出现类似http://log4d.com/****的URL，导致图
片显示失败，停用这个插件之后即可，期待作者下个版本修复这个问题。</p>
<h3 id="update-2010-7-29">Update-2010-7-29</h3>
<p>下午作者就给了答复，问我要哪一个版本的Key，第二天早晨拿到了SSMS版本的Licence。作者叫James
Wang，而且工作组叫GuduSoft，我怀疑作者是华人</p>
<p>再次感谢作者的慷慨~</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>SMS Backup 备份手机短信</title>
      <link>https://blog.alswl.com/2010/07/sms-backup-for-android/</link>
      <pubDate>Fri, 09 Jul 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/07/sms-backup-for-android/</guid>
      <description>alswl的一个癖好就是不喜欢删除信息，无论是QQ上面的还是手机短信，因此找一个信息备份工具就比较重要了。 以前小6一直用的是MessageStorer，在Android上一直没有找到非常适用的。今天偶然看到一个软件，颇为好玩，与大家分享。 ps：试用之后，发现只能备份不能还原，而且并不是我喜欢的那种MessageStorer备份为文本模式，甚是遗憾，仅供大家把玩。 Update: 试了一下一款叫SMS Backup &amp;amp; Resto</description>
      <content:encoded><![CDATA[<p>alswl的一个癖好就是不喜欢删除信息，无论是QQ上面的还是手机短信，因此找一个信息备份工具就比较重要了。</p>
<p>以前小6一直用的是MessageStorer，在Android上一直没有找到非常适用的。今天偶然看到一个软件，颇为好玩，与大家分享。</p>
<p>ps：试用之后，发现只能备份不能还原，而且并不是我喜欢的那种MessageStorer备份为文本模式，甚是遗憾，仅供大家把玩。</p>
<p>Update: 试了一下一款叫<strong>SMS Backup &amp; Restore</strong>的软件，非常理想，可以备份短信为XML格式的文件，看了一下统计，Cindere
lla你的短信是600+条。。。如果纯粹是为了保存短信，推荐这一款<strong>SMS Backup &amp; Restore</strong>。</p>
<p><strong><strong>原文出自：<a href="http://briian.com/?p=6636">[Android小軟體] SMS Backup 備份手機簡訊（定期自動儲存到Gmail信箱）</a></strong></strong>****</p>
<hr />
<p>手機裡經年累月的傳送、接收了一堆簡訊之後，如果怕手機遺失而造成寶貴資料一起消失的話，該怎麼把它備份出來呢？</p>
<p>如果你是使用Google Android系統的手機的話，可以試試看下面這個免費的「SMS Backup」
手機簡訊備份軟體，將手機中的簡訊定期自動備份到Gmail信箱中，讓我們不用擔心手機遺失或毀損，造 成簡訊通通不見的遺憾事情再度發生。</p>
<p>SMS Backup軟體是透過IMAP協定連線到Gmail信箱並執行訊息備份工作，所以在開始使用之前，必須先到Gmail信箱的設定頁面中開啟IMAP存取
權限。備份過程中我們可以設定自己喜歡的名稱當做Gmail郵件的標籤，透過「標籤」的標示讓我們可以輕易的在Gmail信箱中搜尋、管理你的簡訊內容。</p>
<p>此外，如果你的簡訊數量太龐大，也可以先在SMS Backup軟體中設定每次執行備份時的訊息數量，避免一次處理太多訊息而卡住。</p>
<blockquote>
<p>▇ 軟體小檔案
▇
<a href="http://briian.com/?page_id=6177#report">(錯誤、版本更新回報)</a></p>
</blockquote>
<blockquote>
<p>軟體名稱：SMS Backup</p>
</blockquote>
<blockquote>
<p>軟體版本：1<a href="http://briian.com/?p=6636">.</a>10</p>
</blockquote>
<blockquote>
<p>軟體語言：英文</p>
</blockquote>
<blockquote>
<p>軟體性質：免費軟體</p>
</blockquote>
<blockquote>
<p>檔案大小：223KB</p>
</blockquote>
<blockquote>
<p>系統支援：Android手機</p>
</blockquote>
<blockquote>
<p>官方網站：[http://code.google.com/p/android-sms/](<a href="http://code.google.com/p">http://code.google.com/p</a>
/android-sms/)</p>
</blockquote>
<blockquote>
<p>軟體下載：請直接在手機中的 Market搜尋「SMS Backup」或「[按這裡](http://android-
sms.googlecode.com/files/SmsBackup-1.1.0.apk)」下載到手機裡安裝</p>
</blockquote>
<h3 id="一到gmail信箱開啟imap郵件存取權限">一、到Gmail信箱開啟IMAP郵件存取權限</h3>
<p>因為SMS Backup軟體需透過IMAP的方式存取你的Gmail帳戶來執行備份工作，所以請先開啟你的Gmail信箱頁面，按一下右上角的「設
定」，在「轉寄和 POP/IMAP」中勾選「啟用IMAP」 再按「儲存變更」按鈕，即可完成設定。</p>
<p>


<img loading="lazy" src="http://orzhd.com/briian/2009/AndroidSMSBackupGmail_12DB8/01AndroidSMSBackup.png" alt="01-Android-SMS-Backup"  />


</p>
<h3 id="二安裝sms-backup軟體並設定帳號密碼">二、安裝SMS Backup軟體並設定帳號密碼</h3>
<p>第1步 在Android手機安裝SMS
Backup軟體的方法很簡單，請按「所有程式」清單再開啟「Market」，在Andorid Market選單裡面按搜尋，找到「SMS
Backup」這軟體再按「安裝」按 鈕即可。</p>
<p>裝好軟體並開啟程式之後，請分別按一下「Username」跟「Password」 兩個項目，並依序輸入你的Gmail帳號、密碼。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="02-Android-SMS-Backup"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="03-Android-SMS-Backup"  />

</p>
<p>第2步
設定好Gmail帳號、密碼之後，第一次啟用時會問你是否要馬上執行簡訊備份工作，請按「確定」按鈕，然後再按「Backup」
按鈕，開始簡訊備份工作。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="04-Android-SMS-Backup"  />

</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="05-Android-SMS-Backup"  />

</p>
<p>第3步
此時，視窗上方會顯示目前的簡訊備份進度，原本儲存在你手機裡面的簡訊都會被備份到Gmail信箱中。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="06-Android-SMS-Backup"  />

</p>
<p>第4步 另外，我們也可以在頁面最下方的「Advanced settings」按一下，我們可以分別設定簡訊備份到
Gmail後所使用的郵件「標籤」（用來分類郵件用），或者可以在這邊設定簡訊備份工作的每次處理數量，一般來說都不用特別做調整，除非你有特別的使用需
求的話。</p>
<p><a href="http://briian.com/?p=6636">




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="07-Android-SMS-Backup"  />

</a></p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="08-Android-SMS-Backup"  />

</p>
<p>第5步
備份完成後，我們可以在Gmail信箱中看到多出一個「SMS」的標籤，按進去看裡面有一堆依照不同電話來源的手機簡 訊存檔。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="09-Android-SMS-Backup"  />

</p>
<p>要說缺點的話，它的備份記錄都是直接以電話號碼為寄件人，如果你記不住那麼一大堆數字的話，可能得再另外查一下通訊錄才知道是誰傳給你的。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Web开发利器-Aptana</title>
      <link>https://blog.alswl.com/2010/04/web-development-tool-aptana/</link>
      <pubDate>Wed, 07 Apr 2010 00:00:00 +0800</pubDate>
      
      <guid>https://blog.alswl.com/2010/04/web-development-tool-aptana/</guid>
      <description>闲逛时候意外发现了一款开发利器Aptana，介绍说是JavaScript编辑利器，我冲着试一试的心理去官网溜达了一圈，发现那篇介绍问完完全全错了，Aptan a哪里只是JavaScript编辑器啊，完全是Web开发18般武艺样样精通啊。 废话不多说，来自open-open的介绍（alswl懒得翻译官方文字了 ^_^） Aptana是一个非常强大,开源,专注于JavaScript的Ajax开发IDE。它的特</description>
      <content:encoded><![CDATA[<p>闲逛时候意外发现了一款开发利器Aptana，介绍说是JavaScript编辑利器，我冲着试一试的心理去官网溜达了一圈，发现那篇介绍问完完全全错了，Aptan
a哪里只是JavaScript编辑器啊，完全是Web开发18般武艺样样精通啊。</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201612/404.png" alt="image"  />

</p>
<p>废话不多说，来自open-open的介绍（alswl懒得翻译官方文字了 ^_^）</p>
<blockquote>
<p>Aptana是一个非常强大,开源,专注于JavaScript的Ajax开发IDE。它的特性包括：
*JavaScript,JavaScript函数,HTML,CSS语言的Code Assist功能。
*Outliner(大纲)：显示JavaScript,HTML和CSS的代码结构。</p>
</blockquote>
<blockquote>
</blockquote>
<blockquote>
<p>*支持JavaScript，HTML，CSS代码提示，包括JavaScript 自定函数</p>
</blockquote>
<p>*代码语法错误提示。<br />
*支持Aptana UI自定义和扩展。<br />
*支持跨平台。</p>
<ul>
<li>支持FTP/SFTP<br />
*调试JavaScript<br />
*支持流行AJAX框架的Code Assist 功能：AFLAX, Dojo, JQuery, MochiKit, Prototype, Rico, script.aculo.us, Yahoo UI, Ext<br />
*Adobe AIR与iPhone开发工具</li>
</ul>
<blockquote>
</blockquote>
<blockquote>
<p>其主页上还提供如何使用该开发工具的视频。</p>
</blockquote>
<p>看得你心动心痒痒了么，我也恨没有早认识Aptana几年，马上下载下来试用吧，友情提示一下，Aptana其实是Eclipse的插件，需要Eclipse支持哦。</p>
<h3 id="官方链接">官方链接</h3>
<p><a href="http://www.aptana.org/">Aptana 官方网站</a></p>
<p><a href="http://www.aptana.org/studio/download">Aptana Studio 下载地址</a></p>
<h3 id="简单教程">简单教程</h3>
<p>其实我个人觉得Aptana装上去就可以用的很溜了，只要你用过Eclipse JavaEE模块或者DreamWeaver之类的IDE。</p>
<p>唯一一个问题可能是编码，参考[qop&rsquo;s blog: Aptana Studio 1.0 設定 UTF-8 編碼](<a href="http://qops.blogspot.com/2007/11/aptana-">http://qops.blogspot.com/2007/11/aptana-</a>
studio-10-utf-8.html)可以搞定（发布后发现这个链接是BlogSpot的，为了照顾墙内看客，我把原文转载过来）</p>
<p><a href="http://www.cnblogs.com/jackielin/archive/2006/11/05/550422.html">不可多得的Javascript(AJAX)开发工具 － Aptana - BLACK JACK - 博客园</a></p>
<p><a href="http://http://www.cnblogs.com/jackielin/archive/2006/11/07/Aptana1.html">Aptana使用入门一：Code Assist - BLACK JACK - 博客园</a></p>
<p><a href="http://www.kuqin.com/developtool/20090318/40850.html">在Eclipse安装Aptana插件-开发工具- 编程环境</a></p>
<h3 id="aptana-studio-10-设定-utf-8编码">Aptana Studio 1.0 设定 UTF-8编码</h3>
<p>下面是转载过来的文章，在修改全局编码为UTF-
8之后，可能导致之前用GBK编码文件乱码，在具体的项目属性中修改即可，或者，大不了咱们全部转成UTF-8，通用嘛～</p>
<p>×××××××××以下转载×××××××××</p>
<p>




<img loading="lazy" src="https://d05fae.dijingchao.com/upload_dropbox/201004/aptana_set_utf8.png" alt="image"  />

</p>
<ol>
<li>
<p>點選指令選單上 Window &gt; Preferences&hellip;</p>
</li>
<li>
<p>在面板左側點選 General &gt; Workspace</p>
</li>
<li>
<p>在右下方的 Text file encoding 點選 other, 設定為「UTF-8」即可。</p>
</li>
</ol>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
